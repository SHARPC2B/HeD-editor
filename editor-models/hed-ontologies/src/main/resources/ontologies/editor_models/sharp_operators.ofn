Prefix(a:=<http://asu.edu/sharpc2b/ops-set#>)
Prefix(dc2:=<http://purl.org/NET/dc_owl2dl#>)
Prefix(dul:=<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#>)
Prefix(lmm:=<http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#>)
Prefix(ops:=<http://asu.edu/sharpc2b/ops#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(prr:=<http://asu.edu/sharpc2b/prr#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(opsb:=<http://asu.edu/sharpc2b/opsb#>)
Prefix(opsc:=<http://asu.edu/sharpc2b/opsc#>)
Prefix(opsd:=<http://asu.edu/sharpc2b/opsd#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(skos:=<http://www.w3.org/2004/02/skos/core#>)
Prefix(shops:=<http://asu.edu/sharpc2b/shops#>)
Prefix(IOLite:=<http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#>)
Prefix(dc2dul:=<http://asu.edu/sharpc2b/dc2dul#>)
Prefix(actions:=<http://asu.edu/sharpc2b/actions#>)
Prefix(skoslmm:=<http://asu.edu/sharpc2b/skoslmm#>)
Prefix(metadata:=<http://asu.edu/sharpc2b/metadata#>)
Prefix(skos-ext:=<http://asu.edu/sharpc2b/skos-ext#>)
Prefix(prr-sharp:=<http://asu.edu/sharpc2b/prr-sharp#>)
Prefix(sharp-master:=<http://asu.edu/sharpc2b/sharp-master#>)


Ontology(<http://asu.edu/sharpc2b/ops-set>
Import(<http://asu.edu/sharpc2b/ops>)

Declaration(ObjectProperty(a:ancestor))
Declaration(ObjectProperty(a:ancestors))
Declaration(ObjectProperty(a:asType))
Declaration(ObjectProperty(a:begin))
Declaration(ObjectProperty(a:caseItem))
Declaration(ObjectProperty(a:codeProperty))
Declaration(ObjectProperty(a:codes))
Declaration(ObjectProperty(a:collection))
Declaration(ObjectProperty(a:comparand))
Declaration(ObjectProperty(a:condition))
Declaration(ObjectProperty(a:dataType))
Declaration(ObjectProperty(a:date))
Declaration(ObjectProperty(a:dateProperty))
Declaration(ObjectProperty(a:dateRange))
Declaration(ObjectProperty(a:descendent))
Declaration(ObjectProperty(a:descendents))
Declaration(ObjectProperty(a:element))
Declaration(ObjectProperty(a:element_Ordinal))
Declaration(ObjectProperty(a:else))
Declaration(ObjectProperty(a:end))
Declaration(ObjectProperty(a:endDate))
Declaration(ObjectProperty(a:frequency))
Declaration(ObjectProperty(a:granularity_String))
Declaration(ObjectProperty(a:high_PhysicalQuantity))
Declaration(ObjectProperty(a:idProperty))
Declaration(ObjectProperty(a:index))
Declaration(ObjectProperty(a:interval))
Declaration(ObjectProperty(a:isType))
Declaration(ObjectProperty(a:length))
Declaration(ObjectProperty(a:low_PhysicalQuantity))
Declaration(ObjectProperty(a:numberOfPeriods))
Declaration(ObjectProperty(a:objectType))
Declaration(ObjectProperty(a:path))
Declaration(ObjectProperty(a:period))
Declaration(ObjectProperty(a:phase))
Declaration(ObjectProperty(a:precision))
Declaration(ObjectProperty(a:property))
Declaration(ObjectProperty(a:separator))
Declaration(ObjectProperty(a:source_List))
Declaration(ObjectProperty(a:source_Object))
Declaration(ObjectProperty(a:source_String))
Declaration(ObjectProperty(a:startDate))
Declaration(ObjectProperty(a:startIndex))
Declaration(ObjectProperty(a:string))
Declaration(ObjectProperty(a:stringToSplit))
Declaration(ObjectProperty(a:stringToSub))
Declaration(ObjectProperty(a:subject))
Declaration(ObjectProperty(a:subjectProperty))
Declaration(ObjectProperty(a:then))
Declaration(ObjectProperty(a:timeOffset))
Declaration(DataProperty(a:alignment))
Declaration(DataProperty(a:authority))
Declaration(DataProperty(a:beginOpen))
Declaration(DataProperty(a:capabilities))
Declaration(DataProperty(a:cardinality))
Declaration(DataProperty(a:code))
Declaration(DataProperty(a:codeSystem))
Declaration(DataProperty(a:codeSystemName))
Declaration(DataProperty(a:count))
Declaration(DataProperty(a:day))
Declaration(DataProperty(a:denominator))
Declaration(DataProperty(a:displayName))
Declaration(DataProperty(a:endOpen))
Declaration(DataProperty(a:extension))
Declaration(DataProperty(a:granularity))
Declaration(DataProperty(a:high))
Declaration(DataProperty(a:highClosed))
Declaration(DataProperty(a:high_dateTime))
Declaration(DataProperty(a:high_double))
Declaration(DataProperty(a:hour))
Declaration(DataProperty(a:id))
Declaration(DataProperty(a:isFlexible))
Declaration(DataProperty(a:isInitial))
Declaration(DataProperty(a:key))
Declaration(DataProperty(a:low))
Declaration(DataProperty(a:lowClosed))
Declaration(DataProperty(a:low_dateTime))
Declaration(DataProperty(a:low_double))
Declaration(DataProperty(a:millisecond))
Declaration(DataProperty(a:minute))
Declaration(DataProperty(a:month))
Declaration(DataProperty(a:name))
Declaration(DataProperty(a:numerator))
Declaration(DataProperty(a:orderBy))
Declaration(DataProperty(a:part))
Declaration(DataProperty(a:path_string))
Declaration(DataProperty(a:pattern))
Declaration(DataProperty(a:root))
Declaration(DataProperty(a:scope))
Declaration(DataProperty(a:second))
Declaration(DataProperty(a:strict))
Declaration(DataProperty(a:templateId))
Declaration(DataProperty(a:toType))
Declaration(DataProperty(a:triggerType))
Declaration(DataProperty(a:unit))
Declaration(DataProperty(a:use))
Declaration(DataProperty(a:useSubsumption))
Declaration(DataProperty(a:useValueSets))
Declaration(DataProperty(a:value))
Declaration(DataProperty(a:valueType))
Declaration(DataProperty(a:value_anyURI))
Declaration(DataProperty(a:value_boolean))
Declaration(DataProperty(a:value_dateTime))
Declaration(DataProperty(a:value_double))
Declaration(DataProperty(a:value_string))
Declaration(DataProperty(a:version))
Declaration(DataProperty(a:year))
Declaration(NamedIndividual(a:Abs))
Declaration(NamedIndividual(a:AbsCode))
Declaration(NamedIndividual(a:Add))
Declaration(NamedIndividual(a:AddCode))
Declaration(NamedIndividual(a:After))
Declaration(NamedIndividual(a:AfterCode))
Declaration(NamedIndividual(a:AllTrue))
Declaration(NamedIndividual(a:AllTrueCode))
Declaration(NamedIndividual(a:And))
Declaration(NamedIndividual(a:AndCode))
Declaration(NamedIndividual(a:AnyTrue))
Declaration(NamedIndividual(a:AnyTrueCode))
Declaration(NamedIndividual(a:As))
Declaration(NamedIndividual(a:AsCode))
Declaration(NamedIndividual(a:Avg))
Declaration(NamedIndividual(a:AvgCode))
Declaration(NamedIndividual(a:Before))
Declaration(NamedIndividual(a:BeforeCode))
Declaration(NamedIndividual(a:Begin))
Declaration(NamedIndividual(a:BeginCode))
Declaration(NamedIndividual(a:Case))
Declaration(NamedIndividual(a:CaseCode))
Declaration(NamedIndividual(a:Ceiling))
Declaration(NamedIndividual(a:CeilingCode))
Declaration(NamedIndividual(a:ClinicalRequest))
Declaration(NamedIndividual(a:ClinicalRequestCode))
Declaration(NamedIndividual(a:Coalesce))
Declaration(NamedIndividual(a:CoalesceCode))
Declaration(NamedIndividual(a:Combine))
Declaration(NamedIndividual(a:CombineCode))
Declaration(NamedIndividual(a:Concat))
Declaration(NamedIndividual(a:ConcatCode))
Declaration(NamedIndividual(a:Conditional))
Declaration(NamedIndividual(a:ConditionalCode))
Declaration(NamedIndividual(a:Contains))
Declaration(NamedIndividual(a:ContainsCode))
Declaration(NamedIndividual(a:Convert))
Declaration(NamedIndividual(a:ConvertCode))
Declaration(NamedIndividual(a:Count))
Declaration(NamedIndividual(a:CountCode))
Declaration(NamedIndividual(a:Current))
Declaration(NamedIndividual(a:CurrentCode))
Declaration(NamedIndividual(a:DataRequest))
Declaration(NamedIndividual(a:DataRequestCode))
Declaration(NamedIndividual(a:Date))
Declaration(NamedIndividual(a:DateAdd))
Declaration(NamedIndividual(a:DateAddCode))
Declaration(NamedIndividual(a:DateCode))
Declaration(NamedIndividual(a:DateDiff))
Declaration(NamedIndividual(a:DateDiffCode))
Declaration(NamedIndividual(a:DatePart))
Declaration(NamedIndividual(a:DatePartCode))
Declaration(NamedIndividual(a:Difference))
Declaration(NamedIndividual(a:DifferenceCode))
Declaration(NamedIndividual(a:Distinct))
Declaration(NamedIndividual(a:DistinctCode))
Declaration(NamedIndividual(a:Divide))
Declaration(NamedIndividual(a:DivideCode))
Declaration(NamedIndividual(a:End))
Declaration(NamedIndividual(a:EndCode))
Declaration(NamedIndividual(a:Equal))
Declaration(NamedIndividual(a:EqualCode))
Declaration(NamedIndividual(a:ExpressionRef))
Declaration(NamedIndividual(a:ExpressionRefCode))
Declaration(NamedIndividual(a:Filter))
Declaration(NamedIndividual(a:FilterCode))
Declaration(NamedIndividual(a:First))
Declaration(NamedIndividual(a:FirstCode))
Declaration(NamedIndividual(a:Floor))
Declaration(NamedIndividual(a:FloorCode))
Declaration(NamedIndividual(a:ForEach))
Declaration(NamedIndividual(a:ForEachCode))
Declaration(NamedIndividual(a:Greater))
Declaration(NamedIndividual(a:GreaterCode))
Declaration(NamedIndividual(a:GreaterOrEqual))
Declaration(NamedIndividual(a:GreaterOrEqualCode))
Declaration(NamedIndividual(a:IfNull))
Declaration(NamedIndividual(a:IfNullCode))
Declaration(NamedIndividual(a:In))
Declaration(NamedIndividual(a:InCode))
Declaration(NamedIndividual(a:InValueSet))
Declaration(NamedIndividual(a:InValueSetCode))
Declaration(NamedIndividual(a:IndexOf))
Declaration(NamedIndividual(a:IndexOfCode))
Declaration(NamedIndividual(a:Indexer))
Declaration(NamedIndividual(a:IndexerCode))
Declaration(NamedIndividual(a:Intersect))
Declaration(NamedIndividual(a:IntersectCode))
Declaration(NamedIndividual(a:Interval))
Declaration(NamedIndividual(a:IntervalCode))
Declaration(NamedIndividual(a:Is))
Declaration(NamedIndividual(a:IsCode))
Declaration(NamedIndividual(a:IsEmpty))
Declaration(NamedIndividual(a:IsEmptyCode))
Declaration(NamedIndividual(a:IsNotEmpty))
Declaration(NamedIndividual(a:IsNotEmptyCode))
Declaration(NamedIndividual(a:IsNull))
Declaration(NamedIndividual(a:IsNullCode))
Declaration(NamedIndividual(a:Last))
Declaration(NamedIndividual(a:LastCode))
Declaration(NamedIndividual(a:Length))
Declaration(NamedIndividual(a:LengthCode))
Declaration(NamedIndividual(a:Less))
Declaration(NamedIndividual(a:LessCode))
Declaration(NamedIndividual(a:LessOrEqual))
Declaration(NamedIndividual(a:LessOrEqualCode))
Declaration(NamedIndividual(a:List))
Declaration(NamedIndividual(a:ListCode))
Declaration(NamedIndividual(a:Ln))
Declaration(NamedIndividual(a:LnCode))
Declaration(NamedIndividual(a:Log))
Declaration(NamedIndividual(a:LogCode))
Declaration(NamedIndividual(a:Lower))
Declaration(NamedIndividual(a:LowerCode))
Declaration(NamedIndividual(a:Max))
Declaration(NamedIndividual(a:MaxCode))
Declaration(NamedIndividual(a:Meets))
Declaration(NamedIndividual(a:MeetsCode))
Declaration(NamedIndividual(a:Min))
Declaration(NamedIndividual(a:MinCode))
Declaration(NamedIndividual(a:Modulo))
Declaration(NamedIndividual(a:ModuloCode))
Declaration(NamedIndividual(a:Multiply))
Declaration(NamedIndividual(a:MultiplyCode))
Declaration(NamedIndividual(a:Negate))
Declaration(NamedIndividual(a:NegateCode))
Declaration(NamedIndividual(a:Not))
Declaration(NamedIndividual(a:NotCode))
Declaration(NamedIndividual(a:NotEqual))
Declaration(NamedIndividual(a:NotEqualCode))
Declaration(NamedIndividual(a:Now))
Declaration(NamedIndividual(a:NowCode))
Declaration(NamedIndividual(a:Null))
Declaration(NamedIndividual(a:NullCode))
Declaration(NamedIndividual(a:ObjectDescriptor))
Declaration(NamedIndividual(a:ObjectDescriptorCode))
Declaration(NamedIndividual(a:ObjectExpression))
Declaration(NamedIndividual(a:ObjectExpressionCode))
Declaration(NamedIndividual(a:ObjectRedefine))
Declaration(NamedIndividual(a:ObjectRedefineCode))
Declaration(NamedIndividual(a:Or))
Declaration(NamedIndividual(a:OrCode))
Declaration(NamedIndividual(a:Overlaps))
Declaration(NamedIndividual(a:OverlapsCode))
Declaration(NamedIndividual(a:ParameterRef))
Declaration(NamedIndividual(a:ParameterRefCode))
Declaration(NamedIndividual(a:Pos))
Declaration(NamedIndividual(a:PosCode))
Declaration(NamedIndividual(a:Power))
Declaration(NamedIndividual(a:PowerCode))
Declaration(NamedIndividual(a:Pred))
Declaration(NamedIndividual(a:PredCode))
Declaration(NamedIndividual(a:ProperContains))
Declaration(NamedIndividual(a:ProperContainsCode))
Declaration(NamedIndividual(a:ProperIn))
Declaration(NamedIndividual(a:ProperInCode))
Declaration(NamedIndividual(a:Property))
Declaration(NamedIndividual(a:PropertyCode))
Declaration(NamedIndividual(a:Round))
Declaration(NamedIndividual(a:RoundCode))
Declaration(NamedIndividual(a:SetSubsumes))
Declaration(NamedIndividual(a:SetSubsumesCode))
Declaration(NamedIndividual(a:Sort))
Declaration(NamedIndividual(a:SortCode))
Declaration(NamedIndividual(a:Split))
Declaration(NamedIndividual(a:SplitCode))
Declaration(NamedIndividual(a:Substring))
Declaration(NamedIndividual(a:SubstringCode))
Declaration(NamedIndividual(a:Subsumes))
Declaration(NamedIndividual(a:SubsumesCode))
Declaration(NamedIndividual(a:Subtract))
Declaration(NamedIndividual(a:SubtractCode))
Declaration(NamedIndividual(a:Succ))
Declaration(NamedIndividual(a:SuccCode))
Declaration(NamedIndividual(a:Sum))
Declaration(NamedIndividual(a:SumCode))
Declaration(NamedIndividual(a:Today))
Declaration(NamedIndividual(a:TodayCode))
Declaration(NamedIndividual(a:TruncatedDivide))
Declaration(NamedIndividual(a:TruncatedDivideCode))
Declaration(NamedIndividual(a:Union))
Declaration(NamedIndividual(a:UnionCode))
Declaration(NamedIndividual(a:Upper))
Declaration(NamedIndividual(a:UpperCode))
Declaration(NamedIndividual(a:ValueSet))
Declaration(NamedIndividual(a:ValueSetCode))
Declaration(NamedIndividual(a:Within))
Declaration(NamedIndividual(a:WithinCode))
EquivalentClasses(a:AbsExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Abs"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:AbsExpression ops:NumberExpression)
SubClassOf(a:AbsExpression ops:OperatorExpression)
SubClassOf(a:AbsExpression ops:UnaryExpression)
SubClassOf(a:AbsExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:AbsExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Abs"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:AddExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Add"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:NumberExpression)))
SubClassOf(a:AddExpression ops:BinaryExpression)
SubClassOf(a:AddExpression ops:NumberExpression)
SubClassOf(a:AddExpression ops:OperatorExpression)
SubClassOf(a:AddExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:AddExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Add"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:AddExpression ObjectAllValuesFrom(ops:secondOperand ops:NumberExpression))
EquivalentClasses(a:AddressLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "AddressLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:part xsd:string) DataSomeValuesFrom(a:use xsd:string)))
SubClassOf(a:AddressLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:AddressLiteralExpression ops:StringExpression)
SubClassOf(a:AddressLiteralExpression a:PartDomain)
SubClassOf(a:AddressLiteralExpression a:UseDomain)
SubClassOf(a:AddressLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "AddressLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:AddressLiteralExpression DataAllValuesFrom(a:part xsd:string))
SubClassOf(a:AddressLiteralExpression DataAllValuesFrom(a:use xsd:string))
SubClassOf(a:AddressLiteralExpression DataMaxCardinality(1 a:part xsd:string))
SubClassOf(a:AddressLiteralExpression DataMaxCardinality(1 a:use xsd:string))
EquivalentClasses(a:AfterExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:IntervalExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "After"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:IntervalExpression)))
SubClassOf(a:AfterExpression ops:BinaryExpression)
SubClassOf(a:AfterExpression ops:BooleanExpression)
SubClassOf(a:AfterExpression ops:OperatorExpression)
SubClassOf(a:AfterExpression ObjectAllValuesFrom(ops:firstOperand ops:IntervalExpression))
SubClassOf(a:AfterExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "After"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:AfterExpression ObjectAllValuesFrom(ops:secondOperand ops:IntervalExpression))
EquivalentClasses(a:AllTrueExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "AllTrue"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:path_string xsd:string)))
SubClassOf(a:AllTrueExpression ops:BooleanExpression)
SubClassOf(a:AllTrueExpression ops:MiscExpression)
SubClassOf(a:AllTrueExpression ops:OperatorExpression)
SubClassOf(a:AllTrueExpression a:Path_stringDomain)
SubClassOf(a:AllTrueExpression a:Source_ListDomain)
SubClassOf(a:AllTrueExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "AllTrue"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:AllTrueExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:AllTrueExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:AllTrueExpression DataAllValuesFrom(a:path_string xsd:string))
SubClassOf(a:AllTrueExpression DataMaxCardinality(1 a:path_string xsd:string))
EquivalentClasses(a:AndExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:hasOperand ops:BooleanExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "And"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:AndExpression ops:BooleanExpression)
SubClassOf(a:AndExpression ops:NAryExpression)
SubClassOf(a:AndExpression ops:OperatorExpression)
SubClassOf(a:AndExpression ObjectAllValuesFrom(ops:hasOperand ops:BooleanExpression))
SubClassOf(a:AndExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "And"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:AnyTrueExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "AnyTrue"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:path_string xsd:string)))
SubClassOf(a:AnyTrueExpression ops:BooleanExpression)
SubClassOf(a:AnyTrueExpression ops:MiscExpression)
SubClassOf(a:AnyTrueExpression ops:OperatorExpression)
SubClassOf(a:AnyTrueExpression a:Path_stringDomain)
SubClassOf(a:AnyTrueExpression a:Source_ListDomain)
SubClassOf(a:AnyTrueExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "AnyTrue"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:AnyTrueExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:AnyTrueExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:AnyTrueExpression DataAllValuesFrom(a:path_string xsd:string))
SubClassOf(a:AnyTrueExpression DataMaxCardinality(1 a:path_string xsd:string))
EquivalentClasses(a:AsExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:OperatorExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "As"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:asType ops:DomainClassExpression) DataSomeValuesFrom(a:strict xsd:boolean)))
SubClassOf(a:AsExpression ops:OperatorExpression)
SubClassOf(a:AsExpression ops:UnaryExpression)
SubClassOf(a:AsExpression ObjectAllValuesFrom(ops:firstOperand ops:OperatorExpression))
SubClassOf(a:AsExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "As"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:AsExpression ObjectAllValuesFrom(a:asType ops:DomainClassExpression))
SubClassOf(a:AsExpression ObjectMaxCardinality(1 a:asType ops:DomainClassExpression))
SubClassOf(a:AsExpression DataAllValuesFrom(a:strict xsd:boolean))
SubClassOf(a:AsExpression DataMaxCardinality(1 a:strict xsd:boolean))
EquivalentClasses(a:AuthorityDomain ObjectUnionOf(a:ValueSetExpression a:InValueSetExpression))
EquivalentClasses(a:AvgExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Avg"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:path_string xsd:string)))
SubClassOf(a:AvgExpression ops:MiscExpression)
SubClassOf(a:AvgExpression ops:NumberExpression)
SubClassOf(a:AvgExpression ops:OperatorExpression)
SubClassOf(a:AvgExpression a:Path_stringDomain)
SubClassOf(a:AvgExpression a:Source_ListDomain)
SubClassOf(a:AvgExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Avg"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:AvgExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:AvgExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:AvgExpression DataAllValuesFrom(a:path_string xsd:string))
SubClassOf(a:AvgExpression DataMaxCardinality(1 a:path_string xsd:string))
EquivalentClasses(a:BeforeExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:IntervalExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Before"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:IntervalExpression)))
SubClassOf(a:BeforeExpression ops:BinaryExpression)
SubClassOf(a:BeforeExpression ops:BooleanExpression)
SubClassOf(a:BeforeExpression ops:OperatorExpression)
SubClassOf(a:BeforeExpression ObjectAllValuesFrom(ops:firstOperand ops:IntervalExpression))
SubClassOf(a:BeforeExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Before"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:BeforeExpression ObjectAllValuesFrom(ops:secondOperand ops:IntervalExpression))
EquivalentClasses(a:BeginExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:IntervalExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Begin"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:BeginExpression ops:OperatorExpression)
SubClassOf(a:BeginExpression ops:OrdinalExpression)
SubClassOf(a:BeginExpression ops:UnaryExpression)
SubClassOf(a:BeginExpression ObjectAllValuesFrom(ops:firstOperand ops:IntervalExpression))
SubClassOf(a:BeginExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Begin"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:BooleanLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "BooleanLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:value_boolean xsd:boolean)))
SubClassOf(a:BooleanLiteralExpression ops:BooleanExpression)
SubClassOf(a:BooleanLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:BooleanLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "BooleanLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:BooleanLiteralExpression DataAllValuesFrom(a:value_boolean xsd:boolean))
SubClassOf(a:BooleanLiteralExpression DataMaxCardinality(1 a:value_boolean xsd:boolean))
EquivalentClasses(a:CardinalityDomain ObjectUnionOf(a:DataRequestExpression a:ClinicalRequestExpression))
EquivalentClasses(a:CaseExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Case"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:caseItem ops:AnyExpression) ObjectSomeValuesFrom(a:comparand ops:AnyExpression) ObjectSomeValuesFrom(a:else ops:AnyExpression)))
SubClassOf(a:CaseExpression ops:MiscExpression)
SubClassOf(a:CaseExpression ops:OperatorExpression)
SubClassOf(a:CaseExpression a:ElseDomain)
SubClassOf(a:CaseExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Case"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:CaseExpression ObjectAllValuesFrom(a:caseItem ops:AnyExpression))
SubClassOf(a:CaseExpression ObjectAllValuesFrom(a:comparand ops:AnyExpression))
SubClassOf(a:CaseExpression ObjectAllValuesFrom(a:else ops:AnyExpression))
SubClassOf(a:CaseExpression ObjectMaxCardinality(1 a:caseItem ops:AnyExpression))
SubClassOf(a:CaseExpression ObjectMaxCardinality(1 a:comparand ops:AnyExpression))
SubClassOf(a:CaseExpression ObjectMaxCardinality(1 a:else ops:AnyExpression))
EquivalentClasses(a:CeilingExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Ceiling"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:CeilingExpression ops:IntExpression)
SubClassOf(a:CeilingExpression ops:OperatorExpression)
SubClassOf(a:CeilingExpression ops:UnaryExpression)
SubClassOf(a:CeilingExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:CeilingExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Ceiling"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:ClinicalRequestExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ClinicalRequest"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:codeProperty ops:DomainPropertyExpression) ObjectSomeValuesFrom(a:codes ops:ListExpression) ObjectSomeValuesFrom(a:dataType ops:DomainClassExpression) ObjectSomeValuesFrom(a:dateProperty ops:DomainPropertyExpression) ObjectSomeValuesFrom(a:dateRange ops:IntervalExpression) ObjectSomeValuesFrom(a:idProperty ops:DomainPropertyExpression) ObjectSomeValuesFrom(a:subject ops:AnyExpression) ObjectSomeValuesFrom(a:subjectProperty ops:DomainPropertyExpression) ObjectSomeValuesFrom(a:timeOffset ops:IntExpression) DataSomeValuesFrom(a:cardinality xsd:string) DataSomeValuesFrom(a:isInitial xsd:boolean) DataSomeValuesFrom(a:scope xsd:string) DataSomeValuesFrom(a:templateId xsd:string) DataSomeValuesFrom(a:triggerType xsd:string) DataSomeValuesFrom(a:useSubsumption xsd:boolean) DataSomeValuesFrom(a:useValueSets xsd:boolean)))
SubClassOf(a:ClinicalRequestExpression ops:ClinicalRequestExpression)
SubClassOf(a:ClinicalRequestExpression ops:MiscExpression)
SubClassOf(a:ClinicalRequestExpression ops:OperatorExpression)
SubClassOf(a:ClinicalRequestExpression a:CardinalityDomain)
SubClassOf(a:ClinicalRequestExpression a:DataTypeDomain)
SubClassOf(a:ClinicalRequestExpression a:IdPropertyDomain)
SubClassOf(a:ClinicalRequestExpression a:IsInitialDomain)
SubClassOf(a:ClinicalRequestExpression a:ScopeDomain)
SubClassOf(a:ClinicalRequestExpression a:TemplateIdDomain)
SubClassOf(a:ClinicalRequestExpression a:TimeOffsetDomain)
SubClassOf(a:ClinicalRequestExpression a:TriggerTypeDomain)
SubClassOf(a:ClinicalRequestExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ClinicalRequest"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ClinicalRequestExpression ObjectAllValuesFrom(a:codeProperty ops:DomainPropertyExpression))
SubClassOf(a:ClinicalRequestExpression ObjectAllValuesFrom(a:codes ops:ListExpression))
SubClassOf(a:ClinicalRequestExpression ObjectAllValuesFrom(a:dataType ops:DomainClassExpression))
SubClassOf(a:ClinicalRequestExpression ObjectAllValuesFrom(a:dateProperty ops:DomainPropertyExpression))
SubClassOf(a:ClinicalRequestExpression ObjectAllValuesFrom(a:dateRange ops:IntervalExpression))
SubClassOf(a:ClinicalRequestExpression ObjectAllValuesFrom(a:idProperty ops:DomainPropertyExpression))
SubClassOf(a:ClinicalRequestExpression ObjectAllValuesFrom(a:subject ops:AnyExpression))
SubClassOf(a:ClinicalRequestExpression ObjectAllValuesFrom(a:subjectProperty ops:DomainPropertyExpression))
SubClassOf(a:ClinicalRequestExpression ObjectAllValuesFrom(a:timeOffset ops:IntExpression))
SubClassOf(a:ClinicalRequestExpression ObjectMaxCardinality(1 a:codeProperty ops:DomainPropertyExpression))
SubClassOf(a:ClinicalRequestExpression ObjectMaxCardinality(1 a:codes ops:ListExpression))
SubClassOf(a:ClinicalRequestExpression ObjectMaxCardinality(1 a:dataType ops:DomainClassExpression))
SubClassOf(a:ClinicalRequestExpression ObjectMaxCardinality(1 a:dateProperty ops:DomainPropertyExpression))
SubClassOf(a:ClinicalRequestExpression ObjectMaxCardinality(1 a:dateRange ops:IntervalExpression))
SubClassOf(a:ClinicalRequestExpression ObjectMaxCardinality(1 a:idProperty ops:DomainPropertyExpression))
SubClassOf(a:ClinicalRequestExpression ObjectMaxCardinality(1 a:subject ops:AnyExpression))
SubClassOf(a:ClinicalRequestExpression ObjectMaxCardinality(1 a:subjectProperty ops:DomainPropertyExpression))
SubClassOf(a:ClinicalRequestExpression ObjectMaxCardinality(1 a:timeOffset ops:IntExpression))
SubClassOf(a:ClinicalRequestExpression DataAllValuesFrom(a:cardinality xsd:string))
SubClassOf(a:ClinicalRequestExpression DataAllValuesFrom(a:isInitial xsd:boolean))
SubClassOf(a:ClinicalRequestExpression DataAllValuesFrom(a:scope xsd:string))
SubClassOf(a:ClinicalRequestExpression DataAllValuesFrom(a:templateId xsd:string))
SubClassOf(a:ClinicalRequestExpression DataAllValuesFrom(a:triggerType xsd:string))
SubClassOf(a:ClinicalRequestExpression DataAllValuesFrom(a:useSubsumption xsd:boolean))
SubClassOf(a:ClinicalRequestExpression DataAllValuesFrom(a:useValueSets xsd:boolean))
SubClassOf(a:ClinicalRequestExpression DataMaxCardinality(1 a:cardinality xsd:string))
SubClassOf(a:ClinicalRequestExpression DataMaxCardinality(1 a:isInitial xsd:boolean))
SubClassOf(a:ClinicalRequestExpression DataMaxCardinality(1 a:scope xsd:string))
SubClassOf(a:ClinicalRequestExpression DataMaxCardinality(1 a:templateId xsd:string))
SubClassOf(a:ClinicalRequestExpression DataMaxCardinality(1 a:triggerType xsd:string))
SubClassOf(a:ClinicalRequestExpression DataMaxCardinality(1 a:useSubsumption xsd:boolean))
SubClassOf(a:ClinicalRequestExpression DataMaxCardinality(1 a:useValueSets xsd:boolean))
EquivalentClasses(a:CoalesceExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:hasOperand ops:OperatorExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Coalesce"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:CoalesceExpression ops:NAryExpression)
SubClassOf(a:CoalesceExpression ops:OperatorExpression)
SubClassOf(a:CoalesceExpression ObjectAllValuesFrom(ops:hasOperand ops:OperatorExpression))
SubClassOf(a:CoalesceExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Coalesce"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:CodeDomain ObjectUnionOf(a:CodeLiteralExpression a:CodedOrdinalLiteralExpression a:SimpleCodeLiteralExpression))
EquivalentClasses(a:CodeLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "CodeLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:code xsd:string) DataSomeValuesFrom(a:codeSystem xsd:string) DataSomeValuesFrom(a:codeSystemName xsd:string) DataSomeValuesFrom(a:displayName xsd:string)))
SubClassOf(a:CodeLiteralExpression ops:CodeExpression)
SubClassOf(a:CodeLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:CodeLiteralExpression a:CodeDomain)
SubClassOf(a:CodeLiteralExpression a:CodeSystemDomain)
SubClassOf(a:CodeLiteralExpression a:CodeSystemNameDomain)
SubClassOf(a:CodeLiteralExpression a:DisplayNameDomain)
SubClassOf(a:CodeLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "CodeLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:CodeLiteralExpression DataAllValuesFrom(a:code xsd:string))
SubClassOf(a:CodeLiteralExpression DataAllValuesFrom(a:codeSystem xsd:string))
SubClassOf(a:CodeLiteralExpression DataAllValuesFrom(a:codeSystemName xsd:string))
SubClassOf(a:CodeLiteralExpression DataAllValuesFrom(a:displayName xsd:string))
SubClassOf(a:CodeLiteralExpression DataMaxCardinality(1 a:code xsd:string))
SubClassOf(a:CodeLiteralExpression DataMaxCardinality(1 a:codeSystem xsd:string))
SubClassOf(a:CodeLiteralExpression DataMaxCardinality(1 a:codeSystemName xsd:string))
SubClassOf(a:CodeLiteralExpression DataMaxCardinality(1 a:displayName xsd:string))
EquivalentClasses(a:CodeSystemDomain ObjectUnionOf(a:CodedOrdinalLiteralExpression a:CodeLiteralExpression))
EquivalentClasses(a:CodeSystemNameDomain ObjectUnionOf(a:CodedOrdinalLiteralExpression a:CodeLiteralExpression))
EquivalentClasses(a:CodedOrdinalLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "CodedOrdinalLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:code xsd:string) DataSomeValuesFrom(a:codeSystem xsd:string) DataSomeValuesFrom(a:codeSystemName xsd:string) DataSomeValuesFrom(a:displayName xsd:string) DataSomeValuesFrom(a:value_double xsd:double)))
SubClassOf(a:CodedOrdinalLiteralExpression ops:CodeExpression)
SubClassOf(a:CodedOrdinalLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:CodedOrdinalLiteralExpression a:CodeDomain)
SubClassOf(a:CodedOrdinalLiteralExpression a:CodeSystemDomain)
SubClassOf(a:CodedOrdinalLiteralExpression a:CodeSystemNameDomain)
SubClassOf(a:CodedOrdinalLiteralExpression a:DisplayNameDomain)
SubClassOf(a:CodedOrdinalLiteralExpression a:Value_doubleDomain)
SubClassOf(a:CodedOrdinalLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "CodedOrdinalLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:CodedOrdinalLiteralExpression DataAllValuesFrom(a:code xsd:string))
SubClassOf(a:CodedOrdinalLiteralExpression DataAllValuesFrom(a:codeSystem xsd:string))
SubClassOf(a:CodedOrdinalLiteralExpression DataAllValuesFrom(a:codeSystemName xsd:string))
SubClassOf(a:CodedOrdinalLiteralExpression DataAllValuesFrom(a:displayName xsd:string))
SubClassOf(a:CodedOrdinalLiteralExpression DataAllValuesFrom(a:value_double xsd:double))
SubClassOf(a:CodedOrdinalLiteralExpression DataMaxCardinality(1 a:code xsd:string))
SubClassOf(a:CodedOrdinalLiteralExpression DataMaxCardinality(1 a:codeSystem xsd:string))
SubClassOf(a:CodedOrdinalLiteralExpression DataMaxCardinality(1 a:codeSystemName xsd:string))
SubClassOf(a:CodedOrdinalLiteralExpression DataMaxCardinality(1 a:displayName xsd:string))
SubClassOf(a:CodedOrdinalLiteralExpression DataMaxCardinality(1 a:value_double xsd:double))
EquivalentClasses(a:CombineExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Combine"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:separator ops:StringExpression) ObjectSomeValuesFrom(a:source_String ops:StringExpression)))
SubClassOf(a:CombineExpression ops:MiscExpression)
SubClassOf(a:CombineExpression ops:OperatorExpression)
SubClassOf(a:CombineExpression ops:StringExpression)
SubClassOf(a:CombineExpression a:SeparatorDomain)
SubClassOf(a:CombineExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Combine"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:CombineExpression ObjectAllValuesFrom(a:separator ops:StringExpression))
SubClassOf(a:CombineExpression ObjectAllValuesFrom(a:source_String ops:StringExpression))
SubClassOf(a:CombineExpression ObjectMaxCardinality(1 a:separator ops:StringExpression))
SubClassOf(a:CombineExpression ObjectMaxCardinality(1 a:source_String ops:StringExpression))
EquivalentClasses(a:ComplexLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ComplexLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:value_string xsd:string)))
SubClassOf(a:ComplexLiteralExpression ops:OperatorExpression)
SubClassOf(a:ComplexLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:ComplexLiteralExpression a:Value_stringDomain)
SubClassOf(a:ComplexLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ComplexLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ComplexLiteralExpression DataAllValuesFrom(a:value_string xsd:string))
SubClassOf(a:ComplexLiteralExpression DataMaxCardinality(1 a:value_string xsd:string))
EquivalentClasses(a:ConcatExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:hasOperand ops:StringExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Concat"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:ConcatExpression ops:NAryExpression)
SubClassOf(a:ConcatExpression ops:OperatorExpression)
SubClassOf(a:ConcatExpression ops:StringExpression)
SubClassOf(a:ConcatExpression ObjectAllValuesFrom(ops:hasOperand ops:StringExpression))
SubClassOf(a:ConcatExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Concat"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:ConditionDomain ObjectUnionOf(a:FilterExpression a:ConditionalExpression))
EquivalentClasses(a:ConditionalExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Conditional"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:condition ops:BooleanExpression) ObjectSomeValuesFrom(a:else ops:AnyExpression) ObjectSomeValuesFrom(a:then ops:AnyExpression)))
SubClassOf(a:ConditionalExpression ops:MiscExpression)
SubClassOf(a:ConditionalExpression ops:OperatorExpression)
SubClassOf(a:ConditionalExpression a:ConditionDomain)
SubClassOf(a:ConditionalExpression a:ElseDomain)
SubClassOf(a:ConditionalExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Conditional"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ConditionalExpression ObjectAllValuesFrom(a:condition ops:BooleanExpression))
SubClassOf(a:ConditionalExpression ObjectAllValuesFrom(a:else ops:AnyExpression))
SubClassOf(a:ConditionalExpression ObjectAllValuesFrom(a:then ops:AnyExpression))
SubClassOf(a:ConditionalExpression ObjectMaxCardinality(1 a:condition ops:BooleanExpression))
SubClassOf(a:ConditionalExpression ObjectMaxCardinality(1 a:else ops:AnyExpression))
SubClassOf(a:ConditionalExpression ObjectMaxCardinality(1 a:then ops:AnyExpression))
EquivalentClasses(a:ContainsExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Contains"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:element ops:AnyExpression) ObjectSomeValuesFrom(a:source_List ops:ListExpression)))
SubClassOf(a:ContainsExpression ops:BooleanExpression)
SubClassOf(a:ContainsExpression ops:MiscExpression)
SubClassOf(a:ContainsExpression ops:OperatorExpression)
SubClassOf(a:ContainsExpression a:ElementDomain)
SubClassOf(a:ContainsExpression a:Source_ListDomain)
SubClassOf(a:ContainsExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Contains"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ContainsExpression ObjectAllValuesFrom(a:element ops:AnyExpression))
SubClassOf(a:ContainsExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:ContainsExpression ObjectMaxCardinality(1 a:element ops:AnyExpression))
SubClassOf(a:ContainsExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
EquivalentClasses(a:ConvertExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:OperatorExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Convert"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:toType xsd:anyURI)))
SubClassOf(a:ConvertExpression ops:OperatorExpression)
SubClassOf(a:ConvertExpression ops:UnaryExpression)
SubClassOf(a:ConvertExpression ObjectAllValuesFrom(ops:firstOperand ops:OperatorExpression))
SubClassOf(a:ConvertExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Convert"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ConvertExpression DataAllValuesFrom(a:toType xsd:anyURI))
SubClassOf(a:ConvertExpression DataMaxCardinality(1 a:toType xsd:anyURI))
EquivalentClasses(a:CountExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Count"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:path_string xsd:string)))
SubClassOf(a:CountExpression ops:IntExpression)
SubClassOf(a:CountExpression ops:MiscExpression)
SubClassOf(a:CountExpression ops:OperatorExpression)
SubClassOf(a:CountExpression a:Path_stringDomain)
SubClassOf(a:CountExpression a:Source_ListDomain)
SubClassOf(a:CountExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Count"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:CountExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:CountExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:CountExpression DataAllValuesFrom(a:path_string xsd:string))
SubClassOf(a:CountExpression DataMaxCardinality(1 a:path_string xsd:string))
EquivalentClasses(a:CurrentExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Current"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:scope xsd:string)))
SubClassOf(a:CurrentExpression ops:MiscExpression)
SubClassOf(a:CurrentExpression ops:ObjectExpression)
SubClassOf(a:CurrentExpression ops:OperatorExpression)
SubClassOf(a:CurrentExpression a:ScopeDomain)
SubClassOf(a:CurrentExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Current"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:CurrentExpression DataAllValuesFrom(a:scope xsd:string))
SubClassOf(a:CurrentExpression DataMaxCardinality(1 a:scope xsd:string))
EquivalentClasses(a:DataRequestExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "DataRequest"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:dataType ops:DomainClassExpression) ObjectSomeValuesFrom(a:idProperty ops:DomainPropertyExpression) ObjectSomeValuesFrom(a:timeOffset ops:IntExpression) DataSomeValuesFrom(a:cardinality xsd:string) DataSomeValuesFrom(a:isInitial xsd:boolean) DataSomeValuesFrom(a:scope xsd:string) DataSomeValuesFrom(a:templateId xsd:string) DataSomeValuesFrom(a:triggerType xsd:string)))
SubClassOf(a:DataRequestExpression ops:ClinicalRequestExpression)
SubClassOf(a:DataRequestExpression ops:MiscExpression)
SubClassOf(a:DataRequestExpression ops:OperatorExpression)
SubClassOf(a:DataRequestExpression a:CardinalityDomain)
SubClassOf(a:DataRequestExpression a:DataTypeDomain)
SubClassOf(a:DataRequestExpression a:IdPropertyDomain)
SubClassOf(a:DataRequestExpression a:IsInitialDomain)
SubClassOf(a:DataRequestExpression a:ScopeDomain)
SubClassOf(a:DataRequestExpression a:TemplateIdDomain)
SubClassOf(a:DataRequestExpression a:TimeOffsetDomain)
SubClassOf(a:DataRequestExpression a:TriggerTypeDomain)
SubClassOf(a:DataRequestExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "DataRequest"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:DataRequestExpression ObjectAllValuesFrom(a:dataType ops:DomainClassExpression))
SubClassOf(a:DataRequestExpression ObjectAllValuesFrom(a:idProperty ops:DomainPropertyExpression))
SubClassOf(a:DataRequestExpression ObjectAllValuesFrom(a:timeOffset ops:IntExpression))
SubClassOf(a:DataRequestExpression ObjectMaxCardinality(1 a:dataType ops:DomainClassExpression))
SubClassOf(a:DataRequestExpression ObjectMaxCardinality(1 a:idProperty ops:DomainPropertyExpression))
SubClassOf(a:DataRequestExpression ObjectMaxCardinality(1 a:timeOffset ops:IntExpression))
SubClassOf(a:DataRequestExpression DataAllValuesFrom(a:cardinality xsd:string))
SubClassOf(a:DataRequestExpression DataAllValuesFrom(a:isInitial xsd:boolean))
SubClassOf(a:DataRequestExpression DataAllValuesFrom(a:scope xsd:string))
SubClassOf(a:DataRequestExpression DataAllValuesFrom(a:templateId xsd:string))
SubClassOf(a:DataRequestExpression DataAllValuesFrom(a:triggerType xsd:string))
SubClassOf(a:DataRequestExpression DataMaxCardinality(1 a:cardinality xsd:string))
SubClassOf(a:DataRequestExpression DataMaxCardinality(1 a:isInitial xsd:boolean))
SubClassOf(a:DataRequestExpression DataMaxCardinality(1 a:scope xsd:string))
SubClassOf(a:DataRequestExpression DataMaxCardinality(1 a:templateId xsd:string))
SubClassOf(a:DataRequestExpression DataMaxCardinality(1 a:triggerType xsd:string))
EquivalentClasses(a:DataTypeDomain ObjectUnionOf(a:DataRequestExpression a:ClinicalRequestExpression))
EquivalentClasses(a:DateAddExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "DateAdd"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:date ops:DateExpression) ObjectSomeValuesFrom(a:numberOfPeriods ops:IntExpression) DataSomeValuesFrom(a:granularity xsd:string)))
SubClassOf(a:DateAddExpression ops:DateExpression)
SubClassOf(a:DateAddExpression ops:MiscExpression)
SubClassOf(a:DateAddExpression ops:OperatorExpression)
SubClassOf(a:DateAddExpression a:DateDomain)
SubClassOf(a:DateAddExpression a:GranularityDomain)
SubClassOf(a:DateAddExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "DateAdd"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:DateAddExpression ObjectAllValuesFrom(a:date ops:DateExpression))
SubClassOf(a:DateAddExpression ObjectAllValuesFrom(a:numberOfPeriods ops:IntExpression))
SubClassOf(a:DateAddExpression ObjectMaxCardinality(1 a:date ops:DateExpression))
SubClassOf(a:DateAddExpression ObjectMaxCardinality(1 a:numberOfPeriods ops:IntExpression))
SubClassOf(a:DateAddExpression DataAllValuesFrom(a:granularity xsd:string))
SubClassOf(a:DateAddExpression DataMaxCardinality(1 a:granularity xsd:string))
EquivalentClasses(a:DateDiffExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "DateDiff"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:endDate ops:DateExpression) ObjectSomeValuesFrom(a:granularity_String ops:StringExpression) ObjectSomeValuesFrom(a:startDate ops:DateExpression)))
SubClassOf(a:DateDiffExpression ops:IntExpression)
SubClassOf(a:DateDiffExpression ops:MiscExpression)
SubClassOf(a:DateDiffExpression ops:OperatorExpression)
SubClassOf(a:DateDiffExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "DateDiff"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:DateDiffExpression ObjectAllValuesFrom(a:endDate ops:DateExpression))
SubClassOf(a:DateDiffExpression ObjectAllValuesFrom(a:granularity_String ops:StringExpression))
SubClassOf(a:DateDiffExpression ObjectAllValuesFrom(a:startDate ops:DateExpression))
SubClassOf(a:DateDiffExpression ObjectMaxCardinality(1 a:endDate ops:DateExpression))
SubClassOf(a:DateDiffExpression ObjectMaxCardinality(1 a:granularity_String ops:StringExpression))
SubClassOf(a:DateDiffExpression ObjectMaxCardinality(1 a:startDate ops:DateExpression))
EquivalentClasses(a:DateDomain ObjectUnionOf(a:DatePartExpression a:DateAddExpression))
EquivalentClasses(a:DateExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Date"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:day xsd:int) DataSomeValuesFrom(a:hour xsd:int) DataSomeValuesFrom(a:millisecond xsd:double) DataSomeValuesFrom(a:minute xsd:int) DataSomeValuesFrom(a:month xsd:int) DataSomeValuesFrom(a:second xsd:int) DataSomeValuesFrom(a:year xsd:int)))
SubClassOf(a:DateExpression ops:DateExpression)
SubClassOf(a:DateExpression ops:MiscExpression)
SubClassOf(a:DateExpression ops:OperatorExpression)
SubClassOf(a:DateExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Date"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:DateExpression DataAllValuesFrom(a:day xsd:int))
SubClassOf(a:DateExpression DataAllValuesFrom(a:hour xsd:int))
SubClassOf(a:DateExpression DataAllValuesFrom(a:millisecond xsd:double))
SubClassOf(a:DateExpression DataAllValuesFrom(a:minute xsd:int))
SubClassOf(a:DateExpression DataAllValuesFrom(a:month xsd:int))
SubClassOf(a:DateExpression DataAllValuesFrom(a:second xsd:int))
SubClassOf(a:DateExpression DataAllValuesFrom(a:year xsd:int))
SubClassOf(a:DateExpression DataMaxCardinality(1 a:day xsd:int))
SubClassOf(a:DateExpression DataMaxCardinality(1 a:hour xsd:int))
SubClassOf(a:DateExpression DataMaxCardinality(1 a:millisecond xsd:double))
SubClassOf(a:DateExpression DataMaxCardinality(1 a:minute xsd:int))
SubClassOf(a:DateExpression DataMaxCardinality(1 a:month xsd:int))
SubClassOf(a:DateExpression DataMaxCardinality(1 a:second xsd:int))
SubClassOf(a:DateExpression DataMaxCardinality(1 a:year xsd:int))
EquivalentClasses(a:DatePartExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "DatePart"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:date ops:DateExpression) DataSomeValuesFrom(a:granularity xsd:string)))
SubClassOf(a:DatePartExpression ops:IntExpression)
SubClassOf(a:DatePartExpression ops:MiscExpression)
SubClassOf(a:DatePartExpression ops:OperatorExpression)
SubClassOf(a:DatePartExpression a:DateDomain)
SubClassOf(a:DatePartExpression a:GranularityDomain)
SubClassOf(a:DatePartExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "DatePart"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:DatePartExpression ObjectAllValuesFrom(a:date ops:DateExpression))
SubClassOf(a:DatePartExpression ObjectMaxCardinality(1 a:date ops:DateExpression))
SubClassOf(a:DatePartExpression DataAllValuesFrom(a:granularity xsd:string))
SubClassOf(a:DatePartExpression DataMaxCardinality(1 a:granularity xsd:string))
EquivalentClasses(a:DifferenceExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:ListExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Difference"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:ListExpression)))
SubClassOf(a:DifferenceExpression ops:BinaryExpression)
SubClassOf(a:DifferenceExpression ops:NumberExpression)
SubClassOf(a:DifferenceExpression ops:OperatorExpression)
SubClassOf(a:DifferenceExpression ObjectAllValuesFrom(ops:firstOperand ops:ListExpression))
SubClassOf(a:DifferenceExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Difference"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:DifferenceExpression ObjectAllValuesFrom(ops:secondOperand ops:ListExpression))
EquivalentClasses(a:DisplayNameDomain ObjectUnionOf(a:CodedOrdinalLiteralExpression a:CodeLiteralExpression))
EquivalentClasses(a:DistinctExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Distinct"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:source_List ops:ListExpression)))
SubClassOf(a:DistinctExpression ops:ListExpression)
SubClassOf(a:DistinctExpression ops:MiscExpression)
SubClassOf(a:DistinctExpression ops:OperatorExpression)
SubClassOf(a:DistinctExpression a:Source_ListDomain)
SubClassOf(a:DistinctExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Distinct"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:DistinctExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:DistinctExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
EquivalentClasses(a:DivideExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Divide"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:NumberExpression)))
SubClassOf(a:DivideExpression ops:BinaryExpression)
SubClassOf(a:DivideExpression ops:NumberExpression)
SubClassOf(a:DivideExpression ops:OperatorExpression)
SubClassOf(a:DivideExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:DivideExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Divide"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:DivideExpression ObjectAllValuesFrom(ops:secondOperand ops:NumberExpression))
EquivalentClasses(a:ElementDomain ObjectUnionOf(a:ContainsExpression a:ForEachExpression a:InExpression a:IndexOfExpression a:ListExpression))
EquivalentClasses(a:ElseDomain ObjectUnionOf(a:ConditionalExpression a:CaseExpression))
EquivalentClasses(a:EndExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:IntervalExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "End"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:EndExpression ops:OperatorExpression)
SubClassOf(a:EndExpression ops:OrdinalExpression)
SubClassOf(a:EndExpression ops:UnaryExpression)
SubClassOf(a:EndExpression ObjectAllValuesFrom(ops:firstOperand ops:IntervalExpression))
SubClassOf(a:EndExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "End"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:EntityNameLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "EntityNameLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:part xsd:string) DataSomeValuesFrom(a:use xsd:string)))
SubClassOf(a:EntityNameLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:EntityNameLiteralExpression ops:StringExpression)
SubClassOf(a:EntityNameLiteralExpression a:PartDomain)
SubClassOf(a:EntityNameLiteralExpression a:UseDomain)
SubClassOf(a:EntityNameLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "EntityNameLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:EntityNameLiteralExpression DataAllValuesFrom(a:part xsd:string))
SubClassOf(a:EntityNameLiteralExpression DataAllValuesFrom(a:use xsd:string))
SubClassOf(a:EntityNameLiteralExpression DataMaxCardinality(1 a:part xsd:string))
SubClassOf(a:EntityNameLiteralExpression DataMaxCardinality(1 a:use xsd:string))
EquivalentClasses(a:EqualExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:OperatorExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Equal"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:OperatorExpression)))
SubClassOf(a:EqualExpression ops:BinaryExpression)
SubClassOf(a:EqualExpression ops:BooleanExpression)
SubClassOf(a:EqualExpression ops:OperatorExpression)
SubClassOf(a:EqualExpression ObjectAllValuesFrom(ops:firstOperand ops:OperatorExpression))
SubClassOf(a:EqualExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Equal"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:EqualExpression ObjectAllValuesFrom(ops:secondOperand ops:OperatorExpression))
EquivalentClasses(a:ExpressionRefExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ExpressionRef"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:name xsd:string)))
SubClassOf(a:ExpressionRefExpression ops:MiscExpression)
SubClassOf(a:ExpressionRefExpression ops:OperatorExpression)
SubClassOf(a:ExpressionRefExpression a:NameDomain)
SubClassOf(a:ExpressionRefExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ExpressionRef"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ExpressionRefExpression DataAllValuesFrom(a:name xsd:string))
SubClassOf(a:ExpressionRefExpression DataMaxCardinality(1 a:name xsd:string))
EquivalentClasses(a:FilterExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Filter"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:condition ops:BooleanExpression) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:scope xsd:string)))
SubClassOf(a:FilterExpression ops:ListExpression)
SubClassOf(a:FilterExpression ops:MiscExpression)
SubClassOf(a:FilterExpression ops:OperatorExpression)
SubClassOf(a:FilterExpression a:ConditionDomain)
SubClassOf(a:FilterExpression a:ScopeDomain)
SubClassOf(a:FilterExpression a:Source_ListDomain)
SubClassOf(a:FilterExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Filter"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:FilterExpression ObjectAllValuesFrom(a:condition ops:BooleanExpression))
SubClassOf(a:FilterExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:FilterExpression ObjectMaxCardinality(1 a:condition ops:BooleanExpression))
SubClassOf(a:FilterExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:FilterExpression DataAllValuesFrom(a:scope xsd:string))
SubClassOf(a:FilterExpression DataMaxCardinality(1 a:scope xsd:string))
EquivalentClasses(a:FirstExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "First"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:orderBy xsd:string)))
SubClassOf(a:FirstExpression ops:MiscExpression)
SubClassOf(a:FirstExpression ops:OperatorExpression)
SubClassOf(a:FirstExpression a:OrderByDomain)
SubClassOf(a:FirstExpression a:Source_ListDomain)
SubClassOf(a:FirstExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "First"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:FirstExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:FirstExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:FirstExpression DataAllValuesFrom(a:orderBy xsd:string))
SubClassOf(a:FirstExpression DataMaxCardinality(1 a:orderBy xsd:string))
EquivalentClasses(a:FloorExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Floor"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:FloorExpression ops:IntExpression)
SubClassOf(a:FloorExpression ops:OperatorExpression)
SubClassOf(a:FloorExpression ops:UnaryExpression)
SubClassOf(a:FloorExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:FloorExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Floor"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:ForEachExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ForEach"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:element ops:AnyExpression) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:scope xsd:string)))
SubClassOf(a:ForEachExpression ops:ListExpression)
SubClassOf(a:ForEachExpression ops:MiscExpression)
SubClassOf(a:ForEachExpression ops:OperatorExpression)
SubClassOf(a:ForEachExpression a:ElementDomain)
SubClassOf(a:ForEachExpression a:ScopeDomain)
SubClassOf(a:ForEachExpression a:Source_ListDomain)
SubClassOf(a:ForEachExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ForEach"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ForEachExpression ObjectAllValuesFrom(a:element ops:AnyExpression))
SubClassOf(a:ForEachExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:ForEachExpression ObjectMaxCardinality(1 a:element ops:AnyExpression))
SubClassOf(a:ForEachExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:ForEachExpression DataAllValuesFrom(a:scope xsd:string))
SubClassOf(a:ForEachExpression DataMaxCardinality(1 a:scope xsd:string))
EquivalentClasses(a:GranularityDomain ObjectUnionOf(a:DatePartExpression a:DateAddExpression))
EquivalentClasses(a:GreaterExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Greater"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:NumberExpression)))
SubClassOf(a:GreaterExpression ops:BinaryExpression)
SubClassOf(a:GreaterExpression ops:BooleanExpression)
SubClassOf(a:GreaterExpression ops:OperatorExpression)
SubClassOf(a:GreaterExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:GreaterExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Greater"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:GreaterExpression ObjectAllValuesFrom(ops:secondOperand ops:NumberExpression))
EquivalentClasses(a:GreaterOrEqualExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "GreaterOrEqual"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:NumberExpression)))
SubClassOf(a:GreaterOrEqualExpression ops:BinaryExpression)
SubClassOf(a:GreaterOrEqualExpression ops:BooleanExpression)
SubClassOf(a:GreaterOrEqualExpression ops:OperatorExpression)
SubClassOf(a:GreaterOrEqualExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:GreaterOrEqualExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "GreaterOrEqual"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:GreaterOrEqualExpression ObjectAllValuesFrom(ops:secondOperand ops:NumberExpression))
EquivalentClasses(a:HighClosedDomain ObjectUnionOf(a:IntegerIntervalLiteralExpression a:PhysicalQuantityIntervalLiteralExpression a:QuantityIntervalLiteralExpression a:RealIntervalLiteralExpression a:TimestampIntervalLiteralExpression))
EquivalentClasses(a:High_doubleDomain ObjectUnionOf(a:RealIntervalLiteralExpression a:QuantityIntervalLiteralExpression))
EquivalentClasses(a:IdDomain ObjectUnionOf(a:ValueSetExpression a:InValueSetExpression))
EquivalentClasses(a:IdPropertyDomain ObjectUnionOf(a:DataRequestExpression a:ClinicalRequestExpression))
EquivalentClasses(a:IdentifierLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IdentifierLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:extension xsd:string) DataSomeValuesFrom(a:root xsd:string)))
SubClassOf(a:IdentifierLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:IdentifierLiteralExpression ops:StringExpression)
SubClassOf(a:IdentifierLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IdentifierLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:IdentifierLiteralExpression DataAllValuesFrom(a:extension xsd:string))
SubClassOf(a:IdentifierLiteralExpression DataAllValuesFrom(a:root xsd:string))
SubClassOf(a:IdentifierLiteralExpression DataMaxCardinality(1 a:extension xsd:string))
SubClassOf(a:IdentifierLiteralExpression DataMaxCardinality(1 a:root xsd:string))
EquivalentClasses(a:IfNullExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:OperatorExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IfNull"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:OperatorExpression)))
SubClassOf(a:IfNullExpression ops:BinaryExpression)
SubClassOf(a:IfNullExpression ops:OperatorExpression)
SubClassOf(a:IfNullExpression ObjectAllValuesFrom(ops:firstOperand ops:OperatorExpression))
SubClassOf(a:IfNullExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IfNull"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:IfNullExpression ObjectAllValuesFrom(ops:secondOperand ops:OperatorExpression))
EquivalentClasses(a:InExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "In"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:collection ops:ListExpression) ObjectSomeValuesFrom(a:element ops:AnyExpression)))
SubClassOf(a:InExpression ops:BooleanExpression)
SubClassOf(a:InExpression ops:MiscExpression)
SubClassOf(a:InExpression ops:OperatorExpression)
SubClassOf(a:InExpression a:ElementDomain)
SubClassOf(a:InExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "In"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:InExpression ObjectAllValuesFrom(a:collection ops:ListExpression))
SubClassOf(a:InExpression ObjectAllValuesFrom(a:element ops:AnyExpression))
SubClassOf(a:InExpression ObjectMaxCardinality(1 a:collection ops:ListExpression))
SubClassOf(a:InExpression ObjectMaxCardinality(1 a:element ops:AnyExpression))
EquivalentClasses(a:InValueSetExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:CodeExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "InValueSet"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:authority xsd:string) DataSomeValuesFrom(a:id xsd:string) DataSomeValuesFrom(a:version xsd:string)))
SubClassOf(a:InValueSetExpression ops:BooleanExpression)
SubClassOf(a:InValueSetExpression ops:OperatorExpression)
SubClassOf(a:InValueSetExpression ops:UnaryExpression)
SubClassOf(a:InValueSetExpression a:AuthorityDomain)
SubClassOf(a:InValueSetExpression a:IdDomain)
SubClassOf(a:InValueSetExpression a:VersionDomain)
SubClassOf(a:InValueSetExpression ObjectAllValuesFrom(ops:firstOperand ops:CodeExpression))
SubClassOf(a:InValueSetExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "InValueSet"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:InValueSetExpression DataAllValuesFrom(a:authority xsd:string))
SubClassOf(a:InValueSetExpression DataAllValuesFrom(a:id xsd:string))
SubClassOf(a:InValueSetExpression DataAllValuesFrom(a:version xsd:string))
SubClassOf(a:InValueSetExpression DataMaxCardinality(1 a:authority xsd:string))
SubClassOf(a:InValueSetExpression DataMaxCardinality(1 a:id xsd:string))
SubClassOf(a:InValueSetExpression DataMaxCardinality(1 a:version xsd:string))
EquivalentClasses(a:IndexOfExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IndexOf"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:element ops:AnyExpression) ObjectSomeValuesFrom(a:source_List ops:ListExpression)))
SubClassOf(a:IndexOfExpression ops:IntExpression)
SubClassOf(a:IndexOfExpression ops:MiscExpression)
SubClassOf(a:IndexOfExpression ops:OperatorExpression)
SubClassOf(a:IndexOfExpression a:ElementDomain)
SubClassOf(a:IndexOfExpression a:Source_ListDomain)
SubClassOf(a:IndexOfExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IndexOf"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:IndexOfExpression ObjectAllValuesFrom(a:element ops:AnyExpression))
SubClassOf(a:IndexOfExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:IndexOfExpression ObjectMaxCardinality(1 a:element ops:AnyExpression))
SubClassOf(a:IndexOfExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
EquivalentClasses(a:IndexerExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:ListExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Indexer"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:index ops:IntExpression)))
SubClassOf(a:IndexerExpression ops:OperatorExpression)
SubClassOf(a:IndexerExpression ops:UnaryExpression)
SubClassOf(a:IndexerExpression ObjectAllValuesFrom(ops:firstOperand ops:ListExpression))
SubClassOf(a:IndexerExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Indexer"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:IndexerExpression ObjectAllValuesFrom(a:index ops:IntExpression))
SubClassOf(a:IndexerExpression ObjectMaxCardinality(1 a:index ops:IntExpression))
EquivalentClasses(a:IntegerIntervalLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IntegerIntervalLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:high xsd:int) DataSomeValuesFrom(a:highClosed xsd:boolean) DataSomeValuesFrom(a:low xsd:int) DataSomeValuesFrom(a:lowClosed xsd:boolean)))
SubClassOf(a:IntegerIntervalLiteralExpression ops:IntervalExpression)
SubClassOf(a:IntegerIntervalLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:IntegerIntervalLiteralExpression a:HighClosedDomain)
SubClassOf(a:IntegerIntervalLiteralExpression a:LowClosedDomain)
SubClassOf(a:IntegerIntervalLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IntegerIntervalLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:IntegerIntervalLiteralExpression DataAllValuesFrom(a:high xsd:int))
SubClassOf(a:IntegerIntervalLiteralExpression DataAllValuesFrom(a:highClosed xsd:boolean))
SubClassOf(a:IntegerIntervalLiteralExpression DataAllValuesFrom(a:low xsd:int))
SubClassOf(a:IntegerIntervalLiteralExpression DataAllValuesFrom(a:lowClosed xsd:boolean))
SubClassOf(a:IntegerIntervalLiteralExpression DataMaxCardinality(1 a:high xsd:int))
SubClassOf(a:IntegerIntervalLiteralExpression DataMaxCardinality(1 a:highClosed xsd:boolean))
SubClassOf(a:IntegerIntervalLiteralExpression DataMaxCardinality(1 a:low xsd:int))
SubClassOf(a:IntegerIntervalLiteralExpression DataMaxCardinality(1 a:lowClosed xsd:boolean))
EquivalentClasses(a:IntegerLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IntegerLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:value xsd:int)))
SubClassOf(a:IntegerLiteralExpression ops:IntExpression)
SubClassOf(a:IntegerLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:IntegerLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IntegerLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:IntegerLiteralExpression DataAllValuesFrom(a:value xsd:int))
SubClassOf(a:IntegerLiteralExpression DataMaxCardinality(1 a:value xsd:int))
EquivalentClasses(a:IntersectExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:hasOperand ops:IntervalExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Intersect"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:IntersectExpression ops:ListExpression)
SubClassOf(a:IntersectExpression ops:NAryExpression)
SubClassOf(a:IntersectExpression ops:OperatorExpression)
SubClassOf(a:IntersectExpression ObjectAllValuesFrom(ops:hasOperand ops:IntervalExpression))
SubClassOf(a:IntersectExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Intersect"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:IntervalExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Interval"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:begin ops:OrdinalExpression) ObjectSomeValuesFrom(a:end ops:OrdinalExpression) DataSomeValuesFrom(a:beginOpen xsd:boolean) DataSomeValuesFrom(a:endOpen xsd:boolean)))
SubClassOf(a:IntervalExpression ops:IntervalExpression)
SubClassOf(a:IntervalExpression ops:MiscExpression)
SubClassOf(a:IntervalExpression ops:OperatorExpression)
SubClassOf(a:IntervalExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Interval"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:IntervalExpression ObjectAllValuesFrom(a:begin ops:OrdinalExpression))
SubClassOf(a:IntervalExpression ObjectAllValuesFrom(a:end ops:OrdinalExpression))
SubClassOf(a:IntervalExpression ObjectMaxCardinality(1 a:begin ops:OrdinalExpression))
SubClassOf(a:IntervalExpression ObjectMaxCardinality(1 a:end ops:OrdinalExpression))
SubClassOf(a:IntervalExpression DataAllValuesFrom(a:beginOpen xsd:boolean))
SubClassOf(a:IntervalExpression DataAllValuesFrom(a:endOpen xsd:boolean))
SubClassOf(a:IntervalExpression DataMaxCardinality(1 a:beginOpen xsd:boolean))
SubClassOf(a:IntervalExpression DataMaxCardinality(1 a:endOpen xsd:boolean))
EquivalentClasses(a:IsEmptyExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:ListExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IsEmpty"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:IsEmptyExpression ops:BooleanExpression)
SubClassOf(a:IsEmptyExpression ops:OperatorExpression)
SubClassOf(a:IsEmptyExpression ops:UnaryExpression)
SubClassOf(a:IsEmptyExpression ObjectAllValuesFrom(ops:firstOperand ops:ListExpression))
SubClassOf(a:IsEmptyExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IsEmpty"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:IsExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:OperatorExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Is"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:isType ops:DomainClassExpression)))
SubClassOf(a:IsExpression ops:BooleanExpression)
SubClassOf(a:IsExpression ops:OperatorExpression)
SubClassOf(a:IsExpression ops:UnaryExpression)
SubClassOf(a:IsExpression ObjectAllValuesFrom(ops:firstOperand ops:OperatorExpression))
SubClassOf(a:IsExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Is"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:IsExpression ObjectAllValuesFrom(a:isType ops:DomainClassExpression))
SubClassOf(a:IsExpression ObjectMaxCardinality(1 a:isType ops:DomainClassExpression))
EquivalentClasses(a:IsInitialDomain ObjectUnionOf(a:DataRequestExpression a:ClinicalRequestExpression))
EquivalentClasses(a:IsNotEmptyExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:ListExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IsNotEmpty"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:IsNotEmptyExpression ops:BooleanExpression)
SubClassOf(a:IsNotEmptyExpression ops:OperatorExpression)
SubClassOf(a:IsNotEmptyExpression ops:UnaryExpression)
SubClassOf(a:IsNotEmptyExpression ObjectAllValuesFrom(ops:firstOperand ops:ListExpression))
SubClassOf(a:IsNotEmptyExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IsNotEmpty"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:IsNullExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:OperatorExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IsNull"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:IsNullExpression ops:BooleanExpression)
SubClassOf(a:IsNullExpression ops:OperatorExpression)
SubClassOf(a:IsNullExpression ops:UnaryExpression)
SubClassOf(a:IsNullExpression ObjectAllValuesFrom(ops:firstOperand ops:OperatorExpression))
SubClassOf(a:IsNullExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "IsNull"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:LastExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Last"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:orderBy xsd:string)))
SubClassOf(a:LastExpression ops:MiscExpression)
SubClassOf(a:LastExpression ops:OperatorExpression)
SubClassOf(a:LastExpression a:OrderByDomain)
SubClassOf(a:LastExpression a:Source_ListDomain)
SubClassOf(a:LastExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Last"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:LastExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:LastExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:LastExpression DataAllValuesFrom(a:orderBy xsd:string))
SubClassOf(a:LastExpression DataMaxCardinality(1 a:orderBy xsd:string))
EquivalentClasses(a:LengthExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:OperatorExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Length"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:LengthExpression ops:IntExpression)
SubClassOf(a:LengthExpression ops:OperatorExpression)
SubClassOf(a:LengthExpression ops:UnaryExpression)
SubClassOf(a:LengthExpression ObjectAllValuesFrom(ops:firstOperand ops:OperatorExpression))
SubClassOf(a:LengthExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Length"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:LessExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Less"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:NumberExpression)))
SubClassOf(a:LessExpression ops:BinaryExpression)
SubClassOf(a:LessExpression ops:BooleanExpression)
SubClassOf(a:LessExpression ops:OperatorExpression)
SubClassOf(a:LessExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:LessExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Less"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:LessExpression ObjectAllValuesFrom(ops:secondOperand ops:NumberExpression))
EquivalentClasses(a:LessOrEqualExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "LessOrEqual"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:NumberExpression)))
SubClassOf(a:LessOrEqualExpression ops:BinaryExpression)
SubClassOf(a:LessOrEqualExpression ops:BooleanExpression)
SubClassOf(a:LessOrEqualExpression ops:OperatorExpression)
SubClassOf(a:LessOrEqualExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:LessOrEqualExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "LessOrEqual"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:LessOrEqualExpression ObjectAllValuesFrom(ops:secondOperand ops:NumberExpression))
EquivalentClasses(a:ListExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "List"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:element ops:AnyExpression) DataSomeValuesFrom(a:key xsd:string)))
SubClassOf(a:ListExpression ops:ListExpression)
SubClassOf(a:ListExpression ops:MiscExpression)
SubClassOf(a:ListExpression ops:OperatorExpression)
SubClassOf(a:ListExpression a:ElementDomain)
SubClassOf(a:ListExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "List"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ListExpression ObjectAllValuesFrom(a:element ops:AnyExpression))
SubClassOf(a:ListExpression DataAllValuesFrom(a:key xsd:string))
SubClassOf(a:ListExpression DataMaxCardinality(1 a:key xsd:string))
EquivalentClasses(a:LiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Literal"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:valueType xsd:anyURI) DataSomeValuesFrom(a:value_string xsd:string)))
SubClassOf(a:LiteralExpression ops:OperatorExpression)
SubClassOf(a:LiteralExpression ops:PrimitiveExpression)
SubClassOf(a:LiteralExpression a:ValueTypeDomain)
SubClassOf(a:LiteralExpression a:Value_stringDomain)
SubClassOf(a:LiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Literal"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:LiteralExpression DataAllValuesFrom(a:valueType xsd:anyURI))
SubClassOf(a:LiteralExpression DataAllValuesFrom(a:value_string xsd:string))
SubClassOf(a:LiteralExpression DataMaxCardinality(1 a:valueType xsd:anyURI))
SubClassOf(a:LiteralExpression DataMaxCardinality(1 a:value_string xsd:string))
EquivalentClasses(a:LnExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Ln"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:LnExpression ops:NumberExpression)
SubClassOf(a:LnExpression ops:OperatorExpression)
SubClassOf(a:LnExpression ops:UnaryExpression)
SubClassOf(a:LnExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:LnExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Ln"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:LogExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Log"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:NumberExpression)))
SubClassOf(a:LogExpression ops:BinaryExpression)
SubClassOf(a:LogExpression ops:OperatorExpression)
SubClassOf(a:LogExpression ops:RealExpression)
SubClassOf(a:LogExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:LogExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Log"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:LogExpression ObjectAllValuesFrom(ops:secondOperand ops:NumberExpression))
EquivalentClasses(a:LowClosedDomain ObjectUnionOf(a:IntegerIntervalLiteralExpression a:PhysicalQuantityIntervalLiteralExpression a:QuantityIntervalLiteralExpression a:RealIntervalLiteralExpression a:TimestampIntervalLiteralExpression))
EquivalentClasses(a:Low_doubleDomain ObjectUnionOf(a:RealIntervalLiteralExpression a:QuantityIntervalLiteralExpression))
EquivalentClasses(a:LowerExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:StringExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Lower"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:LowerExpression ops:OperatorExpression)
SubClassOf(a:LowerExpression ops:StringExpression)
SubClassOf(a:LowerExpression ops:UnaryExpression)
SubClassOf(a:LowerExpression ObjectAllValuesFrom(ops:firstOperand ops:StringExpression))
SubClassOf(a:LowerExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Lower"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:MaxExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Max"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:path_string xsd:string)))
SubClassOf(a:MaxExpression ops:MiscExpression)
SubClassOf(a:MaxExpression ops:NumberExpression)
SubClassOf(a:MaxExpression ops:OperatorExpression)
SubClassOf(a:MaxExpression a:Path_stringDomain)
SubClassOf(a:MaxExpression a:Source_ListDomain)
SubClassOf(a:MaxExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Max"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:MaxExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:MaxExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:MaxExpression DataAllValuesFrom(a:path_string xsd:string))
SubClassOf(a:MaxExpression DataMaxCardinality(1 a:path_string xsd:string))
EquivalentClasses(a:MeetsExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:IntervalExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Meets"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:IntervalExpression)))
SubClassOf(a:MeetsExpression ops:BinaryExpression)
SubClassOf(a:MeetsExpression ops:BooleanExpression)
SubClassOf(a:MeetsExpression ops:OperatorExpression)
SubClassOf(a:MeetsExpression ObjectAllValuesFrom(ops:firstOperand ops:IntervalExpression))
SubClassOf(a:MeetsExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Meets"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:MeetsExpression ObjectAllValuesFrom(ops:secondOperand ops:IntervalExpression))
EquivalentClasses(a:MinExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Min"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:path_string xsd:string)))
SubClassOf(a:MinExpression ops:MiscExpression)
SubClassOf(a:MinExpression ops:NumberExpression)
SubClassOf(a:MinExpression ops:OperatorExpression)
SubClassOf(a:MinExpression a:Path_stringDomain)
SubClassOf(a:MinExpression a:Source_ListDomain)
SubClassOf(a:MinExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Min"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:MinExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:MinExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:MinExpression DataAllValuesFrom(a:path_string xsd:string))
SubClassOf(a:MinExpression DataMaxCardinality(1 a:path_string xsd:string))
EquivalentClasses(a:ModuloExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:IntExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Modulo"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:IntExpression)))
SubClassOf(a:ModuloExpression ops:BinaryExpression)
SubClassOf(a:ModuloExpression ops:NumberExpression)
SubClassOf(a:ModuloExpression ops:OperatorExpression)
SubClassOf(a:ModuloExpression ObjectAllValuesFrom(ops:firstOperand ops:IntExpression))
SubClassOf(a:ModuloExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Modulo"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ModuloExpression ObjectAllValuesFrom(ops:secondOperand ops:IntExpression))
EquivalentClasses(a:MultiplyExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Multiply"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:NumberExpression)))
SubClassOf(a:MultiplyExpression ops:BinaryExpression)
SubClassOf(a:MultiplyExpression ops:NumberExpression)
SubClassOf(a:MultiplyExpression ops:OperatorExpression)
SubClassOf(a:MultiplyExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:MultiplyExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Multiply"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:MultiplyExpression ObjectAllValuesFrom(ops:secondOperand ops:NumberExpression))
EquivalentClasses(a:NameDomain ObjectUnionOf(a:ParameterRefExpression a:ExpressionRefExpression))
EquivalentClasses(a:NegateExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Negate"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:NegateExpression ops:NumberExpression)
SubClassOf(a:NegateExpression ops:OperatorExpression)
SubClassOf(a:NegateExpression ops:UnaryExpression)
SubClassOf(a:NegateExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:NegateExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Negate"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:NotEqualExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:OperatorExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "NotEqual"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:OperatorExpression)))
SubClassOf(a:NotEqualExpression ops:BinaryExpression)
SubClassOf(a:NotEqualExpression ops:BooleanExpression)
SubClassOf(a:NotEqualExpression ops:OperatorExpression)
SubClassOf(a:NotEqualExpression ObjectAllValuesFrom(ops:firstOperand ops:OperatorExpression))
SubClassOf(a:NotEqualExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "NotEqual"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:NotEqualExpression ObjectAllValuesFrom(ops:secondOperand ops:OperatorExpression))
EquivalentClasses(a:NotExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:BooleanExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Not"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:NotExpression ops:BooleanExpression)
SubClassOf(a:NotExpression ops:OperatorExpression)
SubClassOf(a:NotExpression ops:UnaryExpression)
SubClassOf(a:NotExpression ObjectAllValuesFrom(ops:firstOperand ops:BooleanExpression))
SubClassOf(a:NotExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Not"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:NowExpression ObjectIntersectionOf(ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Now"^^xsd:string) ops:OperatorConceptCode)) ops:OperatorExpression))
SubClassOf(a:NowExpression ops:DateExpression)
SubClassOf(a:NowExpression ops:NullaryExpression)
SubClassOf(a:NowExpression ops:OperatorExpression)
SubClassOf(a:NowExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Now"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:NullExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Null"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:valueType xsd:anyURI)))
SubClassOf(a:NullExpression ops:MiscExpression)
SubClassOf(a:NullExpression ops:OperatorExpression)
SubClassOf(a:NullExpression a:ValueTypeDomain)
SubClassOf(a:NullExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Null"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:NullExpression DataAllValuesFrom(a:valueType xsd:anyURI))
SubClassOf(a:NullExpression DataMaxCardinality(1 a:valueType xsd:anyURI))
EquivalentClasses(a:ObjectDescriptorExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ObjectDescriptor"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:objectType ops:DomainClassExpression) ObjectSomeValuesFrom(a:property ops:PropertySetExpression)))
SubClassOf(a:ObjectDescriptorExpression ops:MiscExpression)
SubClassOf(a:ObjectDescriptorExpression ops:ObjectExpression)
SubClassOf(a:ObjectDescriptorExpression ops:OperatorExpression)
SubClassOf(a:ObjectDescriptorExpression a:ObjectTypeDomain)
SubClassOf(a:ObjectDescriptorExpression a:PropertyDomain)
SubClassOf(a:ObjectDescriptorExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ObjectDescriptor"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ObjectDescriptorExpression ObjectAllValuesFrom(a:objectType ops:DomainClassExpression))
SubClassOf(a:ObjectDescriptorExpression ObjectAllValuesFrom(a:property ops:PropertySetExpression))
SubClassOf(a:ObjectDescriptorExpression ObjectMaxCardinality(1 a:objectType ops:DomainClassExpression))
EquivalentClasses(a:ObjectExpressionExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ObjectExpression"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:objectType ops:DomainClassExpression) ObjectSomeValuesFrom(a:property ops:PropertySetExpression)))
SubClassOf(a:ObjectExpressionExpression ops:MiscExpression)
SubClassOf(a:ObjectExpressionExpression ops:ObjectExpression)
SubClassOf(a:ObjectExpressionExpression ops:OperatorExpression)
SubClassOf(a:ObjectExpressionExpression a:ObjectTypeDomain)
SubClassOf(a:ObjectExpressionExpression a:PropertyDomain)
SubClassOf(a:ObjectExpressionExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ObjectExpression"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ObjectExpressionExpression ObjectAllValuesFrom(a:objectType ops:DomainClassExpression))
SubClassOf(a:ObjectExpressionExpression ObjectAllValuesFrom(a:property ops:PropertySetExpression))
SubClassOf(a:ObjectExpressionExpression ObjectMaxCardinality(1 a:objectType ops:DomainClassExpression))
EquivalentClasses(a:ObjectRedefineExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ObjectRedefine"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:property ops:PropertySetExpression) ObjectSomeValuesFrom(a:source_Object ops:ObjectExpression) DataSomeValuesFrom(a:scope xsd:string)))
SubClassOf(a:ObjectRedefineExpression ops:MiscExpression)
SubClassOf(a:ObjectRedefineExpression ops:ObjectExpression)
SubClassOf(a:ObjectRedefineExpression ops:OperatorExpression)
SubClassOf(a:ObjectRedefineExpression a:PropertyDomain)
SubClassOf(a:ObjectRedefineExpression a:ScopeDomain)
SubClassOf(a:ObjectRedefineExpression a:Source_ObjectDomain)
SubClassOf(a:ObjectRedefineExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ObjectRedefine"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ObjectRedefineExpression ObjectAllValuesFrom(a:property ops:PropertySetExpression))
SubClassOf(a:ObjectRedefineExpression ObjectAllValuesFrom(a:source_Object ops:ObjectExpression))
SubClassOf(a:ObjectRedefineExpression ObjectMaxCardinality(1 a:source_Object ops:ObjectExpression))
SubClassOf(a:ObjectRedefineExpression DataAllValuesFrom(a:scope xsd:string))
SubClassOf(a:ObjectRedefineExpression DataMaxCardinality(1 a:scope xsd:string))
EquivalentClasses(a:ObjectTypeDomain ObjectUnionOf(a:ObjectExpressionExpression a:ObjectDescriptorExpression))
EquivalentClasses(a:OrExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:hasOperand ops:BooleanExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Or"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:OrExpression ops:BooleanExpression)
SubClassOf(a:OrExpression ops:NAryExpression)
SubClassOf(a:OrExpression ops:OperatorExpression)
SubClassOf(a:OrExpression ObjectAllValuesFrom(ops:hasOperand ops:BooleanExpression))
SubClassOf(a:OrExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Or"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:OrderByDomain ObjectUnionOf(a:FirstExpression a:LastExpression a:SortExpression))
EquivalentClasses(a:OverlapsExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:IntervalExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Overlaps"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:IntervalExpression)))
SubClassOf(a:OverlapsExpression ops:BinaryExpression)
SubClassOf(a:OverlapsExpression ops:BooleanExpression)
SubClassOf(a:OverlapsExpression ops:OperatorExpression)
SubClassOf(a:OverlapsExpression ObjectAllValuesFrom(ops:firstOperand ops:IntervalExpression))
SubClassOf(a:OverlapsExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Overlaps"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:OverlapsExpression ObjectAllValuesFrom(ops:secondOperand ops:IntervalExpression))
EquivalentClasses(a:ParameterRefExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ParameterRef"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:name xsd:string)))
SubClassOf(a:ParameterRefExpression ops:MiscExpression)
SubClassOf(a:ParameterRefExpression ops:OperatorExpression)
SubClassOf(a:ParameterRefExpression a:NameDomain)
SubClassOf(a:ParameterRefExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ParameterRef"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ParameterRefExpression DataAllValuesFrom(a:name xsd:string))
SubClassOf(a:ParameterRefExpression DataMaxCardinality(1 a:name xsd:string))
EquivalentClasses(a:PartDomain ObjectUnionOf(a:EntityNameLiteralExpression a:AddressLiteralExpression))
EquivalentClasses(a:Path_stringDomain ObjectUnionOf(a:AllTrueExpression a:AnyTrueExpression a:AvgExpression a:CountExpression a:MaxExpression a:MinExpression a:SumExpression))
EquivalentClasses(a:PeriodLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "PeriodLiteral"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:frequency ops:RatioExpression) ObjectSomeValuesFrom(a:period ops:PhysicalQuantityExpression) ObjectSomeValuesFrom(a:phase ops:TimeIntervalExpression) DataSomeValuesFrom(a:alignment xsd:string) DataSomeValuesFrom(a:count xsd:int) DataSomeValuesFrom(a:isFlexible xsd:boolean)))
SubClassOf(a:PeriodLiteralExpression ops:IntervalExpression)
SubClassOf(a:PeriodLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:PeriodLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "PeriodLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:PeriodLiteralExpression ObjectAllValuesFrom(a:frequency ops:RatioExpression))
SubClassOf(a:PeriodLiteralExpression ObjectAllValuesFrom(a:period ops:PhysicalQuantityExpression))
SubClassOf(a:PeriodLiteralExpression ObjectAllValuesFrom(a:phase ops:TimeIntervalExpression))
SubClassOf(a:PeriodLiteralExpression ObjectMaxCardinality(1 a:frequency ops:RatioExpression))
SubClassOf(a:PeriodLiteralExpression ObjectMaxCardinality(1 a:period ops:PhysicalQuantityExpression))
SubClassOf(a:PeriodLiteralExpression ObjectMaxCardinality(1 a:phase ops:TimeIntervalExpression))
SubClassOf(a:PeriodLiteralExpression DataAllValuesFrom(a:alignment xsd:string))
SubClassOf(a:PeriodLiteralExpression DataAllValuesFrom(a:count xsd:int))
SubClassOf(a:PeriodLiteralExpression DataAllValuesFrom(a:isFlexible xsd:boolean))
SubClassOf(a:PeriodLiteralExpression DataMaxCardinality(1 a:alignment xsd:string))
SubClassOf(a:PeriodLiteralExpression DataMaxCardinality(1 a:count xsd:int))
SubClassOf(a:PeriodLiteralExpression DataMaxCardinality(1 a:isFlexible xsd:boolean))
EquivalentClasses(a:PhysicalQuantityIntervalLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "PhysicalQuantityIntervalLiteral"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:high_PhysicalQuantity ops:PhysicalQuantityExpression) ObjectSomeValuesFrom(a:low_PhysicalQuantity ops:PhysicalQuantityExpression) DataSomeValuesFrom(a:highClosed xsd:boolean) DataSomeValuesFrom(a:lowClosed xsd:boolean)))
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression ops:IntervalExpression)
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression a:HighClosedDomain)
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression a:LowClosedDomain)
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "PhysicalQuantityIntervalLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression ObjectAllValuesFrom(a:high_PhysicalQuantity ops:PhysicalQuantityExpression))
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression ObjectAllValuesFrom(a:low_PhysicalQuantity ops:PhysicalQuantityExpression))
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression ObjectMaxCardinality(1 a:high_PhysicalQuantity ops:PhysicalQuantityExpression))
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression ObjectMaxCardinality(1 a:low_PhysicalQuantity ops:PhysicalQuantityExpression))
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression DataAllValuesFrom(a:highClosed xsd:boolean))
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression DataAllValuesFrom(a:lowClosed xsd:boolean))
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression DataMaxCardinality(1 a:highClosed xsd:boolean))
SubClassOf(a:PhysicalQuantityIntervalLiteralExpression DataMaxCardinality(1 a:lowClosed xsd:boolean))
EquivalentClasses(a:PhysicalQuantityLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "PhysicalQuantityLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:unit xsd:string) DataSomeValuesFrom(a:value_double xsd:double)))
SubClassOf(a:PhysicalQuantityLiteralExpression ops:PhysicalQuantityExpression)
SubClassOf(a:PhysicalQuantityLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:PhysicalQuantityLiteralExpression a:Value_doubleDomain)
SubClassOf(a:PhysicalQuantityLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "PhysicalQuantityLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:PhysicalQuantityLiteralExpression DataAllValuesFrom(a:unit xsd:string))
SubClassOf(a:PhysicalQuantityLiteralExpression DataAllValuesFrom(a:value_double xsd:double))
SubClassOf(a:PhysicalQuantityLiteralExpression DataMaxCardinality(1 a:unit xsd:string))
SubClassOf(a:PhysicalQuantityLiteralExpression DataMaxCardinality(1 a:value_double xsd:double))
EquivalentClasses(a:PosExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Pos"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:string ops:StringExpression) DataSomeValuesFrom(a:pattern xsd:string)))
SubClassOf(a:PosExpression ops:IntExpression)
SubClassOf(a:PosExpression ops:MiscExpression)
SubClassOf(a:PosExpression ops:OperatorExpression)
SubClassOf(a:PosExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Pos"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:PosExpression ObjectAllValuesFrom(a:string ops:StringExpression))
SubClassOf(a:PosExpression ObjectMaxCardinality(1 a:string ops:StringExpression))
SubClassOf(a:PosExpression DataAllValuesFrom(a:pattern xsd:string))
SubClassOf(a:PosExpression DataMaxCardinality(1 a:pattern xsd:string))
EquivalentClasses(a:PowerExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Power"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:NumberExpression)))
SubClassOf(a:PowerExpression ops:BinaryExpression)
SubClassOf(a:PowerExpression ops:NumberExpression)
SubClassOf(a:PowerExpression ops:OperatorExpression)
SubClassOf(a:PowerExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:PowerExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Power"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:PowerExpression ObjectAllValuesFrom(ops:secondOperand ops:NumberExpression))
EquivalentClasses(a:PredExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:OrdinalExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Pred"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:PredExpression ops:OperatorExpression)
SubClassOf(a:PredExpression ops:OrdinalExpression)
SubClassOf(a:PredExpression ops:UnaryExpression)
SubClassOf(a:PredExpression ObjectAllValuesFrom(ops:firstOperand ops:OrdinalExpression))
SubClassOf(a:PredExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Pred"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:ProperContainsExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:ListExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ProperContains"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:ListExpression)))
SubClassOf(a:ProperContainsExpression ops:BinaryExpression)
SubClassOf(a:ProperContainsExpression ops:BooleanExpression)
SubClassOf(a:ProperContainsExpression ops:OperatorExpression)
SubClassOf(a:ProperContainsExpression ObjectAllValuesFrom(ops:firstOperand ops:ListExpression))
SubClassOf(a:ProperContainsExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ProperContains"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ProperContainsExpression ObjectAllValuesFrom(ops:secondOperand ops:ListExpression))
EquivalentClasses(a:ProperInExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:ListExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ProperIn"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:ListExpression)))
SubClassOf(a:ProperInExpression ops:BinaryExpression)
SubClassOf(a:ProperInExpression ops:BooleanExpression)
SubClassOf(a:ProperInExpression ops:OperatorExpression)
SubClassOf(a:ProperInExpression ObjectAllValuesFrom(ops:firstOperand ops:ListExpression))
SubClassOf(a:ProperInExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ProperIn"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ProperInExpression ObjectAllValuesFrom(ops:secondOperand ops:ListExpression))
EquivalentClasses(a:PropertyDomain ObjectUnionOf(a:ObjectDescriptorExpression a:ObjectExpressionExpression a:ObjectRedefineExpression))
EquivalentClasses(a:PropertyExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Property"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:path ops:DomainPropertyExpression) ObjectSomeValuesFrom(a:source_Object ops:ObjectExpression) DataSomeValuesFrom(a:scope xsd:string)))
SubClassOf(a:PropertyExpression ops:MiscExpression)
SubClassOf(a:PropertyExpression ops:OperatorExpression)
SubClassOf(a:PropertyExpression a:ScopeDomain)
SubClassOf(a:PropertyExpression a:Source_ObjectDomain)
SubClassOf(a:PropertyExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Property"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:PropertyExpression ObjectAllValuesFrom(a:path ops:DomainPropertyExpression))
SubClassOf(a:PropertyExpression ObjectAllValuesFrom(a:source_Object ops:ObjectExpression))
SubClassOf(a:PropertyExpression ObjectMaxCardinality(1 a:path ops:DomainPropertyExpression))
SubClassOf(a:PropertyExpression ObjectMaxCardinality(1 a:source_Object ops:ObjectExpression))
SubClassOf(a:PropertyExpression DataAllValuesFrom(a:scope xsd:string))
SubClassOf(a:PropertyExpression DataMaxCardinality(1 a:scope xsd:string))
EquivalentClasses(a:QuantityIntervalLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "QuantityIntervalLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:highClosed xsd:boolean) DataSomeValuesFrom(a:high_double xsd:double) DataSomeValuesFrom(a:lowClosed xsd:boolean) DataSomeValuesFrom(a:low_double xsd:double)))
SubClassOf(a:QuantityIntervalLiteralExpression ops:IntervalExpression)
SubClassOf(a:QuantityIntervalLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:QuantityIntervalLiteralExpression a:HighClosedDomain)
SubClassOf(a:QuantityIntervalLiteralExpression a:High_doubleDomain)
SubClassOf(a:QuantityIntervalLiteralExpression a:LowClosedDomain)
SubClassOf(a:QuantityIntervalLiteralExpression a:Low_doubleDomain)
SubClassOf(a:QuantityIntervalLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "QuantityIntervalLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:QuantityIntervalLiteralExpression DataAllValuesFrom(a:highClosed xsd:boolean))
SubClassOf(a:QuantityIntervalLiteralExpression DataAllValuesFrom(a:high_double xsd:double))
SubClassOf(a:QuantityIntervalLiteralExpression DataAllValuesFrom(a:lowClosed xsd:boolean))
SubClassOf(a:QuantityIntervalLiteralExpression DataAllValuesFrom(a:low_double xsd:double))
SubClassOf(a:QuantityIntervalLiteralExpression DataMaxCardinality(1 a:highClosed xsd:boolean))
SubClassOf(a:QuantityIntervalLiteralExpression DataMaxCardinality(1 a:high_double xsd:double))
SubClassOf(a:QuantityIntervalLiteralExpression DataMaxCardinality(1 a:lowClosed xsd:boolean))
SubClassOf(a:QuantityIntervalLiteralExpression DataMaxCardinality(1 a:low_double xsd:double))
EquivalentClasses(a:RatioLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "RatioLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:denominator xsd:double) DataSomeValuesFrom(a:numerator xsd:double)))
SubClassOf(a:RatioLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:RatioLiteralExpression ops:RatioExpression)
SubClassOf(a:RatioLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "RatioLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:RatioLiteralExpression DataAllValuesFrom(a:denominator xsd:double))
SubClassOf(a:RatioLiteralExpression DataAllValuesFrom(a:numerator xsd:double))
SubClassOf(a:RatioLiteralExpression DataMaxCardinality(1 a:denominator xsd:double))
SubClassOf(a:RatioLiteralExpression DataMaxCardinality(1 a:numerator xsd:double))
EquivalentClasses(a:RealIntervalLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "RealIntervalLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:highClosed xsd:boolean) DataSomeValuesFrom(a:high_double xsd:double) DataSomeValuesFrom(a:lowClosed xsd:boolean) DataSomeValuesFrom(a:low_double xsd:double)))
SubClassOf(a:RealIntervalLiteralExpression ops:IntervalExpression)
SubClassOf(a:RealIntervalLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:RealIntervalLiteralExpression a:HighClosedDomain)
SubClassOf(a:RealIntervalLiteralExpression a:High_doubleDomain)
SubClassOf(a:RealIntervalLiteralExpression a:LowClosedDomain)
SubClassOf(a:RealIntervalLiteralExpression a:Low_doubleDomain)
SubClassOf(a:RealIntervalLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "RealIntervalLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:RealIntervalLiteralExpression DataAllValuesFrom(a:highClosed xsd:boolean))
SubClassOf(a:RealIntervalLiteralExpression DataAllValuesFrom(a:high_double xsd:double))
SubClassOf(a:RealIntervalLiteralExpression DataAllValuesFrom(a:lowClosed xsd:boolean))
SubClassOf(a:RealIntervalLiteralExpression DataAllValuesFrom(a:low_double xsd:double))
SubClassOf(a:RealIntervalLiteralExpression DataMaxCardinality(1 a:highClosed xsd:boolean))
SubClassOf(a:RealIntervalLiteralExpression DataMaxCardinality(1 a:high_double xsd:double))
SubClassOf(a:RealIntervalLiteralExpression DataMaxCardinality(1 a:lowClosed xsd:boolean))
SubClassOf(a:RealIntervalLiteralExpression DataMaxCardinality(1 a:low_double xsd:double))
EquivalentClasses(a:RealLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "RealLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:value_double xsd:double)))
SubClassOf(a:RealLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:RealLiteralExpression ops:RealExpression)
SubClassOf(a:RealLiteralExpression a:Value_doubleDomain)
SubClassOf(a:RealLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "RealLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:RealLiteralExpression DataAllValuesFrom(a:value_double xsd:double))
SubClassOf(a:RealLiteralExpression DataMaxCardinality(1 a:value_double xsd:double))
EquivalentClasses(a:RoundExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Round"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:precision ops:IntExpression)))
SubClassOf(a:RoundExpression ops:IntExpression)
SubClassOf(a:RoundExpression ops:OperatorExpression)
SubClassOf(a:RoundExpression ops:UnaryExpression)
SubClassOf(a:RoundExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:RoundExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Round"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:RoundExpression ObjectAllValuesFrom(a:precision ops:IntExpression))
SubClassOf(a:RoundExpression ObjectMaxCardinality(1 a:precision ops:IntExpression))
EquivalentClasses(a:ScopeDomain ObjectUnionOf(a:ClinicalRequestExpression a:CurrentExpression a:DataRequestExpression a:FilterExpression a:ForEachExpression a:ObjectRedefineExpression a:PropertyExpression))
EquivalentClasses(a:SeparatorDomain ObjectUnionOf(a:SplitExpression a:CombineExpression))
EquivalentClasses(a:SetSubsumesExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "SetSubsumes"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:ancestors ops:ListExpression) ObjectSomeValuesFrom(a:descendents ops:ListExpression)))
SubClassOf(a:SetSubsumesExpression ops:BooleanExpression)
SubClassOf(a:SetSubsumesExpression ops:MiscExpression)
SubClassOf(a:SetSubsumesExpression ops:OperatorExpression)
SubClassOf(a:SetSubsumesExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "SetSubsumes"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:SetSubsumesExpression ObjectAllValuesFrom(a:ancestors ops:ListExpression))
SubClassOf(a:SetSubsumesExpression ObjectAllValuesFrom(a:descendents ops:ListExpression))
SubClassOf(a:SetSubsumesExpression ObjectMaxCardinality(1 a:ancestors ops:ListExpression))
SubClassOf(a:SetSubsumesExpression ObjectMaxCardinality(1 a:descendents ops:ListExpression))
EquivalentClasses(a:SimpleCodeLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "SimpleCodeLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:code xsd:string)))
SubClassOf(a:SimpleCodeLiteralExpression ops:CodeExpression)
SubClassOf(a:SimpleCodeLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:SimpleCodeLiteralExpression a:CodeDomain)
SubClassOf(a:SimpleCodeLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "SimpleCodeLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:SimpleCodeLiteralExpression DataAllValuesFrom(a:code xsd:string))
SubClassOf(a:SimpleCodeLiteralExpression DataMaxCardinality(1 a:code xsd:string))
EquivalentClasses(a:SortExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Sort"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:orderBy xsd:string)))
SubClassOf(a:SortExpression ops:ListExpression)
SubClassOf(a:SortExpression ops:MiscExpression)
SubClassOf(a:SortExpression ops:OperatorExpression)
SubClassOf(a:SortExpression a:OrderByDomain)
SubClassOf(a:SortExpression a:Source_ListDomain)
SubClassOf(a:SortExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Sort"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:SortExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:SortExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:SortExpression DataAllValuesFrom(a:orderBy xsd:string))
SubClassOf(a:SortExpression DataMaxCardinality(1 a:orderBy xsd:string))
EquivalentClasses(a:Source_ListDomain ObjectUnionOf(a:AllTrueExpression a:AnyTrueExpression a:AvgExpression a:ContainsExpression a:CountExpression a:DistinctExpression a:FilterExpression a:FirstExpression a:ForEachExpression a:IndexOfExpression a:LastExpression a:MaxExpression a:MinExpression a:SortExpression a:SumExpression))
EquivalentClasses(a:Source_ObjectDomain ObjectUnionOf(a:PropertyExpression a:ObjectRedefineExpression))
EquivalentClasses(a:SplitExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Split"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:separator ops:StringExpression) ObjectSomeValuesFrom(a:stringToSplit ops:StringExpression)))
SubClassOf(a:SplitExpression ops:ListExpression)
SubClassOf(a:SplitExpression ops:MiscExpression)
SubClassOf(a:SplitExpression ops:OperatorExpression)
SubClassOf(a:SplitExpression a:SeparatorDomain)
SubClassOf(a:SplitExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Split"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:SplitExpression ObjectAllValuesFrom(a:separator ops:StringExpression))
SubClassOf(a:SplitExpression ObjectAllValuesFrom(a:stringToSplit ops:StringExpression))
SubClassOf(a:SplitExpression ObjectMaxCardinality(1 a:separator ops:StringExpression))
SubClassOf(a:SplitExpression ObjectMaxCardinality(1 a:stringToSplit ops:StringExpression))
EquivalentClasses(a:StringLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "StringLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:value_string xsd:string)))
SubClassOf(a:StringLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:StringLiteralExpression ops:StringExpression)
SubClassOf(a:StringLiteralExpression a:Value_stringDomain)
SubClassOf(a:StringLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "StringLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:StringLiteralExpression DataAllValuesFrom(a:value_string xsd:string))
SubClassOf(a:StringLiteralExpression DataMaxCardinality(1 a:value_string xsd:string))
EquivalentClasses(a:SubstringExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Substring"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:length ops:IntExpression) ObjectSomeValuesFrom(a:startIndex ops:IntExpression) ObjectSomeValuesFrom(a:stringToSub ops:StringExpression)))
SubClassOf(a:SubstringExpression ops:MiscExpression)
SubClassOf(a:SubstringExpression ops:OperatorExpression)
SubClassOf(a:SubstringExpression ops:StringExpression)
SubClassOf(a:SubstringExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Substring"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:SubstringExpression ObjectAllValuesFrom(a:length ops:IntExpression))
SubClassOf(a:SubstringExpression ObjectAllValuesFrom(a:startIndex ops:IntExpression))
SubClassOf(a:SubstringExpression ObjectAllValuesFrom(a:stringToSub ops:StringExpression))
SubClassOf(a:SubstringExpression ObjectMaxCardinality(1 a:length ops:IntExpression))
SubClassOf(a:SubstringExpression ObjectMaxCardinality(1 a:startIndex ops:IntExpression))
SubClassOf(a:SubstringExpression ObjectMaxCardinality(1 a:stringToSub ops:StringExpression))
EquivalentClasses(a:SubsumesExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Subsumes"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:ancestor ops:CodeExpression) ObjectSomeValuesFrom(a:descendent ops:CodeExpression)))
SubClassOf(a:SubsumesExpression ops:BooleanExpression)
SubClassOf(a:SubsumesExpression ops:MiscExpression)
SubClassOf(a:SubsumesExpression ops:OperatorExpression)
SubClassOf(a:SubsumesExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Subsumes"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:SubsumesExpression ObjectAllValuesFrom(a:ancestor ops:CodeExpression))
SubClassOf(a:SubsumesExpression ObjectAllValuesFrom(a:descendent ops:CodeExpression))
SubClassOf(a:SubsumesExpression ObjectMaxCardinality(1 a:ancestor ops:CodeExpression))
SubClassOf(a:SubsumesExpression ObjectMaxCardinality(1 a:descendent ops:CodeExpression))
EquivalentClasses(a:SubtractExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Subtract"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:NumberExpression)))
SubClassOf(a:SubtractExpression ops:BinaryExpression)
SubClassOf(a:SubtractExpression ops:NumberExpression)
SubClassOf(a:SubtractExpression ops:OperatorExpression)
SubClassOf(a:SubtractExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:SubtractExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Subtract"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:SubtractExpression ObjectAllValuesFrom(ops:secondOperand ops:NumberExpression))
EquivalentClasses(a:SuccExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:OrdinalExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Succ"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:SuccExpression ops:OperatorExpression)
SubClassOf(a:SuccExpression ops:OrdinalExpression)
SubClassOf(a:SuccExpression ops:UnaryExpression)
SubClassOf(a:SuccExpression ObjectAllValuesFrom(ops:firstOperand ops:OrdinalExpression))
SubClassOf(a:SuccExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Succ"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:SumExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Sum"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:source_List ops:ListExpression) DataSomeValuesFrom(a:path_string xsd:string)))
SubClassOf(a:SumExpression ops:MiscExpression)
SubClassOf(a:SumExpression ops:NumberExpression)
SubClassOf(a:SumExpression ops:OperatorExpression)
SubClassOf(a:SumExpression a:Path_stringDomain)
SubClassOf(a:SumExpression a:Source_ListDomain)
SubClassOf(a:SumExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Sum"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:SumExpression ObjectAllValuesFrom(a:source_List ops:ListExpression))
SubClassOf(a:SumExpression ObjectMaxCardinality(1 a:source_List ops:ListExpression))
SubClassOf(a:SumExpression DataAllValuesFrom(a:path_string xsd:string))
SubClassOf(a:SumExpression DataMaxCardinality(1 a:path_string xsd:string))
EquivalentClasses(a:TemplateIdDomain ObjectUnionOf(a:DataRequestExpression a:ClinicalRequestExpression))
EquivalentClasses(a:TimeOffsetDomain ObjectUnionOf(a:DataRequestExpression a:ClinicalRequestExpression))
EquivalentClasses(a:TimestampIntervalLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "TimestampIntervalLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:highClosed xsd:boolean) DataSomeValuesFrom(a:high_dateTime xsd:dateTime) DataSomeValuesFrom(a:lowClosed xsd:boolean) DataSomeValuesFrom(a:low_dateTime xsd:dateTime)))
SubClassOf(a:TimestampIntervalLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:TimestampIntervalLiteralExpression ops:TimeIntervalExpression)
SubClassOf(a:TimestampIntervalLiteralExpression a:HighClosedDomain)
SubClassOf(a:TimestampIntervalLiteralExpression a:LowClosedDomain)
SubClassOf(a:TimestampIntervalLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "TimestampIntervalLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:TimestampIntervalLiteralExpression DataAllValuesFrom(a:highClosed xsd:boolean))
SubClassOf(a:TimestampIntervalLiteralExpression DataAllValuesFrom(a:high_dateTime xsd:dateTime))
SubClassOf(a:TimestampIntervalLiteralExpression DataAllValuesFrom(a:lowClosed xsd:boolean))
SubClassOf(a:TimestampIntervalLiteralExpression DataAllValuesFrom(a:low_dateTime xsd:dateTime))
SubClassOf(a:TimestampIntervalLiteralExpression DataMaxCardinality(1 a:highClosed xsd:boolean))
SubClassOf(a:TimestampIntervalLiteralExpression DataMaxCardinality(1 a:high_dateTime xsd:dateTime))
SubClassOf(a:TimestampIntervalLiteralExpression DataMaxCardinality(1 a:lowClosed xsd:boolean))
SubClassOf(a:TimestampIntervalLiteralExpression DataMaxCardinality(1 a:low_dateTime xsd:dateTime))
EquivalentClasses(a:TimestampLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "TimestampLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:value_dateTime xsd:dateTime)))
SubClassOf(a:TimestampLiteralExpression ops:DateExpression)
SubClassOf(a:TimestampLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:TimestampLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "TimestampLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:TimestampLiteralExpression DataAllValuesFrom(a:value_dateTime xsd:dateTime))
SubClassOf(a:TimestampLiteralExpression DataMaxCardinality(1 a:value_dateTime xsd:dateTime))
EquivalentClasses(a:TodayExpression ObjectIntersectionOf(ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Today"^^xsd:string) ops:OperatorConceptCode)) ops:OperatorExpression))
SubClassOf(a:TodayExpression ops:DateExpression)
SubClassOf(a:TodayExpression ops:NullaryExpression)
SubClassOf(a:TodayExpression ops:OperatorExpression)
SubClassOf(a:TodayExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Today"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:TriggerTypeDomain ObjectUnionOf(a:DataRequestExpression a:ClinicalRequestExpression))
EquivalentClasses(a:TruncatedDivideExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:NumberExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "TruncatedDivide"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(ops:secondOperand ops:NumberExpression)))
SubClassOf(a:TruncatedDivideExpression ops:BinaryExpression)
SubClassOf(a:TruncatedDivideExpression ops:IntExpression)
SubClassOf(a:TruncatedDivideExpression ops:OperatorExpression)
SubClassOf(a:TruncatedDivideExpression ObjectAllValuesFrom(ops:firstOperand ops:NumberExpression))
SubClassOf(a:TruncatedDivideExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "TruncatedDivide"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:TruncatedDivideExpression ObjectAllValuesFrom(ops:secondOperand ops:NumberExpression))
EquivalentClasses(a:UnionExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:hasOperand ops:ListExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Union"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:UnionExpression ops:ListExpression)
SubClassOf(a:UnionExpression ops:NAryExpression)
SubClassOf(a:UnionExpression ops:OperatorExpression)
SubClassOf(a:UnionExpression ObjectAllValuesFrom(ops:hasOperand ops:ListExpression))
SubClassOf(a:UnionExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Union"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:UpperExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:firstOperand ops:StringExpression) ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Upper"^^xsd:string) ops:OperatorConceptCode))))
SubClassOf(a:UpperExpression ops:OperatorExpression)
SubClassOf(a:UpperExpression ops:StringExpression)
SubClassOf(a:UpperExpression ops:UnaryExpression)
SubClassOf(a:UpperExpression ObjectAllValuesFrom(ops:firstOperand ops:StringExpression))
SubClassOf(a:UpperExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Upper"^^xsd:string) ops:OperatorConceptCode)))
EquivalentClasses(a:UrlLiteralExpression ObjectIntersectionOf(ops:PrimitiveExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "UrlLiteral"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:capabilities xsd:string) DataSomeValuesFrom(a:use xsd:string) DataSomeValuesFrom(a:value_anyURI xsd:anyURI)))
SubClassOf(a:UrlLiteralExpression ops:PrimitiveExpression)
SubClassOf(a:UrlLiteralExpression ops:StringExpression)
SubClassOf(a:UrlLiteralExpression a:UseDomain)
SubClassOf(a:UrlLiteralExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "UrlLiteral"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:UrlLiteralExpression DataAllValuesFrom(a:capabilities xsd:string))
SubClassOf(a:UrlLiteralExpression DataAllValuesFrom(a:use xsd:string))
SubClassOf(a:UrlLiteralExpression DataAllValuesFrom(a:value_anyURI xsd:anyURI))
SubClassOf(a:UrlLiteralExpression DataMaxCardinality(1 a:capabilities xsd:string))
SubClassOf(a:UrlLiteralExpression DataMaxCardinality(1 a:use xsd:string))
SubClassOf(a:UrlLiteralExpression DataMaxCardinality(1 a:value_anyURI xsd:anyURI))
EquivalentClasses(a:UseDomain ObjectUnionOf(a:AddressLiteralExpression a:EntityNameLiteralExpression a:UrlLiteralExpression))
EquivalentClasses(a:ValueSetExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ValueSet"^^xsd:string) ops:OperatorConceptCode)) DataSomeValuesFrom(a:authority xsd:string) DataSomeValuesFrom(a:id xsd:string) DataSomeValuesFrom(a:version xsd:string)))
SubClassOf(a:ValueSetExpression ops:ListExpression)
SubClassOf(a:ValueSetExpression ops:MiscExpression)
SubClassOf(a:ValueSetExpression ops:OperatorExpression)
SubClassOf(a:ValueSetExpression a:AuthorityDomain)
SubClassOf(a:ValueSetExpression a:IdDomain)
SubClassOf(a:ValueSetExpression a:VersionDomain)
SubClassOf(a:ValueSetExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "ValueSet"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:ValueSetExpression DataAllValuesFrom(a:authority xsd:string))
SubClassOf(a:ValueSetExpression DataAllValuesFrom(a:id xsd:string))
SubClassOf(a:ValueSetExpression DataAllValuesFrom(a:version xsd:string))
SubClassOf(a:ValueSetExpression DataMaxCardinality(1 a:authority xsd:string))
SubClassOf(a:ValueSetExpression DataMaxCardinality(1 a:id xsd:string))
SubClassOf(a:ValueSetExpression DataMaxCardinality(1 a:version xsd:string))
EquivalentClasses(a:ValueTypeDomain ObjectUnionOf(a:NullExpression a:LiteralExpression))
EquivalentClasses(a:Value_doubleDomain ObjectUnionOf(a:CodedOrdinalLiteralExpression a:PhysicalQuantityLiteralExpression a:RealLiteralExpression))
EquivalentClasses(a:Value_stringDomain ObjectUnionOf(a:ComplexLiteralExpression a:LiteralExpression a:StringLiteralExpression))
EquivalentClasses(a:VersionDomain ObjectUnionOf(a:ValueSetExpression a:InValueSetExpression))
EquivalentClasses(a:WithinExpression ObjectIntersectionOf(ops:OperatorExpression ObjectSomeValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Within"^^xsd:string) ops:OperatorConceptCode)) ObjectSomeValuesFrom(a:element_Ordinal ops:OrdinalExpression) ObjectSomeValuesFrom(a:interval ops:IntervalExpression)))
SubClassOf(a:WithinExpression ops:BooleanExpression)
SubClassOf(a:WithinExpression ops:MiscExpression)
SubClassOf(a:WithinExpression ops:OperatorExpression)
SubClassOf(a:WithinExpression ObjectAllValuesFrom(ops:opCode ObjectIntersectionOf(DataHasValue(skos:notation "Within"^^xsd:string) ops:OperatorConceptCode)))
SubClassOf(a:WithinExpression ObjectAllValuesFrom(a:element_Ordinal ops:OrdinalExpression))
SubClassOf(a:WithinExpression ObjectAllValuesFrom(a:interval ops:IntervalExpression))
SubClassOf(a:WithinExpression ObjectMaxCardinality(1 a:element_Ordinal ops:OrdinalExpression))
SubClassOf(a:WithinExpression ObjectMaxCardinality(1 a:interval ops:IntervalExpression))
ObjectPropertyDomain(a:ancestor a:SubsumesExpression)
ObjectPropertyRange(a:ancestor ops:CodeExpression)
ObjectPropertyDomain(a:ancestors a:SetSubsumesExpression)
ObjectPropertyRange(a:ancestors ops:ListExpression)
ObjectPropertyDomain(a:asType a:AsExpression)
ObjectPropertyRange(a:asType ops:DomainClassExpression)
ObjectPropertyDomain(a:begin a:IntervalExpression)
ObjectPropertyRange(a:begin ops:OrdinalExpression)
ObjectPropertyDomain(a:caseItem a:CaseExpression)
ObjectPropertyRange(a:caseItem ops:AnyExpression)
ObjectPropertyDomain(a:codeProperty a:ClinicalRequestExpression)
ObjectPropertyRange(a:codeProperty ops:DomainPropertyExpression)
ObjectPropertyDomain(a:codes a:ClinicalRequestExpression)
ObjectPropertyRange(a:codes ops:ListExpression)
ObjectPropertyDomain(a:collection a:InExpression)
ObjectPropertyRange(a:collection ops:ListExpression)
ObjectPropertyDomain(a:comparand a:CaseExpression)
ObjectPropertyRange(a:comparand ops:AnyExpression)
ObjectPropertyDomain(a:condition a:ConditionDomain)
ObjectPropertyRange(a:condition ops:BooleanExpression)
ObjectPropertyDomain(a:dataType a:DataTypeDomain)
ObjectPropertyRange(a:dataType ops:DomainClassExpression)
ObjectPropertyDomain(a:date a:DateDomain)
ObjectPropertyRange(a:date ops:DateExpression)
ObjectPropertyDomain(a:dateProperty a:ClinicalRequestExpression)
ObjectPropertyRange(a:dateProperty ops:DomainPropertyExpression)
ObjectPropertyDomain(a:dateRange a:ClinicalRequestExpression)
ObjectPropertyRange(a:dateRange ops:IntervalExpression)
ObjectPropertyDomain(a:descendent a:SubsumesExpression)
ObjectPropertyRange(a:descendent ops:CodeExpression)
ObjectPropertyDomain(a:descendents a:SetSubsumesExpression)
ObjectPropertyRange(a:descendents ops:ListExpression)
ObjectPropertyDomain(a:element a:ElementDomain)
ObjectPropertyRange(a:element ops:AnyExpression)
ObjectPropertyDomain(a:element_Ordinal a:WithinExpression)
ObjectPropertyRange(a:element_Ordinal ops:OrdinalExpression)
ObjectPropertyDomain(a:else a:ElseDomain)
ObjectPropertyRange(a:else ops:AnyExpression)
ObjectPropertyDomain(a:end a:IntervalExpression)
ObjectPropertyRange(a:end ops:OrdinalExpression)
ObjectPropertyDomain(a:endDate a:DateDiffExpression)
ObjectPropertyRange(a:endDate ops:DateExpression)
ObjectPropertyDomain(a:frequency a:PeriodLiteralExpression)
ObjectPropertyRange(a:frequency ops:RatioExpression)
ObjectPropertyDomain(a:granularity_String a:DateDiffExpression)
ObjectPropertyRange(a:granularity_String ops:StringExpression)
ObjectPropertyDomain(a:high_PhysicalQuantity a:PhysicalQuantityIntervalLiteralExpression)
ObjectPropertyRange(a:high_PhysicalQuantity ops:PhysicalQuantityExpression)
ObjectPropertyDomain(a:idProperty a:IdPropertyDomain)
ObjectPropertyRange(a:idProperty ops:DomainPropertyExpression)
ObjectPropertyDomain(a:index a:IndexerExpression)
ObjectPropertyRange(a:index ops:IntExpression)
ObjectPropertyDomain(a:interval a:WithinExpression)
ObjectPropertyRange(a:interval ops:IntervalExpression)
ObjectPropertyDomain(a:isType a:IsExpression)
ObjectPropertyRange(a:isType ops:DomainClassExpression)
ObjectPropertyDomain(a:length a:SubstringExpression)
ObjectPropertyRange(a:length ops:IntExpression)
ObjectPropertyDomain(a:low_PhysicalQuantity a:PhysicalQuantityIntervalLiteralExpression)
ObjectPropertyRange(a:low_PhysicalQuantity ops:PhysicalQuantityExpression)
ObjectPropertyDomain(a:numberOfPeriods a:DateAddExpression)
ObjectPropertyRange(a:numberOfPeriods ops:IntExpression)
ObjectPropertyDomain(a:objectType a:ObjectTypeDomain)
ObjectPropertyRange(a:objectType ops:DomainClassExpression)
ObjectPropertyDomain(a:path a:PropertyExpression)
ObjectPropertyRange(a:path ops:DomainPropertyExpression)
ObjectPropertyDomain(a:period a:PeriodLiteralExpression)
ObjectPropertyRange(a:period ops:PhysicalQuantityExpression)
ObjectPropertyDomain(a:phase a:PeriodLiteralExpression)
ObjectPropertyRange(a:phase ops:TimeIntervalExpression)
ObjectPropertyDomain(a:precision a:RoundExpression)
ObjectPropertyRange(a:precision ops:IntExpression)
ObjectPropertyDomain(a:property a:PropertyDomain)
ObjectPropertyRange(a:property ops:PropertySetExpression)
ObjectPropertyDomain(a:separator a:SeparatorDomain)
ObjectPropertyRange(a:separator ops:StringExpression)
ObjectPropertyDomain(a:source_List a:Source_ListDomain)
ObjectPropertyRange(a:source_List ops:ListExpression)
ObjectPropertyDomain(a:source_Object a:Source_ObjectDomain)
ObjectPropertyRange(a:source_Object ops:ObjectExpression)
ObjectPropertyDomain(a:source_String a:CombineExpression)
ObjectPropertyRange(a:source_String ops:StringExpression)
ObjectPropertyDomain(a:startDate a:DateDiffExpression)
ObjectPropertyRange(a:startDate ops:DateExpression)
ObjectPropertyDomain(a:startIndex a:SubstringExpression)
ObjectPropertyRange(a:startIndex ops:IntExpression)
ObjectPropertyDomain(a:string a:PosExpression)
ObjectPropertyRange(a:string ops:StringExpression)
ObjectPropertyDomain(a:stringToSplit a:SplitExpression)
ObjectPropertyRange(a:stringToSplit ops:StringExpression)
ObjectPropertyDomain(a:stringToSub a:SubstringExpression)
ObjectPropertyRange(a:stringToSub ops:StringExpression)
ObjectPropertyDomain(a:subject a:ClinicalRequestExpression)
ObjectPropertyRange(a:subject ops:AnyExpression)
ObjectPropertyDomain(a:subjectProperty a:ClinicalRequestExpression)
ObjectPropertyRange(a:subjectProperty ops:DomainPropertyExpression)
ObjectPropertyDomain(a:then a:ConditionalExpression)
ObjectPropertyRange(a:then ops:AnyExpression)
ObjectPropertyDomain(a:timeOffset a:TimeOffsetDomain)
ObjectPropertyRange(a:timeOffset ops:IntExpression)
DataPropertyDomain(a:alignment a:PeriodLiteralExpression)
DataPropertyRange(a:alignment xsd:string)
DataPropertyDomain(a:authority a:AuthorityDomain)
DataPropertyRange(a:authority xsd:string)
DataPropertyDomain(a:beginOpen a:IntervalExpression)
DataPropertyRange(a:beginOpen xsd:boolean)
DataPropertyDomain(a:capabilities a:UrlLiteralExpression)
DataPropertyRange(a:capabilities xsd:string)
DataPropertyDomain(a:cardinality a:CardinalityDomain)
DataPropertyRange(a:cardinality xsd:string)
DataPropertyDomain(a:code a:CodeDomain)
DataPropertyRange(a:code xsd:string)
DataPropertyDomain(a:codeSystem a:CodeSystemDomain)
DataPropertyRange(a:codeSystem xsd:string)
DataPropertyDomain(a:codeSystemName a:CodeSystemNameDomain)
DataPropertyRange(a:codeSystemName xsd:string)
DataPropertyDomain(a:count a:PeriodLiteralExpression)
DataPropertyRange(a:count xsd:int)
DataPropertyDomain(a:day a:DateExpression)
DataPropertyRange(a:day xsd:int)
DataPropertyDomain(a:denominator a:RatioLiteralExpression)
DataPropertyRange(a:denominator xsd:double)
DataPropertyDomain(a:displayName a:DisplayNameDomain)
DataPropertyRange(a:displayName xsd:string)
DataPropertyDomain(a:endOpen a:IntervalExpression)
DataPropertyRange(a:endOpen xsd:boolean)
DataPropertyDomain(a:extension a:IdentifierLiteralExpression)
DataPropertyRange(a:extension xsd:string)
DataPropertyDomain(a:granularity a:GranularityDomain)
DataPropertyRange(a:granularity xsd:string)
DataPropertyDomain(a:high a:IntegerIntervalLiteralExpression)
DataPropertyRange(a:high xsd:int)
DataPropertyDomain(a:highClosed a:HighClosedDomain)
DataPropertyRange(a:highClosed xsd:boolean)
DataPropertyDomain(a:high_dateTime a:TimestampIntervalLiteralExpression)
DataPropertyRange(a:high_dateTime xsd:dateTime)
DataPropertyDomain(a:high_double a:High_doubleDomain)
DataPropertyRange(a:high_double xsd:double)
DataPropertyDomain(a:hour a:DateExpression)
DataPropertyRange(a:hour xsd:int)
DataPropertyDomain(a:id a:IdDomain)
DataPropertyRange(a:id xsd:string)
DataPropertyDomain(a:isFlexible a:PeriodLiteralExpression)
DataPropertyRange(a:isFlexible xsd:boolean)
DataPropertyDomain(a:isInitial a:IsInitialDomain)
DataPropertyRange(a:isInitial xsd:boolean)
DataPropertyDomain(a:key a:ListExpression)
DataPropertyRange(a:key xsd:string)
DataPropertyDomain(a:low a:IntegerIntervalLiteralExpression)
DataPropertyRange(a:low xsd:int)
DataPropertyDomain(a:lowClosed a:LowClosedDomain)
DataPropertyRange(a:lowClosed xsd:boolean)
DataPropertyDomain(a:low_dateTime a:TimestampIntervalLiteralExpression)
DataPropertyRange(a:low_dateTime xsd:dateTime)
DataPropertyDomain(a:low_double a:Low_doubleDomain)
DataPropertyRange(a:low_double xsd:double)
DataPropertyDomain(a:millisecond a:DateExpression)
DataPropertyRange(a:millisecond xsd:double)
DataPropertyDomain(a:minute a:DateExpression)
DataPropertyRange(a:minute xsd:int)
DataPropertyDomain(a:month a:DateExpression)
DataPropertyRange(a:month xsd:int)
DataPropertyDomain(a:name a:NameDomain)
DataPropertyRange(a:name xsd:string)
DataPropertyDomain(a:numerator a:RatioLiteralExpression)
DataPropertyRange(a:numerator xsd:double)
DataPropertyDomain(a:orderBy a:OrderByDomain)
DataPropertyRange(a:orderBy xsd:string)
DataPropertyDomain(a:part a:PartDomain)
DataPropertyRange(a:part xsd:string)
DataPropertyDomain(a:path_string a:Path_stringDomain)
DataPropertyRange(a:path_string xsd:string)
DataPropertyDomain(a:pattern a:PosExpression)
DataPropertyRange(a:pattern xsd:string)
DataPropertyDomain(a:root a:IdentifierLiteralExpression)
DataPropertyRange(a:root xsd:string)
DataPropertyDomain(a:scope a:ScopeDomain)
DataPropertyRange(a:scope xsd:string)
DataPropertyDomain(a:second a:DateExpression)
DataPropertyRange(a:second xsd:int)
DataPropertyDomain(a:strict a:AsExpression)
DataPropertyRange(a:strict xsd:boolean)
DataPropertyDomain(a:templateId a:TemplateIdDomain)
DataPropertyRange(a:templateId xsd:string)
DataPropertyDomain(a:toType a:ConvertExpression)
DataPropertyRange(a:toType xsd:anyURI)
DataPropertyDomain(a:triggerType a:TriggerTypeDomain)
DataPropertyRange(a:triggerType xsd:string)
DataPropertyDomain(a:unit a:PhysicalQuantityLiteralExpression)
DataPropertyRange(a:unit xsd:string)
DataPropertyDomain(a:use a:UseDomain)
DataPropertyRange(a:use xsd:string)
DataPropertyDomain(a:useSubsumption a:ClinicalRequestExpression)
DataPropertyRange(a:useSubsumption xsd:boolean)
DataPropertyDomain(a:useValueSets a:ClinicalRequestExpression)
DataPropertyRange(a:useValueSets xsd:boolean)
DataPropertyDomain(a:value a:IntegerLiteralExpression)
DataPropertyRange(a:value xsd:int)
DataPropertyDomain(a:valueType a:ValueTypeDomain)
DataPropertyRange(a:valueType xsd:anyURI)
DataPropertyDomain(a:value_anyURI a:UrlLiteralExpression)
DataPropertyRange(a:value_anyURI xsd:anyURI)
DataPropertyDomain(a:value_boolean a:BooleanLiteralExpression)
DataPropertyRange(a:value_boolean xsd:boolean)
DataPropertyDomain(a:value_dateTime a:TimestampLiteralExpression)
DataPropertyRange(a:value_dateTime xsd:dateTime)
DataPropertyDomain(a:value_double a:Value_doubleDomain)
DataPropertyRange(a:value_double xsd:double)
DataPropertyDomain(a:value_string a:Value_stringDomain)
DataPropertyRange(a:value_string xsd:string)
DataPropertyDomain(a:version a:VersionDomain)
DataPropertyRange(a:version xsd:string)
DataPropertyDomain(a:year a:DateExpression)
DataPropertyRange(a:year xsd:int)
ClassAssertion(ops:UnaryOperatorConcept a:Abs)
ObjectPropertyAssertion(ops:evaluatesAs a:Abs ops:numberType)
ObjectPropertyAssertion(ops:firstOperandType a:Abs ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Abs a:AbsCode)
ClassAssertion(ops:OperatorConceptCode a:AbsCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:AbsCode a:Abs)
DataPropertyAssertion(skos-ext:code a:AbsCode "Abs"^^xsd:string)
DataPropertyAssertion(skos:notation a:AbsCode "Abs"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Add)
ObjectPropertyAssertion(ops:evaluatesAs a:Add ops:numberType)
ObjectPropertyAssertion(ops:firstOperandType a:Add ops:numberType)
ObjectPropertyAssertion(ops:secondOperandType a:Add ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Add a:AddCode)
ClassAssertion(ops:OperatorConceptCode a:AddCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:AddCode a:Add)
DataPropertyAssertion(skos-ext:code a:AddCode "Add"^^xsd:string)
DataPropertyAssertion(skos:notation a:AddCode "Add"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:After)
ObjectPropertyAssertion(ops:evaluatesAs a:After ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:After ops:intervalType)
ObjectPropertyAssertion(ops:secondOperandType a:After ops:intervalType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:After a:AfterCode)
ClassAssertion(ops:OperatorConceptCode a:AfterCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:AfterCode a:After)
DataPropertyAssertion(skos-ext:code a:AfterCode "After"^^xsd:string)
DataPropertyAssertion(skos:notation a:AfterCode "After"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:AllTrue)
ObjectPropertyAssertion(ops:evaluatesAs a:AllTrue ops:booleanType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:AllTrue a:AllTrueCode)
ClassAssertion(ops:OperatorConceptCode a:AllTrueCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:AllTrueCode a:AllTrue)
DataPropertyAssertion(skos-ext:code a:AllTrueCode "AllTrue"^^xsd:string)
DataPropertyAssertion(skos:notation a:AllTrueCode "AllTrue"^^xsd:string)
ObjectPropertyAssertion(ops:evaluatesAs a:And ops:booleanType)
ObjectPropertyAssertion(ops:hasOperandType a:And ops:booleanType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:And a:AndCode)
ClassAssertion(ops:OperatorConceptCode a:AndCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:AndCode a:And)
DataPropertyAssertion(skos-ext:code a:AndCode "And"^^xsd:string)
DataPropertyAssertion(skos:notation a:AndCode "And"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:AnyTrue)
ObjectPropertyAssertion(ops:evaluatesAs a:AnyTrue ops:booleanType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:AnyTrue a:AnyTrueCode)
ClassAssertion(ops:OperatorConceptCode a:AnyTrueCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:AnyTrueCode a:AnyTrue)
DataPropertyAssertion(skos-ext:code a:AnyTrueCode "AnyTrue"^^xsd:string)
DataPropertyAssertion(skos:notation a:AnyTrueCode "AnyTrue"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:As)
ObjectPropertyAssertion(ops:evaluatesAs a:As ops:anyType)
ObjectPropertyAssertion(ops:firstOperandType a:As ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:As a:AsCode)
ClassAssertion(ops:OperatorConceptCode a:AsCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:AsCode a:As)
DataPropertyAssertion(skos-ext:code a:AsCode "As"^^xsd:string)
DataPropertyAssertion(skos:notation a:AsCode "As"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Avg)
ObjectPropertyAssertion(ops:evaluatesAs a:Avg ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Avg a:AvgCode)
ClassAssertion(ops:OperatorConceptCode a:AvgCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:AvgCode a:Avg)
DataPropertyAssertion(skos-ext:code a:AvgCode "Avg"^^xsd:string)
DataPropertyAssertion(skos:notation a:AvgCode "Avg"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Before)
ObjectPropertyAssertion(ops:evaluatesAs a:Before ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:Before ops:intervalType)
ObjectPropertyAssertion(ops:secondOperandType a:Before ops:intervalType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Before a:BeforeCode)
ClassAssertion(ops:OperatorConceptCode a:BeforeCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:BeforeCode a:Before)
DataPropertyAssertion(skos-ext:code a:BeforeCode "Before"^^xsd:string)
DataPropertyAssertion(skos:notation a:BeforeCode "Before"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Begin)
ObjectPropertyAssertion(ops:evaluatesAs a:Begin ops:ordinalType)
ObjectPropertyAssertion(ops:firstOperandType a:Begin ops:intervalType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Begin a:BeginCode)
ClassAssertion(ops:OperatorConceptCode a:BeginCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:BeginCode a:Begin)
DataPropertyAssertion(skos-ext:code a:BeginCode "Begin"^^xsd:string)
DataPropertyAssertion(skos:notation a:BeginCode "Begin"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Case)
ObjectPropertyAssertion(ops:evaluatesAs a:Case ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Case a:CaseCode)
ClassAssertion(ops:OperatorConceptCode a:CaseCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:CaseCode a:Case)
DataPropertyAssertion(skos-ext:code a:CaseCode "Case"^^xsd:string)
DataPropertyAssertion(skos:notation a:CaseCode "Case"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Ceiling)
ObjectPropertyAssertion(ops:evaluatesAs a:Ceiling ops:intType)
ObjectPropertyAssertion(ops:firstOperandType a:Ceiling ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Ceiling a:CeilingCode)
ClassAssertion(ops:OperatorConceptCode a:CeilingCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:CeilingCode a:Ceiling)
DataPropertyAssertion(skos-ext:code a:CeilingCode "Ceiling"^^xsd:string)
DataPropertyAssertion(skos:notation a:CeilingCode "Ceiling"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:ClinicalRequest)
ObjectPropertyAssertion(ops:evaluatesAs a:ClinicalRequest ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:ClinicalRequest a:ClinicalRequestCode)
ClassAssertion(ops:OperatorConceptCode a:ClinicalRequestCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ClinicalRequestCode a:ClinicalRequest)
DataPropertyAssertion(skos-ext:code a:ClinicalRequestCode "ClinicalRequest"^^xsd:string)
DataPropertyAssertion(skos:notation a:ClinicalRequestCode "ClinicalRequest"^^xsd:string)
ObjectPropertyAssertion(ops:evaluatesAs a:Coalesce ops:anyType)
ObjectPropertyAssertion(ops:hasOperandType a:Coalesce ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Coalesce a:CoalesceCode)
ClassAssertion(ops:OperatorConceptCode a:CoalesceCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:CoalesceCode a:Coalesce)
DataPropertyAssertion(skos-ext:code a:CoalesceCode "Coalesce"^^xsd:string)
DataPropertyAssertion(skos:notation a:CoalesceCode "Coalesce"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Combine)
ObjectPropertyAssertion(ops:evaluatesAs a:Combine ops:stringType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Combine a:CombineCode)
ClassAssertion(ops:OperatorConceptCode a:CombineCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:CombineCode a:Combine)
DataPropertyAssertion(skos-ext:code a:CombineCode "Combine"^^xsd:string)
DataPropertyAssertion(skos:notation a:CombineCode "Combine"^^xsd:string)
ObjectPropertyAssertion(ops:evaluatesAs a:Concat ops:stringType)
ObjectPropertyAssertion(ops:hasOperandType a:Concat ops:stringType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Concat a:ConcatCode)
ClassAssertion(ops:OperatorConceptCode a:ConcatCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ConcatCode a:Concat)
DataPropertyAssertion(skos-ext:code a:ConcatCode "Concat"^^xsd:string)
DataPropertyAssertion(skos:notation a:ConcatCode "Concat"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Conditional)
ObjectPropertyAssertion(ops:evaluatesAs a:Conditional ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Conditional a:ConditionalCode)
ClassAssertion(ops:OperatorConceptCode a:ConditionalCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ConditionalCode a:Conditional)
DataPropertyAssertion(skos-ext:code a:ConditionalCode "Conditional"^^xsd:string)
DataPropertyAssertion(skos:notation a:ConditionalCode "Conditional"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Contains)
ObjectPropertyAssertion(ops:evaluatesAs a:Contains ops:booleanType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Contains a:ContainsCode)
ClassAssertion(ops:OperatorConceptCode a:ContainsCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ContainsCode a:Contains)
DataPropertyAssertion(skos-ext:code a:ContainsCode "Contains"^^xsd:string)
DataPropertyAssertion(skos:notation a:ContainsCode "Contains"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Convert)
ObjectPropertyAssertion(ops:evaluatesAs a:Convert ops:anyType)
ObjectPropertyAssertion(ops:firstOperandType a:Convert ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Convert a:ConvertCode)
ClassAssertion(ops:OperatorConceptCode a:ConvertCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ConvertCode a:Convert)
DataPropertyAssertion(skos-ext:code a:ConvertCode "Convert"^^xsd:string)
DataPropertyAssertion(skos:notation a:ConvertCode "Convert"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Count)
ObjectPropertyAssertion(ops:evaluatesAs a:Count ops:intType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Count a:CountCode)
ClassAssertion(ops:OperatorConceptCode a:CountCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:CountCode a:Count)
DataPropertyAssertion(skos-ext:code a:CountCode "Count"^^xsd:string)
DataPropertyAssertion(skos:notation a:CountCode "Count"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Current)
ObjectPropertyAssertion(ops:evaluatesAs a:Current ops:objectType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Current a:CurrentCode)
ClassAssertion(ops:OperatorConceptCode a:CurrentCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:CurrentCode a:Current)
DataPropertyAssertion(skos-ext:code a:CurrentCode "Current"^^xsd:string)
DataPropertyAssertion(skos:notation a:CurrentCode "Current"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:DataRequest)
ObjectPropertyAssertion(ops:evaluatesAs a:DataRequest ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:DataRequest a:DataRequestCode)
ClassAssertion(ops:OperatorConceptCode a:DataRequestCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:DataRequestCode a:DataRequest)
DataPropertyAssertion(skos-ext:code a:DataRequestCode "DataRequest"^^xsd:string)
DataPropertyAssertion(skos:notation a:DataRequestCode "DataRequest"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Date)
ObjectPropertyAssertion(ops:evaluatesAs a:Date ops:dateType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Date a:DateCode)
ClassAssertion(ops:NAryOperatorConcept a:DateAdd)
ObjectPropertyAssertion(ops:evaluatesAs a:DateAdd ops:dateType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:DateAdd a:DateAddCode)
ClassAssertion(ops:OperatorConceptCode a:DateAddCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:DateAddCode a:DateAdd)
DataPropertyAssertion(skos-ext:code a:DateAddCode "DateAdd"^^xsd:string)
DataPropertyAssertion(skos:notation a:DateAddCode "DateAdd"^^xsd:string)
ClassAssertion(ops:OperatorConceptCode a:DateCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:DateCode a:Date)
DataPropertyAssertion(skos-ext:code a:DateCode "Date"^^xsd:string)
DataPropertyAssertion(skos:notation a:DateCode "Date"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:DateDiff)
ObjectPropertyAssertion(ops:evaluatesAs a:DateDiff ops:intType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:DateDiff a:DateDiffCode)
ClassAssertion(ops:OperatorConceptCode a:DateDiffCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:DateDiffCode a:DateDiff)
DataPropertyAssertion(skos-ext:code a:DateDiffCode "DateDiff"^^xsd:string)
DataPropertyAssertion(skos:notation a:DateDiffCode "DateDiff"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:DatePart)
ObjectPropertyAssertion(ops:evaluatesAs a:DatePart ops:intType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:DatePart a:DatePartCode)
ClassAssertion(ops:OperatorConceptCode a:DatePartCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:DatePartCode a:DatePart)
DataPropertyAssertion(skos-ext:code a:DatePartCode "DatePart"^^xsd:string)
DataPropertyAssertion(skos:notation a:DatePartCode "DatePart"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Difference)
ObjectPropertyAssertion(ops:evaluatesAs a:Difference ops:numberType)
ObjectPropertyAssertion(ops:firstOperandType a:Difference ops:listType)
ObjectPropertyAssertion(ops:secondOperandType a:Difference ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Difference a:DifferenceCode)
ClassAssertion(ops:OperatorConceptCode a:DifferenceCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:DifferenceCode a:Difference)
DataPropertyAssertion(skos-ext:code a:DifferenceCode "Difference"^^xsd:string)
DataPropertyAssertion(skos:notation a:DifferenceCode "Difference"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Distinct)
ObjectPropertyAssertion(ops:evaluatesAs a:Distinct ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Distinct a:DistinctCode)
ClassAssertion(ops:OperatorConceptCode a:DistinctCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:DistinctCode a:Distinct)
DataPropertyAssertion(skos-ext:code a:DistinctCode "Distinct"^^xsd:string)
DataPropertyAssertion(skos:notation a:DistinctCode "Distinct"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Divide)
ObjectPropertyAssertion(ops:evaluatesAs a:Divide ops:numberType)
ObjectPropertyAssertion(ops:firstOperandType a:Divide ops:numberType)
ObjectPropertyAssertion(ops:secondOperandType a:Divide ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Divide a:DivideCode)
ClassAssertion(ops:OperatorConceptCode a:DivideCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:DivideCode a:Divide)
DataPropertyAssertion(skos-ext:code a:DivideCode "Divide"^^xsd:string)
DataPropertyAssertion(skos:notation a:DivideCode "Divide"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:End)
ObjectPropertyAssertion(ops:evaluatesAs a:End ops:ordinalType)
ObjectPropertyAssertion(ops:firstOperandType a:End ops:intervalType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:End a:EndCode)
ClassAssertion(ops:OperatorConceptCode a:EndCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:EndCode a:End)
DataPropertyAssertion(skos-ext:code a:EndCode "End"^^xsd:string)
DataPropertyAssertion(skos:notation a:EndCode "End"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Equal)
ObjectPropertyAssertion(ops:evaluatesAs a:Equal ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:Equal ops:anyType)
ObjectPropertyAssertion(ops:secondOperandType a:Equal ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Equal a:EqualCode)
ClassAssertion(ops:OperatorConceptCode a:EqualCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:EqualCode a:Equal)
DataPropertyAssertion(skos-ext:code a:EqualCode "Equal"^^xsd:string)
DataPropertyAssertion(skos:notation a:EqualCode "Equal"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:ExpressionRef)
ObjectPropertyAssertion(ops:evaluatesAs a:ExpressionRef ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:ExpressionRef a:ExpressionRefCode)
ClassAssertion(ops:OperatorConceptCode a:ExpressionRefCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ExpressionRefCode a:ExpressionRef)
DataPropertyAssertion(skos-ext:code a:ExpressionRefCode "ExpressionRef"^^xsd:string)
DataPropertyAssertion(skos:notation a:ExpressionRefCode "ExpressionRef"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Filter)
ObjectPropertyAssertion(ops:evaluatesAs a:Filter ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Filter a:FilterCode)
ClassAssertion(ops:OperatorConceptCode a:FilterCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:FilterCode a:Filter)
DataPropertyAssertion(skos-ext:code a:FilterCode "Filter"^^xsd:string)
DataPropertyAssertion(skos:notation a:FilterCode "Filter"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:First)
ObjectPropertyAssertion(ops:evaluatesAs a:First ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:First a:FirstCode)
ClassAssertion(ops:OperatorConceptCode a:FirstCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:FirstCode a:First)
DataPropertyAssertion(skos-ext:code a:FirstCode "First"^^xsd:string)
DataPropertyAssertion(skos:notation a:FirstCode "First"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Floor)
ObjectPropertyAssertion(ops:evaluatesAs a:Floor ops:intType)
ObjectPropertyAssertion(ops:firstOperandType a:Floor ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Floor a:FloorCode)
ClassAssertion(ops:OperatorConceptCode a:FloorCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:FloorCode a:Floor)
DataPropertyAssertion(skos-ext:code a:FloorCode "Floor"^^xsd:string)
DataPropertyAssertion(skos:notation a:FloorCode "Floor"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:ForEach)
ObjectPropertyAssertion(ops:evaluatesAs a:ForEach ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:ForEach a:ForEachCode)
ClassAssertion(ops:OperatorConceptCode a:ForEachCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ForEachCode a:ForEach)
DataPropertyAssertion(skos-ext:code a:ForEachCode "ForEach"^^xsd:string)
DataPropertyAssertion(skos:notation a:ForEachCode "ForEach"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Greater)
ObjectPropertyAssertion(ops:evaluatesAs a:Greater ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:Greater ops:numberType)
ObjectPropertyAssertion(ops:secondOperandType a:Greater ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Greater a:GreaterCode)
ClassAssertion(ops:OperatorConceptCode a:GreaterCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:GreaterCode a:Greater)
DataPropertyAssertion(skos-ext:code a:GreaterCode "Greater"^^xsd:string)
DataPropertyAssertion(skos:notation a:GreaterCode "Greater"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:GreaterOrEqual)
ObjectPropertyAssertion(ops:evaluatesAs a:GreaterOrEqual ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:GreaterOrEqual ops:numberType)
ObjectPropertyAssertion(ops:secondOperandType a:GreaterOrEqual ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:GreaterOrEqual a:GreaterOrEqualCode)
ClassAssertion(ops:OperatorConceptCode a:GreaterOrEqualCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:GreaterOrEqualCode a:GreaterOrEqual)
DataPropertyAssertion(skos-ext:code a:GreaterOrEqualCode "GreaterOrEqual"^^xsd:string)
DataPropertyAssertion(skos:notation a:GreaterOrEqualCode "GreaterOrEqual"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:IfNull)
ObjectPropertyAssertion(ops:evaluatesAs a:IfNull ops:anyType)
ObjectPropertyAssertion(ops:firstOperandType a:IfNull ops:anyType)
ObjectPropertyAssertion(ops:secondOperandType a:IfNull ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:IfNull a:IfNullCode)
ClassAssertion(ops:OperatorConceptCode a:IfNullCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:IfNullCode a:IfNull)
DataPropertyAssertion(skos-ext:code a:IfNullCode "IfNull"^^xsd:string)
DataPropertyAssertion(skos:notation a:IfNullCode "IfNull"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:In)
ObjectPropertyAssertion(ops:evaluatesAs a:In ops:booleanType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:In a:InCode)
ClassAssertion(ops:OperatorConceptCode a:InCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:InCode a:In)
DataPropertyAssertion(skos-ext:code a:InCode "In"^^xsd:string)
DataPropertyAssertion(skos:notation a:InCode "In"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:InValueSet)
ObjectPropertyAssertion(ops:evaluatesAs a:InValueSet ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:InValueSet ops:codeType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:InValueSet a:InValueSetCode)
ClassAssertion(ops:OperatorConceptCode a:InValueSetCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:InValueSetCode a:InValueSet)
DataPropertyAssertion(skos-ext:code a:InValueSetCode "InValueSet"^^xsd:string)
DataPropertyAssertion(skos:notation a:InValueSetCode "InValueSet"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:IndexOf)
ObjectPropertyAssertion(ops:evaluatesAs a:IndexOf ops:intType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:IndexOf a:IndexOfCode)
ClassAssertion(ops:OperatorConceptCode a:IndexOfCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:IndexOfCode a:IndexOf)
DataPropertyAssertion(skos-ext:code a:IndexOfCode "IndexOf"^^xsd:string)
DataPropertyAssertion(skos:notation a:IndexOfCode "IndexOf"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Indexer)
ObjectPropertyAssertion(ops:evaluatesAs a:Indexer ops:anyType)
ObjectPropertyAssertion(ops:firstOperandType a:Indexer ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Indexer a:IndexerCode)
ClassAssertion(ops:OperatorConceptCode a:IndexerCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:IndexerCode a:Indexer)
DataPropertyAssertion(skos-ext:code a:IndexerCode "Indexer"^^xsd:string)
DataPropertyAssertion(skos:notation a:IndexerCode "Indexer"^^xsd:string)
ObjectPropertyAssertion(ops:evaluatesAs a:Intersect ops:listType)
ObjectPropertyAssertion(ops:hasOperandType a:Intersect ops:intervalType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Intersect a:IntersectCode)
ClassAssertion(ops:OperatorConceptCode a:IntersectCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:IntersectCode a:Intersect)
DataPropertyAssertion(skos-ext:code a:IntersectCode "Intersect"^^xsd:string)
DataPropertyAssertion(skos:notation a:IntersectCode "Intersect"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Interval)
ObjectPropertyAssertion(ops:evaluatesAs a:Interval ops:intervalType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Interval a:IntervalCode)
ClassAssertion(ops:OperatorConceptCode a:IntervalCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:IntervalCode a:Interval)
DataPropertyAssertion(skos-ext:code a:IntervalCode "Interval"^^xsd:string)
DataPropertyAssertion(skos:notation a:IntervalCode "Interval"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Is)
ObjectPropertyAssertion(ops:evaluatesAs a:Is ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:Is ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Is a:IsCode)
ClassAssertion(ops:OperatorConceptCode a:IsCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:IsCode a:Is)
DataPropertyAssertion(skos-ext:code a:IsCode "Is"^^xsd:string)
DataPropertyAssertion(skos:notation a:IsCode "Is"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:IsEmpty)
ObjectPropertyAssertion(ops:evaluatesAs a:IsEmpty ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:IsEmpty ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:IsEmpty a:IsEmptyCode)
ClassAssertion(ops:OperatorConceptCode a:IsEmptyCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:IsEmptyCode a:IsEmpty)
DataPropertyAssertion(skos-ext:code a:IsEmptyCode "IsEmpty"^^xsd:string)
DataPropertyAssertion(skos:notation a:IsEmptyCode "IsEmpty"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:IsNotEmpty)
ObjectPropertyAssertion(ops:evaluatesAs a:IsNotEmpty ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:IsNotEmpty ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:IsNotEmpty a:IsNotEmptyCode)
ClassAssertion(ops:OperatorConceptCode a:IsNotEmptyCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:IsNotEmptyCode a:IsNotEmpty)
DataPropertyAssertion(skos-ext:code a:IsNotEmptyCode "IsNotEmpty"^^xsd:string)
DataPropertyAssertion(skos:notation a:IsNotEmptyCode "IsNotEmpty"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:IsNull)
ObjectPropertyAssertion(ops:evaluatesAs a:IsNull ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:IsNull ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:IsNull a:IsNullCode)
ClassAssertion(ops:OperatorConceptCode a:IsNullCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:IsNullCode a:IsNull)
DataPropertyAssertion(skos-ext:code a:IsNullCode "IsNull"^^xsd:string)
DataPropertyAssertion(skos:notation a:IsNullCode "IsNull"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Last)
ObjectPropertyAssertion(ops:evaluatesAs a:Last ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Last a:LastCode)
ClassAssertion(ops:OperatorConceptCode a:LastCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:LastCode a:Last)
DataPropertyAssertion(skos-ext:code a:LastCode "Last"^^xsd:string)
DataPropertyAssertion(skos:notation a:LastCode "Last"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Length)
ObjectPropertyAssertion(ops:evaluatesAs a:Length ops:intType)
ObjectPropertyAssertion(ops:firstOperandType a:Length ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Length a:LengthCode)
ClassAssertion(ops:OperatorConceptCode a:LengthCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:LengthCode a:Length)
DataPropertyAssertion(skos-ext:code a:LengthCode "Length"^^xsd:string)
DataPropertyAssertion(skos:notation a:LengthCode "Length"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Less)
ObjectPropertyAssertion(ops:evaluatesAs a:Less ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:Less ops:numberType)
ObjectPropertyAssertion(ops:secondOperandType a:Less ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Less a:LessCode)
ClassAssertion(ops:OperatorConceptCode a:LessCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:LessCode a:Less)
DataPropertyAssertion(skos-ext:code a:LessCode "Less"^^xsd:string)
DataPropertyAssertion(skos:notation a:LessCode "Less"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:LessOrEqual)
ObjectPropertyAssertion(ops:evaluatesAs a:LessOrEqual ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:LessOrEqual ops:numberType)
ObjectPropertyAssertion(ops:secondOperandType a:LessOrEqual ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:LessOrEqual a:LessOrEqualCode)
ClassAssertion(ops:OperatorConceptCode a:LessOrEqualCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:LessOrEqualCode a:LessOrEqual)
DataPropertyAssertion(skos-ext:code a:LessOrEqualCode "LessOrEqual"^^xsd:string)
DataPropertyAssertion(skos:notation a:LessOrEqualCode "LessOrEqual"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:List)
ObjectPropertyAssertion(ops:evaluatesAs a:List ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:List a:ListCode)
ClassAssertion(ops:OperatorConceptCode a:ListCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ListCode a:List)
DataPropertyAssertion(skos-ext:code a:ListCode "List"^^xsd:string)
DataPropertyAssertion(skos:notation a:ListCode "List"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Ln)
ObjectPropertyAssertion(ops:evaluatesAs a:Ln ops:numberType)
ObjectPropertyAssertion(ops:firstOperandType a:Ln ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Ln a:LnCode)
ClassAssertion(ops:OperatorConceptCode a:LnCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:LnCode a:Ln)
DataPropertyAssertion(skos-ext:code a:LnCode "Ln"^^xsd:string)
DataPropertyAssertion(skos:notation a:LnCode "Ln"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Log)
ObjectPropertyAssertion(ops:evaluatesAs a:Log ops:realType)
ObjectPropertyAssertion(ops:firstOperandType a:Log ops:numberType)
ObjectPropertyAssertion(ops:secondOperandType a:Log ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Log a:LogCode)
ClassAssertion(ops:OperatorConceptCode a:LogCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:LogCode a:Log)
DataPropertyAssertion(skos-ext:code a:LogCode "Log"^^xsd:string)
DataPropertyAssertion(skos:notation a:LogCode "Log"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Lower)
ObjectPropertyAssertion(ops:evaluatesAs a:Lower ops:stringType)
ObjectPropertyAssertion(ops:firstOperandType a:Lower ops:stringType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Lower a:LowerCode)
ClassAssertion(ops:OperatorConceptCode a:LowerCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:LowerCode a:Lower)
DataPropertyAssertion(skos-ext:code a:LowerCode "Lower"^^xsd:string)
DataPropertyAssertion(skos:notation a:LowerCode "Lower"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Max)
ObjectPropertyAssertion(ops:evaluatesAs a:Max ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Max a:MaxCode)
ClassAssertion(ops:OperatorConceptCode a:MaxCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:MaxCode a:Max)
DataPropertyAssertion(skos-ext:code a:MaxCode "Max"^^xsd:string)
DataPropertyAssertion(skos:notation a:MaxCode "Max"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Meets)
ObjectPropertyAssertion(ops:evaluatesAs a:Meets ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:Meets ops:intervalType)
ObjectPropertyAssertion(ops:secondOperandType a:Meets ops:intervalType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Meets a:MeetsCode)
ClassAssertion(ops:OperatorConceptCode a:MeetsCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:MeetsCode a:Meets)
DataPropertyAssertion(skos-ext:code a:MeetsCode "Meets"^^xsd:string)
DataPropertyAssertion(skos:notation a:MeetsCode "Meets"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Min)
ObjectPropertyAssertion(ops:evaluatesAs a:Min ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Min a:MinCode)
ClassAssertion(ops:OperatorConceptCode a:MinCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:MinCode a:Min)
DataPropertyAssertion(skos-ext:code a:MinCode "Min"^^xsd:string)
DataPropertyAssertion(skos:notation a:MinCode "Min"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Modulo)
ObjectPropertyAssertion(ops:evaluatesAs a:Modulo ops:numberType)
ObjectPropertyAssertion(ops:firstOperandType a:Modulo ops:intType)
ObjectPropertyAssertion(ops:secondOperandType a:Modulo ops:intType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Modulo a:ModuloCode)
ClassAssertion(ops:OperatorConceptCode a:ModuloCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ModuloCode a:Modulo)
DataPropertyAssertion(skos-ext:code a:ModuloCode "Modulo"^^xsd:string)
DataPropertyAssertion(skos:notation a:ModuloCode "Modulo"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Multiply)
ObjectPropertyAssertion(ops:evaluatesAs a:Multiply ops:numberType)
ObjectPropertyAssertion(ops:firstOperandType a:Multiply ops:numberType)
ObjectPropertyAssertion(ops:secondOperandType a:Multiply ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Multiply a:MultiplyCode)
ClassAssertion(ops:OperatorConceptCode a:MultiplyCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:MultiplyCode a:Multiply)
DataPropertyAssertion(skos-ext:code a:MultiplyCode "Multiply"^^xsd:string)
DataPropertyAssertion(skos:notation a:MultiplyCode "Multiply"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Negate)
ObjectPropertyAssertion(ops:evaluatesAs a:Negate ops:numberType)
ObjectPropertyAssertion(ops:firstOperandType a:Negate ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Negate a:NegateCode)
ClassAssertion(ops:OperatorConceptCode a:NegateCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:NegateCode a:Negate)
DataPropertyAssertion(skos-ext:code a:NegateCode "Negate"^^xsd:string)
DataPropertyAssertion(skos:notation a:NegateCode "Negate"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Not)
ObjectPropertyAssertion(ops:evaluatesAs a:Not ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:Not ops:booleanType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Not a:NotCode)
ClassAssertion(ops:OperatorConceptCode a:NotCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:NotCode a:Not)
DataPropertyAssertion(skos-ext:code a:NotCode "Not"^^xsd:string)
DataPropertyAssertion(skos:notation a:NotCode "Not"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:NotEqual)
ObjectPropertyAssertion(ops:evaluatesAs a:NotEqual ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:NotEqual ops:anyType)
ObjectPropertyAssertion(ops:secondOperandType a:NotEqual ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:NotEqual a:NotEqualCode)
ClassAssertion(ops:OperatorConceptCode a:NotEqualCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:NotEqualCode a:NotEqual)
DataPropertyAssertion(skos-ext:code a:NotEqualCode "NotEqual"^^xsd:string)
DataPropertyAssertion(skos:notation a:NotEqualCode "NotEqual"^^xsd:string)
ClassAssertion(ops:AggregateOperatorConcept a:Now)
ObjectPropertyAssertion(ops:evaluatesAs a:Now ops:dateType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Now a:NowCode)
ClassAssertion(ops:OperatorConceptCode a:NowCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:NowCode a:Now)
DataPropertyAssertion(skos-ext:code a:NowCode "Now"^^xsd:string)
DataPropertyAssertion(skos:notation a:NowCode "Now"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Null)
ObjectPropertyAssertion(ops:evaluatesAs a:Null ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Null a:NullCode)
ClassAssertion(ops:OperatorConceptCode a:NullCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:NullCode a:Null)
DataPropertyAssertion(skos-ext:code a:NullCode "Null"^^xsd:string)
DataPropertyAssertion(skos:notation a:NullCode "Null"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:ObjectDescriptor)
ObjectPropertyAssertion(ops:evaluatesAs a:ObjectDescriptor ops:objectType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:ObjectDescriptor a:ObjectDescriptorCode)
ClassAssertion(ops:OperatorConceptCode a:ObjectDescriptorCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ObjectDescriptorCode a:ObjectDescriptor)
DataPropertyAssertion(skos-ext:code a:ObjectDescriptorCode "ObjectDescriptor"^^xsd:string)
DataPropertyAssertion(skos:notation a:ObjectDescriptorCode "ObjectDescriptor"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:ObjectExpression)
ObjectPropertyAssertion(ops:evaluatesAs a:ObjectExpression ops:objectType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:ObjectExpression a:ObjectExpressionCode)
ClassAssertion(ops:OperatorConceptCode a:ObjectExpressionCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ObjectExpressionCode a:ObjectExpression)
DataPropertyAssertion(skos-ext:code a:ObjectExpressionCode "ObjectExpression"^^xsd:string)
DataPropertyAssertion(skos:notation a:ObjectExpressionCode "ObjectExpression"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:ObjectRedefine)
ObjectPropertyAssertion(ops:evaluatesAs a:ObjectRedefine ops:objectType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:ObjectRedefine a:ObjectRedefineCode)
ClassAssertion(ops:OperatorConceptCode a:ObjectRedefineCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ObjectRedefineCode a:ObjectRedefine)
DataPropertyAssertion(skos-ext:code a:ObjectRedefineCode "ObjectRedefine"^^xsd:string)
DataPropertyAssertion(skos:notation a:ObjectRedefineCode "ObjectRedefine"^^xsd:string)
ObjectPropertyAssertion(ops:evaluatesAs a:Or ops:booleanType)
ObjectPropertyAssertion(ops:hasOperandType a:Or ops:booleanType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Or a:OrCode)
ClassAssertion(ops:OperatorConceptCode a:OrCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:OrCode a:Or)
DataPropertyAssertion(skos-ext:code a:OrCode "Or"^^xsd:string)
DataPropertyAssertion(skos:notation a:OrCode "Or"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Overlaps)
ObjectPropertyAssertion(ops:evaluatesAs a:Overlaps ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:Overlaps ops:intervalType)
ObjectPropertyAssertion(ops:secondOperandType a:Overlaps ops:intervalType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Overlaps a:OverlapsCode)
ClassAssertion(ops:OperatorConceptCode a:OverlapsCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:OverlapsCode a:Overlaps)
DataPropertyAssertion(skos-ext:code a:OverlapsCode "Overlaps"^^xsd:string)
DataPropertyAssertion(skos:notation a:OverlapsCode "Overlaps"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:ParameterRef)
ObjectPropertyAssertion(ops:evaluatesAs a:ParameterRef ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:ParameterRef a:ParameterRefCode)
ClassAssertion(ops:OperatorConceptCode a:ParameterRefCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ParameterRefCode a:ParameterRef)
DataPropertyAssertion(skos-ext:code a:ParameterRefCode "ParameterRef"^^xsd:string)
DataPropertyAssertion(skos:notation a:ParameterRefCode "ParameterRef"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Pos)
ObjectPropertyAssertion(ops:evaluatesAs a:Pos ops:intType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Pos a:PosCode)
ClassAssertion(ops:OperatorConceptCode a:PosCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:PosCode a:Pos)
DataPropertyAssertion(skos-ext:code a:PosCode "Pos"^^xsd:string)
DataPropertyAssertion(skos:notation a:PosCode "Pos"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Power)
ObjectPropertyAssertion(ops:evaluatesAs a:Power ops:numberType)
ObjectPropertyAssertion(ops:firstOperandType a:Power ops:numberType)
ObjectPropertyAssertion(ops:secondOperandType a:Power ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Power a:PowerCode)
ClassAssertion(ops:OperatorConceptCode a:PowerCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:PowerCode a:Power)
DataPropertyAssertion(skos-ext:code a:PowerCode "Power"^^xsd:string)
DataPropertyAssertion(skos:notation a:PowerCode "Power"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Pred)
ObjectPropertyAssertion(ops:evaluatesAs a:Pred ops:ordinalType)
ObjectPropertyAssertion(ops:firstOperandType a:Pred ops:ordinalType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Pred a:PredCode)
ClassAssertion(ops:OperatorConceptCode a:PredCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:PredCode a:Pred)
DataPropertyAssertion(skos-ext:code a:PredCode "Pred"^^xsd:string)
DataPropertyAssertion(skos:notation a:PredCode "Pred"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:ProperContains)
ObjectPropertyAssertion(ops:evaluatesAs a:ProperContains ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:ProperContains ops:listType)
ObjectPropertyAssertion(ops:secondOperandType a:ProperContains ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:ProperContains a:ProperContainsCode)
ClassAssertion(ops:OperatorConceptCode a:ProperContainsCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ProperContainsCode a:ProperContains)
DataPropertyAssertion(skos-ext:code a:ProperContainsCode "ProperContains"^^xsd:string)
DataPropertyAssertion(skos:notation a:ProperContainsCode "ProperContains"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:ProperIn)
ObjectPropertyAssertion(ops:evaluatesAs a:ProperIn ops:booleanType)
ObjectPropertyAssertion(ops:firstOperandType a:ProperIn ops:listType)
ObjectPropertyAssertion(ops:secondOperandType a:ProperIn ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:ProperIn a:ProperInCode)
ClassAssertion(ops:OperatorConceptCode a:ProperInCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ProperInCode a:ProperIn)
DataPropertyAssertion(skos-ext:code a:ProperInCode "ProperIn"^^xsd:string)
DataPropertyAssertion(skos:notation a:ProperInCode "ProperIn"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Property)
ObjectPropertyAssertion(ops:evaluatesAs a:Property ops:anyType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Property a:PropertyCode)
ClassAssertion(ops:OperatorConceptCode a:PropertyCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:PropertyCode a:Property)
DataPropertyAssertion(skos-ext:code a:PropertyCode "Property"^^xsd:string)
DataPropertyAssertion(skos:notation a:PropertyCode "Property"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Round)
ObjectPropertyAssertion(ops:evaluatesAs a:Round ops:intType)
ObjectPropertyAssertion(ops:firstOperandType a:Round ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Round a:RoundCode)
ClassAssertion(ops:OperatorConceptCode a:RoundCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:RoundCode a:Round)
DataPropertyAssertion(skos-ext:code a:RoundCode "Round"^^xsd:string)
DataPropertyAssertion(skos:notation a:RoundCode "Round"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:SetSubsumes)
ObjectPropertyAssertion(ops:evaluatesAs a:SetSubsumes ops:booleanType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:SetSubsumes a:SetSubsumesCode)
ClassAssertion(ops:OperatorConceptCode a:SetSubsumesCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:SetSubsumesCode a:SetSubsumes)
DataPropertyAssertion(skos-ext:code a:SetSubsumesCode "SetSubsumes"^^xsd:string)
DataPropertyAssertion(skos:notation a:SetSubsumesCode "SetSubsumes"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Sort)
ObjectPropertyAssertion(ops:evaluatesAs a:Sort ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Sort a:SortCode)
ClassAssertion(ops:OperatorConceptCode a:SortCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:SortCode a:Sort)
DataPropertyAssertion(skos-ext:code a:SortCode "Sort"^^xsd:string)
DataPropertyAssertion(skos:notation a:SortCode "Sort"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Split)
ObjectPropertyAssertion(ops:evaluatesAs a:Split ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Split a:SplitCode)
ClassAssertion(ops:OperatorConceptCode a:SplitCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:SplitCode a:Split)
DataPropertyAssertion(skos-ext:code a:SplitCode "Split"^^xsd:string)
DataPropertyAssertion(skos:notation a:SplitCode "Split"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Substring)
ObjectPropertyAssertion(ops:evaluatesAs a:Substring ops:stringType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Substring a:SubstringCode)
ClassAssertion(ops:OperatorConceptCode a:SubstringCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:SubstringCode a:Substring)
DataPropertyAssertion(skos-ext:code a:SubstringCode "Substring"^^xsd:string)
DataPropertyAssertion(skos:notation a:SubstringCode "Substring"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Subsumes)
ObjectPropertyAssertion(ops:evaluatesAs a:Subsumes ops:booleanType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Subsumes a:SubsumesCode)
ClassAssertion(ops:OperatorConceptCode a:SubsumesCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:SubsumesCode a:Subsumes)
DataPropertyAssertion(skos-ext:code a:SubsumesCode "Subsumes"^^xsd:string)
DataPropertyAssertion(skos:notation a:SubsumesCode "Subsumes"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:Subtract)
ObjectPropertyAssertion(ops:evaluatesAs a:Subtract ops:numberType)
ObjectPropertyAssertion(ops:firstOperandType a:Subtract ops:numberType)
ObjectPropertyAssertion(ops:secondOperandType a:Subtract ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Subtract a:SubtractCode)
ClassAssertion(ops:OperatorConceptCode a:SubtractCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:SubtractCode a:Subtract)
DataPropertyAssertion(skos-ext:code a:SubtractCode "Subtract"^^xsd:string)
DataPropertyAssertion(skos:notation a:SubtractCode "Subtract"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Succ)
ObjectPropertyAssertion(ops:evaluatesAs a:Succ ops:ordinalType)
ObjectPropertyAssertion(ops:firstOperandType a:Succ ops:ordinalType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Succ a:SuccCode)
ClassAssertion(ops:OperatorConceptCode a:SuccCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:SuccCode a:Succ)
DataPropertyAssertion(skos-ext:code a:SuccCode "Succ"^^xsd:string)
DataPropertyAssertion(skos:notation a:SuccCode "Succ"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Sum)
ObjectPropertyAssertion(ops:evaluatesAs a:Sum ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Sum a:SumCode)
ClassAssertion(ops:OperatorConceptCode a:SumCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:SumCode a:Sum)
DataPropertyAssertion(skos-ext:code a:SumCode "Sum"^^xsd:string)
DataPropertyAssertion(skos:notation a:SumCode "Sum"^^xsd:string)
ClassAssertion(ops:AggregateOperatorConcept a:Today)
ObjectPropertyAssertion(ops:evaluatesAs a:Today ops:dateType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Today a:TodayCode)
ClassAssertion(ops:OperatorConceptCode a:TodayCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:TodayCode a:Today)
DataPropertyAssertion(skos-ext:code a:TodayCode "Today"^^xsd:string)
DataPropertyAssertion(skos:notation a:TodayCode "Today"^^xsd:string)
ClassAssertion(ops:BinaryOperatorConcept a:TruncatedDivide)
ObjectPropertyAssertion(ops:evaluatesAs a:TruncatedDivide ops:intType)
ObjectPropertyAssertion(ops:firstOperandType a:TruncatedDivide ops:numberType)
ObjectPropertyAssertion(ops:secondOperandType a:TruncatedDivide ops:numberType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:TruncatedDivide a:TruncatedDivideCode)
ClassAssertion(ops:OperatorConceptCode a:TruncatedDivideCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:TruncatedDivideCode a:TruncatedDivide)
DataPropertyAssertion(skos-ext:code a:TruncatedDivideCode "TruncatedDivide"^^xsd:string)
DataPropertyAssertion(skos:notation a:TruncatedDivideCode "TruncatedDivide"^^xsd:string)
ObjectPropertyAssertion(ops:evaluatesAs a:Union ops:listType)
ObjectPropertyAssertion(ops:hasOperandType a:Union ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Union a:UnionCode)
ClassAssertion(ops:OperatorConceptCode a:UnionCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:UnionCode a:Union)
DataPropertyAssertion(skos-ext:code a:UnionCode "Union"^^xsd:string)
DataPropertyAssertion(skos:notation a:UnionCode "Union"^^xsd:string)
ClassAssertion(ops:UnaryOperatorConcept a:Upper)
ObjectPropertyAssertion(ops:evaluatesAs a:Upper ops:stringType)
ObjectPropertyAssertion(ops:firstOperandType a:Upper ops:stringType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Upper a:UpperCode)
ClassAssertion(ops:OperatorConceptCode a:UpperCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:UpperCode a:Upper)
DataPropertyAssertion(skos-ext:code a:UpperCode "Upper"^^xsd:string)
DataPropertyAssertion(skos:notation a:UpperCode "Upper"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:ValueSet)
ObjectPropertyAssertion(ops:evaluatesAs a:ValueSet ops:listType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:ValueSet a:ValueSetCode)
ClassAssertion(ops:OperatorConceptCode a:ValueSetCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:ValueSetCode a:ValueSet)
DataPropertyAssertion(skos-ext:code a:ValueSetCode "ValueSet"^^xsd:string)
DataPropertyAssertion(skos:notation a:ValueSetCode "ValueSet"^^xsd:string)
ClassAssertion(ops:NAryOperatorConcept a:Within)
ObjectPropertyAssertion(ops:evaluatesAs a:Within ops:booleanType)
ObjectPropertyAssertion(skos-ext:conceptDenotedBy a:Within a:WithinCode)
ClassAssertion(ops:OperatorConceptCode a:WithinCode)
ObjectPropertyAssertion(skos-ext:denotesConcept a:WithinCode a:Within)
DataPropertyAssertion(skos-ext:code a:WithinCode "Within"^^xsd:string)
DataPropertyAssertion(skos:notation a:WithinCode "Within"^^xsd:string)
DisjointClasses(ops:Variable a:CodeLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ForEachExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:StringLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:UnionExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IndexerExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:DateAddExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:LastExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:NegateExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ObjectRedefineExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ProperContainsExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:GreaterExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IsEmptyExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:AfterExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:DivideExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:SuccExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ObjectDescriptorExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:DistinctExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:SubstringExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:PropertyExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ParameterRefExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:InExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:RealLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ClinicalRequestExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:AbsExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:CurrentExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:NullExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ModuloExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:CeilingExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:TruncatedDivideExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IntersectExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:DatePartExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:SubsumesExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:RealIntervalLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:SortExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ListExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:AllTrueExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:UrlLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:TimestampIntervalLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:MeetsExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:InValueSetExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IsNotEmptyExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:EndExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:SumExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:SimpleCodeLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:CaseExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IntegerIntervalLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:AnyTrueExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:NowExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IdentifierLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:BooleanLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ExpressionRefExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:PhysicalQuantityIntervalLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:SplitExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:MaxExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:PosExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:GreaterOrEqualExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:LengthExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:RoundExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IsExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:PeriodLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:TodayExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:LiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:DateExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:EqualExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:MinExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:OrExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ConcatExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:LessExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:DataRequestExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:PredExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IntervalExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:AvgExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:CodedOrdinalLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ConvertExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:DifferenceExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:FirstExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:LogExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ValueSetExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:NotEqualExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:CombineExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:SetSubsumesExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:QuantityIntervalLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:PowerExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:BeginExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ObjectExpressionExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IntegerLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:WithinExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:MultiplyExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:BeforeExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IfNullExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ContainsExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:TimestampLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ConditionalExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:LowerExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:UpperExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IsNullExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:AndExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:OverlapsExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:PhysicalQuantityLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:RatioLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:FloorExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:DateDiffExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:LessOrEqualExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:LnExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:CoalesceExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:EntityNameLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:NotExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ProperInExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:SubtractExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:AsExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:AddressLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:IndexOfExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:ComplexLiteralExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:FilterExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:AddExpression skos:Collection skos:Concept skos:ConceptScheme)
DisjointClasses(ops:Variable a:CountExpression skos:Collection skos:Concept skos:ConceptScheme)
)