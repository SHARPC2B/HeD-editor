Prefix(:=<http://asu.edu/sharpc2b/ops#>)
Prefix(ops:=<http://asu.edu/sharpc2b/ops#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://asu.edu/sharpc2b/ops>
Import(<http://asu.edu/sharpc2b/skos-ext>)

Declaration(Class(:AggregateIteratorExpression))
SubClassOf(:AggregateIteratorExpression :IteratorExpression)
Declaration(Class(:AggregateOperatorConcept))
SubClassOf(:AggregateOperatorConcept :OperatorConcept)
Declaration(Class(:Any))
EquivalentClasses(:Any ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :anyType))
SubClassOf(:Any :TypeConcept)
Declaration(Class(:Attribute))
Declaration(Class(:Bag))
EquivalentClasses(:Bag ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :bagType))
SubClassOf(:Bag :CollectionType)
Declaration(Class(:BinaryExpression))
SubClassOf(:BinaryExpression :CardinalExpression)
SubClassOf(:BinaryExpression ObjectExactCardinality(1 :firstOperand))
SubClassOf(:BinaryExpression ObjectExactCardinality(1 :secondOperand))
Declaration(Class(:BinaryOperatorConcept))
SubClassOf(:BinaryOperatorConcept :OperatorConcept)
Declaration(Class(:BooleanExpression))
EquivalentClasses(:BooleanExpression ObjectSomeValuesFrom(:returns :BooleanType))
SubClassOf(:BooleanExpression :ScalarExpression)
Declaration(Class(:BooleanType))
EquivalentClasses(:BooleanType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :booleanType))
SubClassOf(:BooleanType :Primitive)
Declaration(Class(:CardinalExpression))
SubClassOf(:CardinalExpression :SharpExpression)
Declaration(Class(:ClassExpression))
EquivalentClasses(:ClassExpression ObjectSomeValuesFrom(:returns :ClassType))
SubClassOf(:ClassExpression :ScalarExpression)
Declaration(Class(:ClassType))
EquivalentClasses(:ClassType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :classType))
SubClassOf(:ClassType :TypeConcept)
Declaration(Class(:ClinicalRequestExpression))
SubClassOf(:ClinicalRequestExpression :RequestExpression)
SubClassOf(:ClinicalRequestExpression ObjectSomeValuesFrom(:hasAttribute ObjectIntersectionOf(:Attribute DataHasValue(:attributeName "datatype"^^xsd:string) DataHasValue(:attributeType "xsd:anyURI"^^xsd:string))))
SubClassOf(:ClinicalRequestExpression ObjectSomeValuesFrom(:hasAttribute ObjectIntersectionOf(:Attribute DataHasValue(:attributeName "dateProperty"^^xsd:string) DataHasValue(:attributeType "xsd:anyURI"^^xsd:string))))
SubClassOf(:ClinicalRequestExpression ObjectSomeValuesFrom(:hasAttribute ObjectIntersectionOf(:Attribute DataHasValue(:attributeName "singleCardinality"^^xsd:string) DataHasValue(:attributeType "xsd:boolean"^^xsd:string))))
SubClassOf(:ClinicalRequestExpression ObjectSomeValuesFrom(:returns :CollectionType))
Declaration(Class(:CodeType))
EquivalentClasses(:CodeType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :codeType))
SubClassOf(:CodeType :TypeConcept)
Declaration(Class(:CollectionExpression))
EquivalentClasses(:CollectionExpression ObjectSomeValuesFrom(:returns :CollectionType))
SubClassOf(:CollectionExpression :TypedExpression)
Declaration(Class(:CollectionType))
EquivalentClasses(:CollectionType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :collectionType))
SubClassOf(:CollectionType :DataType)
Declaration(Class(:CreateExpression))
EquivalentClasses(:CreateExpression ObjectIntersectionOf(:OperatorExpression ObjectSomeValuesFrom(:extraOperand :PropertySetExpression) ObjectSomeValuesFrom(:firstOperand :DomainClassExpression) ObjectSomeValuesFrom(:opCode ObjectIntersectionOf(DataHasValue(<http://www.w3.org/2004/02/skos/core#notation> "New"^^xsd:string) :OperatorConceptCode))))
SubClassOf(:CreateExpression :NAryExpression)
SubClassOf(:CreateExpression :ObjectExpression)
SubClassOf(:CreateExpression :OperatorExpression)
SubClassOf(:CreateExpression ObjectAllValuesFrom(:extraOperand :PropertySetExpression))
SubClassOf(:CreateExpression ObjectAllValuesFrom(:firstOperand :DomainClassExpression))
SubClassOf(:CreateExpression ObjectAllValuesFrom(:opCode ObjectIntersectionOf(DataHasValue(<http://www.w3.org/2004/02/skos/core#notation> "New"^^xsd:string) :OperatorConceptCode)))
Declaration(Class(:DataType))
EquivalentClasses(:DataType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :dataType))
SubClassOf(:DataType :TypeConcept)
Declaration(Class(:DateExpression))
EquivalentClasses(:DateExpression ObjectSomeValuesFrom(:returns :DateType))
SubClassOf(:DateExpression :ScalarExpression)
Declaration(Class(:DateGranularityExpression))
SubClassOf(:DateGranularityExpression :ScalarExpression)
Declaration(Class(:DateGranularityType))
EquivalentClasses(:DateGranularityType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :dateGranularityType))
SubClassOf(:DateGranularityType :DataType)
Declaration(Class(:DateType))
EquivalentClasses(:DateType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :dateType))
SubClassOf(:DateType :Primitive)
Declaration(Class(:DomainClass))
SubClassOf(:DomainClass :DomainConcept)
SubClassOf(:DomainClass :ObjectType)
SubClassOf(:DomainClass ObjectSomeValuesFrom(:evaluatesAs :ObjectType))
Declaration(Class(:DomainClassExpression))
SubClassOf(:DomainClassExpression :LiteralExpression)
SubClassOf(:DomainClassExpression ObjectSomeValuesFrom(:returns :DomainClass))
Declaration(Class(:DomainConcept))
SubClassOf(:DomainConcept <http://asu.edu/sharpc2b/skos-ext#CodedConcept>)
DisjointClasses(:DomainConcept :OperatorConcept)
Declaration(Class(:DomainProperty))
SubClassOf(:DomainProperty :DomainConcept)
SubClassOf(:DomainProperty :PropertyType)
Declaration(Class(:DomainPropertyExpression))
SubClassOf(:DomainPropertyExpression :LiteralExpression)
SubClassOf(:DomainPropertyExpression ObjectSomeValuesFrom(:returns :DomainProperty))
Declaration(Class(:DurationType))
EquivalentClasses(:DurationType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :timeDurationType))
SubClassOf(:DurationType :Primitive)
Declaration(Class(:IntegerExpression))
EquivalentClasses(:IntegerExpression ObjectSomeValuesFrom(:returns :IntegerType))
SubClassOf(:IntegerExpression :RealExpression)
Declaration(Class(:IntegerType))
EquivalentClasses(:IntegerType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :intType))
SubClassOf(:IntegerType :RealType)
Declaration(Class(:IntervalExpression))
SubClassOf(:IntervalExpression :TypedExpression)
Declaration(Class(:IntervalType))
EquivalentClasses(:IntervalType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :intervalType))
SubClassOf(:IntervalType :DataType)
Declaration(Class(:IteratorExpression))
SubClassOf(:IteratorExpression :OperatorExpression)
SubClassOf(:IteratorExpression ObjectExactCardinality(1 :source))
DisjointUnion(:IteratorExpression :SingleIteratorExpression :AggregateIteratorExpression)
Declaration(Class(:List))
EquivalentClasses(:List ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :listType))
SubClassOf(:List :Sequence)
Declaration(Class(:ListExpression))
EquivalentClasses(:ListExpression ObjectSomeValuesFrom(:returns :List))
SubClassOf(:ListExpression :CollectionExpression)
Declaration(Class(:LiteralExpression))
SubClassOf(:LiteralExpression :NullaryExpression)
SubClassOf(:LiteralExpression :SharpExpression)
Declaration(Class(:Map))
EquivalentClasses(:Map ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :mapType))
SubClassOf(:Map :CollectionType)
Declaration(Class(:NAryExpression))
SubClassOf(:NAryExpression :CardinalExpression)
SubClassOf(:NAryExpression ObjectMinCardinality(1 :hasOperand))
Declaration(Class(:NAryOperatorConcept))
SubClassOf(:NAryOperatorConcept :OperatorConcept)
Declaration(Class(:NullExpression))
SubClassOf(:NullExpression :ScalarExpression)
Declaration(Class(:NullLiteralExpression))
EquivalentClasses(:NullLiteralExpression ObjectOneOf(:nil))
SubClassOf(:NullLiteralExpression :LiteralExpression)
SubClassOf(:NullLiteralExpression :NullExpression)
SubClassOf(:NullLiteralExpression ObjectSomeValuesFrom(:returns :NullType))
Declaration(Class(:NullType))
EquivalentClasses(:NullType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :nullType))
SubClassOf(:NullType :TypeConcept)
Declaration(Class(:NullaryExpression))
SubClassOf(:NullaryExpression :CardinalExpression)
Declaration(Class(:NumberExpression))
EquivalentClasses(:NumberExpression ObjectSomeValuesFrom(:returns :NumberType))
SubClassOf(:NumberExpression :ScalarExpression)
Declaration(Class(:NumberType))
EquivalentClasses(:NumberType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :numberType))
SubClassOf(:NumberType :Primitive)
Declaration(Class(:ObjectExpression))
EquivalentClasses(:ObjectExpression ObjectSomeValuesFrom(:returns :ObjectType))
SubClassOf(:ObjectExpression :TypedExpression)
Declaration(Class(:ObjectType))
EquivalentClasses(:ObjectType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :objectType))
SubClassOf(:ObjectType :TypeConcept)
Declaration(Class(:OperatorConcept))
SubClassOf(:OperatorConcept <http://asu.edu/sharpc2b/skos-ext#CodedConcept>)
DisjointClasses(:OperatorConcept :DomainConcept)
Declaration(Class(:OperatorConceptCode))
SubClassOf(:OperatorConceptCode <http://asu.edu/sharpc2b/skos-ext#ConceptCode>)
Declaration(Class(:OperatorExpression))
SubClassOf(:OperatorExpression :SharpExpression)
Declaration(Class(:OrderedSet))
EquivalentClasses(:OrderedSet ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :orderedSetType))
SubClassOf(:OrderedSet :Set)
Declaration(Class(:Primitive))
EquivalentClasses(:Primitive ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :primitiveType))
SubClassOf(:Primitive :DataType)
Declaration(Class(:PrimitiveExpression))
SubClassOf(:PrimitiveExpression :LiteralExpression)
Declaration(Class(:PropertyExpression))
SubClassOf(:PropertyExpression :SharpExpression)
Declaration(Class(:PropertyGetExpression))
EquivalentClasses(:PropertyGetExpression ObjectIntersectionOf(:OperatorExpression ObjectSomeValuesFrom(:firstOperand :ObjectExpression) ObjectSomeValuesFrom(:opCode ObjectIntersectionOf(DataHasValue(<http://www.w3.org/2004/02/skos/core#notation> "Get"^^xsd:string) :OperatorConceptCode)) ObjectSomeValuesFrom(:secondOperand :DomainPropertyExpression)))
SubClassOf(:PropertyGetExpression :BinaryExpression)
SubClassOf(:PropertyGetExpression :PropertyExpression)
SubClassOf(:PropertyGetExpression ObjectAllValuesFrom(:firstOperand :ObjectExpression))
SubClassOf(:PropertyGetExpression ObjectAllValuesFrom(:opCode ObjectIntersectionOf(DataHasValue(<http://www.w3.org/2004/02/skos/core#notation> "Get"^^xsd:string) :OperatorConceptCode)))
SubClassOf(:PropertyGetExpression ObjectAllValuesFrom(:secondOperand :DomainPropertyExpression))
Declaration(Class(:PropertySetExpression))
EquivalentClasses(:PropertySetExpression ObjectIntersectionOf(:OperatorExpression ObjectSomeValuesFrom(:firstOperand :SharpExpression) ObjectSomeValuesFrom(:opCode ObjectIntersectionOf(DataHasValue(<http://www.w3.org/2004/02/skos/core#notation> "Set"^^xsd:string) :OperatorConceptCode)) ObjectSomeValuesFrom(:secondOperand :DomainPropertyExpression)))
SubClassOf(:PropertySetExpression :BinaryExpression)
SubClassOf(:PropertySetExpression :PropertyExpression)
SubClassOf(:PropertySetExpression ObjectSomeValuesFrom(:returns :PropertyType))
SubClassOf(:PropertySetExpression ObjectAllValuesFrom(:firstOperand :SharpExpression))
SubClassOf(:PropertySetExpression ObjectAllValuesFrom(:opCode ObjectIntersectionOf(DataHasValue(<http://www.w3.org/2004/02/skos/core#notation> "Set"^^xsd:string) :OperatorConceptCode)))
SubClassOf(:PropertySetExpression ObjectAllValuesFrom(:secondOperand :DomainPropertyExpression))
Declaration(Class(:PropertyType))
EquivalentClasses(:PropertyType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :propertyType))
SubClassOf(:PropertyType :TypeConcept)
Declaration(Class(:RealExpression))
EquivalentClasses(:RealExpression ObjectSomeValuesFrom(:returns :RealType))
SubClassOf(:RealExpression :NumberExpression)
Declaration(Class(:RealType))
EquivalentClasses(:RealType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :realType))
SubClassOf(:RealType :NumberType)
Declaration(Class(:RequestExpression))
SubClassOf(:RequestExpression :SharpExpression)
Declaration(Class(:ScalarExpression))
SubClassOf(:ScalarExpression :TypedExpression)
Declaration(Class(:Sequence))
EquivalentClasses(:Sequence ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :sequenceType))
SubClassOf(:Sequence :CollectionType)
Declaration(Class(:Set))
EquivalentClasses(:Set ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :setType))
SubClassOf(:Set :CollectionType)
Declaration(Class(:SetExpression))
EquivalentClasses(:SetExpression ObjectSomeValuesFrom(:returns :Set))
SubClassOf(:SetExpression :CollectionExpression)
Declaration(Class(:SharpExpression))
Declaration(Class(:SingleIteratorExpression))
SubClassOf(:SingleIteratorExpression :IteratorExpression)
Declaration(Class(:StringExpression))
EquivalentClasses(:StringExpression ObjectSomeValuesFrom(:returns :StringType))
SubClassOf(:StringExpression :ScalarExpression)
Declaration(Class(:StringType))
EquivalentClasses(:StringType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :stringType))
SubClassOf(:StringType :Primitive)
Declaration(Class(:TernaryExpression))
SubClassOf(:TernaryExpression :CardinalExpression)
SubClassOf(:TernaryExpression ObjectExactCardinality(1 :firstOperand))
SubClassOf(:TernaryExpression ObjectExactCardinality(1 :secondOperand))
SubClassOf(:TernaryExpression ObjectExactCardinality(1 :thirdOperand))
Declaration(Class(:TernaryOperatorConcept))
SubClassOf(:TernaryOperatorConcept :OperatorConcept)
Declaration(Class(:TimeDurationExpression))
SubClassOf(:TimeDurationExpression :ScalarExpression)
Declaration(Class(:TimestampExpression))
EquivalentClasses(:TimestampExpression ObjectSomeValuesFrom(:returns :TimestampType))
SubClassOf(:TimestampExpression :ScalarExpression)
Declaration(Class(:TimestampType))
EquivalentClasses(:TimestampType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :timestampType))
SubClassOf(:TimestampType :Primitive)
Declaration(Class(:TypeConcept))
SubClassOf(:TypeConcept <http://www.w3.org/2004/02/skos/core#Concept>)
Declaration(Class(:TypedExpression))
SubClassOf(:TypedExpression :SharpExpression)
Declaration(Class(:UnaryExpression))
SubClassOf(:UnaryExpression :CardinalExpression)
SubClassOf(:UnaryExpression ObjectExactCardinality(1 :firstOperand))
Declaration(Class(:UnaryOperatorConcept))
SubClassOf(:UnaryOperatorConcept :OperatorConcept)
Declaration(Class(:Variable))
Declaration(Class(:VariableExpression))
SubClassOf(:VariableExpression :SharpExpression)
SubClassOf(:VariableExpression ObjectExactCardinality(1 :referredVariable))
Declaration(Class(:Void))
EquivalentClasses(:Void ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :voidType))
SubClassOf(:Void :TypeConcept)
Declaration(Class(<http://asu.edu/sharpc2b/skos-ext#CodedConcept>))
SubClassOf(<http://asu.edu/sharpc2b/skos-ext#CodedConcept> <http://www.w3.org/2004/02/skos/core#Concept>)
SubClassOf(<http://asu.edu/sharpc2b/skos-ext#CodedConcept> DataSomeValuesFrom(<http://www.w3.org/2004/02/skos/core#notation> xsd:string))
Declaration(Class(<http://asu.edu/sharpc2b/skos-ext#ConceptCode>))
SubClassOf(<http://asu.edu/sharpc2b/skos-ext#ConceptCode> :LiteralExpression)
SubClassOf(<http://asu.edu/sharpc2b/skos-ext#ConceptCode> ObjectIntersectionOf(ObjectAllValuesFrom(<http://asu.edu/sharpc2b/skos-ext#denotesConcept> <http://asu.edu/sharpc2b/skos-ext#CodedConcept>) ObjectSomeValuesFrom(<http://asu.edu/sharpc2b/skos-ext#denotesConcept> <http://asu.edu/sharpc2b/skos-ext#CodedConcept>)))
Declaration(ObjectProperty(:argument))
ObjectPropertyDomain(:argument :Variable)
ObjectPropertyRange(:argument :VariableExpression)
Declaration(ObjectProperty(:body))
ObjectPropertyDomain(:body :IteratorExpression)
ObjectPropertyRange(:body :SharpExpression)
Declaration(ObjectProperty(:classCode))
SubObjectPropertyOf(:classCode :hasCode)
ObjectPropertyDomain(:classCode :ClassExpression)
ObjectPropertyRange(:classCode <http://asu.edu/sharpc2b/skos-ext#ConceptCode>)
Declaration(ObjectProperty(:evaluatesAs))
ObjectPropertyDomain(:evaluatesAs <http://asu.edu/sharpc2b/skos-ext#CodedConcept>)
ObjectPropertyRange(:evaluatesAs :TypeConcept)
Declaration(ObjectProperty(:exprType))
ObjectPropertyDomain(:exprType :Variable)
ObjectPropertyRange(:exprType <http://asu.edu/sharpc2b/skos-ext#CodedConcept>)
Declaration(ObjectProperty(:extraOperand))
SubObjectPropertyOf(:extraOperand :hasOperand)
ObjectPropertyDomain(:extraOperand :OperatorExpression)
ObjectPropertyRange(:extraOperand :SharpExpression)
Declaration(ObjectProperty(:firstOperand))
SubObjectPropertyOf(:firstOperand :hasOperand)
ObjectPropertyDomain(:firstOperand :OperatorExpression)
ObjectPropertyRange(:firstOperand :SharpExpression)
Declaration(ObjectProperty(:firstOperandType))
SubObjectPropertyOf(:firstOperandType :hasOperandType)
ObjectPropertyDomain(:firstOperandType :OperatorConcept)
ObjectPropertyRange(:firstOperandType :TypeConcept)
Declaration(ObjectProperty(:hasAttribute))
ObjectPropertyDomain(:hasAttribute :SharpExpression)
ObjectPropertyRange(:hasAttribute :Attribute)
Declaration(ObjectProperty(:hasCode))
ObjectPropertyDomain(:hasCode :SharpExpression)
ObjectPropertyRange(:hasCode <http://asu.edu/sharpc2b/skos-ext#ConceptCode>)
Declaration(ObjectProperty(:hasOperand))
AsymmetricObjectProperty(:hasOperand)
IrreflexiveObjectProperty(:hasOperand)
ObjectPropertyDomain(:hasOperand :OperatorExpression)
ObjectPropertyRange(:hasOperand :SharpExpression)
Declaration(ObjectProperty(:hasOperandType))
ObjectPropertyDomain(:hasOperandType :OperatorConcept)
ObjectPropertyRange(:hasOperandType :TypeConcept)
Declaration(ObjectProperty(:hasOperator))
ObjectPropertyDomain(:hasOperator :OperatorExpression)
ObjectPropertyRange(:hasOperator :OperatorConcept)
Declaration(ObjectProperty(:iterator))
ObjectPropertyDomain(:iterator :IteratorExpression)
ObjectPropertyRange(:iterator :Variable)
Declaration(ObjectProperty(:opCode))
SubObjectPropertyOf(:opCode :hasCode)
ObjectPropertyDomain(:opCode :OperatorExpression)
ObjectPropertyRange(:opCode <http://asu.edu/sharpc2b/skos-ext#ConceptCode>)
Declaration(ObjectProperty(:propCode))
SubObjectPropertyOf(:propCode :hasCode)
ObjectPropertyDomain(:propCode :PropertyExpression)
ObjectPropertyRange(:propCode <http://asu.edu/sharpc2b/skos-ext#ConceptCode>)
Declaration(ObjectProperty(:referredVariable))
ObjectPropertyDomain(:referredVariable :VariableExpression)
Declaration(ObjectProperty(:returns))
ObjectPropertyDomain(:returns :SharpExpression)
ObjectPropertyRange(:returns :TypeConcept)
Declaration(ObjectProperty(:secondOperand))
SubObjectPropertyOf(:secondOperand :hasOperand)
ObjectPropertyDomain(:secondOperand :OperatorExpression)
ObjectPropertyRange(:secondOperand :SharpExpression)
Declaration(ObjectProperty(:secondOperandType))
SubObjectPropertyOf(:secondOperandType :hasOperandType)
ObjectPropertyDomain(:secondOperandType :OperatorConcept)
ObjectPropertyRange(:secondOperandType :TypeConcept)
Declaration(ObjectProperty(:source))
SubObjectPropertyOf(:source owl:topObjectProperty)
ObjectPropertyDomain(:source ObjectUnionOf(:IteratorExpression :PropertyExpression :VariableExpression))
ObjectPropertyRange(:source :SharpExpression)
Declaration(ObjectProperty(:thirdOperand))
SubObjectPropertyOf(:thirdOperand :hasOperand)
ObjectPropertyDomain(:thirdOperand :OperatorExpression)
ObjectPropertyRange(:thirdOperand :SharpExpression)
Declaration(ObjectProperty(:thirdOperandType))
SubObjectPropertyOf(:thirdOperandType :hasOperandType)
ObjectPropertyDomain(:thirdOperandType :OperatorConcept)
ObjectPropertyRange(:thirdOperandType :TypeConcept)
Declaration(DataProperty(:attributeName))
DataPropertyDomain(:attributeName :Attribute)
DataPropertyRange(:attributeName xsd:string)
Declaration(DataProperty(:attributeType))
DataPropertyDomain(:attributeType :Attribute)
DataPropertyRange(:attributeType xsd:string)
Declaration(DataProperty(:attributeValue))
DataPropertyDomain(:attributeValue :Attribute)
DataPropertyRange(:attributeValue rdfs:Literal)
Declaration(DataProperty(:representation))
DataPropertyDomain(:representation :SharpExpression)
DataPropertyRange(:representation xsd:string)
Declaration(NamedIndividual(:anyType))
ClassAssertion(:Any :anyType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :anyType "ANY")
Declaration(NamedIndividual(:bagType))
ClassAssertion(:Bag :bagType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :bagType :collectionType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :bagType "BAG")
Declaration(NamedIndividual(:booleanType))
ClassAssertion(:BooleanType :booleanType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :booleanType :primitiveType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :booleanType "BOOL")
Declaration(NamedIndividual(:classType))
ClassAssertion(:ClassType :classType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :classType "CLASS")
Declaration(NamedIndividual(:codeType))
ClassAssertion(:CodeType :codeType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :codeType "CODE")
Declaration(NamedIndividual(:collectionType))
ClassAssertion(:CollectionType :collectionType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :collectionType :dataType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :collectionType "COLLECTION")
Declaration(NamedIndividual(:dataType))
ClassAssertion(:DataType :dataType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :dataType "DATATYPE")
Declaration(NamedIndividual(:dateGranularityType))
ClassAssertion(:DateGranularityType :dateGranularityType)
Declaration(NamedIndividual(:dateType))
ClassAssertion(:DateType :dateType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :dateType :primitiveType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :dateType "DATETIME")
Declaration(NamedIndividual(:intType))
ClassAssertion(:IntegerType :intType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :intType :realType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :intType "INT")
Declaration(NamedIndividual(:intervalType))
ClassAssertion(:IntervalType :intervalType)
Declaration(NamedIndividual(:listType))
ClassAssertion(:List :listType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :listType :sequenceType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :listType "LIST")
Declaration(NamedIndividual(:mapType))
ClassAssertion(:Map :mapType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :mapType :collectionType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :mapType "MAP")
Declaration(NamedIndividual(:nil))
ClassAssertion(:NullLiteralExpression :nil)
Declaration(NamedIndividual(:nullType))
ClassAssertion(:NullType :nullType)
Declaration(NamedIndividual(:numberType))
ClassAssertion(:NumberType :numberType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :numberType :primitiveType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :numberType "NUMBER")
Declaration(NamedIndividual(:objectType))
ClassAssertion(:ObjectType :objectType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :objectType "OBJECT")
Declaration(NamedIndividual(:orderedSetType))
ClassAssertion(:OrderedSet :orderedSetType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :orderedSetType :setType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :orderedSetType "ORDSET")
Declaration(NamedIndividual(:primitiveType))
ClassAssertion(:Primitive :primitiveType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :primitiveType :dataType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :primitiveType "PRIM")
Declaration(NamedIndividual(:propertyType))
ClassAssertion(:PropertyType :propertyType)
Declaration(NamedIndividual(:realType))
ClassAssertion(:RealType :realType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :realType :numberType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :realType "REAL")
Declaration(NamedIndividual(:scalarType))
ClassAssertion(:Primitive :scalarType)
Declaration(NamedIndividual(:sequenceType))
ClassAssertion(:Sequence :sequenceType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :sequenceType :collectionType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :sequenceType "SEQ")
Declaration(NamedIndividual(:setType))
ClassAssertion(:Set :setType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :setType :collectionType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :setType "SET")
Declaration(NamedIndividual(:stringType))
ClassAssertion(:StringType :stringType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :stringType :primitiveType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :stringType "STRING")
Declaration(NamedIndividual(:timeDurationType))
ClassAssertion(:DurationType :timeDurationType)
Declaration(NamedIndividual(:timestampType))
ClassAssertion(:TimestampType :timestampType)
Declaration(NamedIndividual(:voidType))
ClassAssertion(:Void :voidType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :voidType "VOID")
SubObjectPropertyOf(ObjectPropertyChain(:classCode <http://asu.edu/sharpc2b/skos-ext#denotesConcept> :evaluatesAs) :returns)
DisjointClasses(:SharpExpression <http://www.w3.org/2004/02/skos/core#Collection> <http://www.w3.org/2004/02/skos/core#ConceptScheme>)
SubObjectPropertyOf(ObjectPropertyChain(:opCode <http://asu.edu/sharpc2b/skos-ext#denotesConcept>) :hasOperator)
SubObjectPropertyOf(ObjectPropertyChain(:propCode <http://asu.edu/sharpc2b/skos-ext#denotesConcept> :evaluatesAs) :returns)
DisjointClasses(:LiteralExpression :PropertyExpression :VariableExpression)
)
