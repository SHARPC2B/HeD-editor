Prefix(dct:=<http://purl.org/dc/terms/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(skos:=<http://www.w3.org/2004/02/skos/core#>)


Ontology(<http://www.w3.org/2004/02/skos/core>
Annotation(dct:contributor "Dave Beckett")
Annotation(dct:creator "Alistair Miles")
Annotation(rdfs:seeAlso <http://www.w3.org/TR/skos-reference/>)
Annotation(dct:contributor "Nikki Rogers")
Annotation(dct:description "An RDF vocabulary for describing the basic structure and content of concept schemes such as thesauri, classification schemes, subject heading lists, taxonomies, 'folksonomies', other types of controlled vocabulary, and also concept schemes embedded in glossaries and terminologies."@en)
Annotation(dct:creator "Sean Bechhofer")
Annotation(dct:contributor "Participants in W3C's Semantic Web Deployment Working Group.")
Annotation(dct:title "SKOS Vocabulary"@en)

Declaration(Class(skos:Collection))
AnnotationAssertion(rdfs:isDefinedBy skos:Collection <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:definition skos:Collection "A meaningful collection of concepts."@en)
AnnotationAssertion(skos:scopeNote skos:Collection "Labelled collections can be used where you would like a set of concepts to be displayed under a 'node label' in the hierarchy."@en)
AnnotationAssertion(rdfs:label skos:Collection "Collection"@en)
Declaration(Class(skos:Concept))
AnnotationAssertion(rdfs:label skos:Concept "Concept"@en)
AnnotationAssertion(rdfs:isDefinedBy skos:Concept <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:definition skos:Concept "An idea or notion; a unit of thought."@en)
DisjointClasses(skos:Concept skos:ConceptScheme)
Declaration(Class(skos:ConceptScheme))
AnnotationAssertion(skos:example skos:ConceptScheme "Thesauri, classification schemes, subject heading lists, taxonomies, 'folksonomies', and other types of controlled vocabulary are all examples of concept schemes. Concept schemes are also embedded in glossaries and terminologies."@en)
AnnotationAssertion(rdfs:label skos:ConceptScheme "Concept Scheme"@en)
AnnotationAssertion(skos:scopeNote skos:ConceptScheme "A concept scheme may be defined to include concepts from different sources."@en)
AnnotationAssertion(rdfs:isDefinedBy skos:ConceptScheme <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:definition skos:ConceptScheme "A set of concepts, optionally including statements about semantic relationships between those concepts."@en)
DisjointClasses(skos:ConceptScheme skos:Concept)
Declaration(Class(skos:OrderedCollection))
AnnotationAssertion(rdfs:isDefinedBy skos:OrderedCollection <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:definition skos:OrderedCollection "An ordered collection of concepts, where both the grouping and the ordering are meaningful."@en)
AnnotationAssertion(skos:scopeNote skos:OrderedCollection "Ordered collections can be used where you would like a set of concepts to be displayed in a specific order, and optionally under a 'node label'."@en)
AnnotationAssertion(rdfs:label skos:OrderedCollection "Ordered Collection"@en)
SubClassOf(skos:OrderedCollection skos:Collection)
Declaration(ObjectProperty(skos:broadMatch))
AnnotationAssertion(skos:definition skos:broadMatch "skos:broadMatch is used to state a hierarchical mapping link between two conceptual resources in different concept schemes."@en)
AnnotationAssertion(rdfs:isDefinedBy skos:broadMatch <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:label skos:broadMatch "has broader match"@en)
SubObjectPropertyOf(skos:broadMatch skos:broader)
SubObjectPropertyOf(skos:broadMatch skos:mappingRelation)
InverseObjectProperties(skos:broadMatch skos:narrowMatch)
Declaration(ObjectProperty(skos:broader))
AnnotationAssertion(skos:scopeNote skos:broader "By convention, skos:broader is only used to assert an immediate (i.e. direct) hierarchical link between two conceptual resources."@en)
AnnotationAssertion(skos:definition skos:broader "Relates a concept to a concept that is more general in meaning."@en)
AnnotationAssertion(rdfs:isDefinedBy skos:broader <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:label skos:broader "has broader"@en)
AnnotationAssertion(rdfs:comment skos:broader "Broader concepts are typically rendered as parents in a concept hierarchy (tree)."@en)
SubObjectPropertyOf(skos:broader skos:broaderTransitive)
InverseObjectProperties(skos:broader skos:narrower)
Declaration(ObjectProperty(skos:broaderTransitive))
AnnotationAssertion(rdfs:isDefinedBy skos:broaderTransitive <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:label skos:broaderTransitive "has broader transitive"@en)
AnnotationAssertion(skos:scopeNote skos:broaderTransitive "By convention, skos:broaderTransitive is not used to make assertions. Rather, the properties can be used to draw inferences about the transitive closure of the hierarchical relation, which is useful e.g. when implementing a simple query expansion algorithm in a search application."@en)
AnnotationAssertion(skos:definition skos:broaderTransitive "skos:broaderTransitive is a transitive superproperty of skos:broader.")
SubObjectPropertyOf(skos:broaderTransitive skos:semanticRelation)
InverseObjectProperties(skos:narrowerTransitive skos:broaderTransitive)
TransitiveObjectProperty(skos:broaderTransitive)
Declaration(ObjectProperty(skos:closeMatch))
AnnotationAssertion(skos:definition skos:closeMatch "skos:closeMatch is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications. In order to avoid the possibility of \"compound errors\" when combining mappings across more than two concept schemes, skos:closeMatch is not declared to be a transitive property."@en)
AnnotationAssertion(rdfs:label skos:closeMatch "has close match"@en)
AnnotationAssertion(rdfs:isDefinedBy skos:closeMatch <http://www.w3.org/2004/02/skos/core>)
SubObjectPropertyOf(skos:closeMatch skos:mappingRelation)
SymmetricObjectProperty(skos:closeMatch)
Declaration(ObjectProperty(skos:exactMatch))
AnnotationAssertion(rdfs:label skos:exactMatch "has exact match"@en)
AnnotationAssertion(rdfs:comment skos:exactMatch "skos:exactMatch is disjoint with each of the properties skos:broadMatch and skos:relatedMatch."@en)
AnnotationAssertion(rdfs:isDefinedBy skos:exactMatch <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:definition skos:exactMatch "skos:exactMatch is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications. skos:exactMatch is a transitive property, and is a sub-property of skos:closeMatch."@en)
SubObjectPropertyOf(skos:exactMatch skos:closeMatch)
SymmetricObjectProperty(skos:exactMatch)
TransitiveObjectProperty(skos:exactMatch)
Declaration(ObjectProperty(skos:hasTopConcept))
AnnotationAssertion(rdfs:isDefinedBy skos:hasTopConcept <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:label skos:hasTopConcept "has top concept"@en)
AnnotationAssertion(skos:definition skos:hasTopConcept "Relates, by convention, a concept scheme to a concept which is topmost in the broader/narrower concept hierarchies for that scheme, providing an entry point to these hierarchies."@en)
InverseObjectProperties(skos:hasTopConcept skos:topConceptOf)
ObjectPropertyDomain(skos:hasTopConcept skos:ConceptScheme)
ObjectPropertyRange(skos:hasTopConcept skos:Concept)
Declaration(ObjectProperty(skos:inScheme))
AnnotationAssertion(rdfs:isDefinedBy skos:inScheme <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:scopeNote skos:inScheme "A concept may be a member of more than one concept scheme."@en)
AnnotationAssertion(rdfs:label skos:inScheme "is in scheme"@en)
AnnotationAssertion(skos:definition skos:inScheme "Relates a resource (for example a concept) to a concept scheme in which it is included."@en)
ObjectPropertyRange(skos:inScheme skos:ConceptScheme)
Declaration(ObjectProperty(skos:mappingRelation))
AnnotationAssertion(rdfs:isDefinedBy skos:mappingRelation <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:definition skos:mappingRelation "Relates two concepts coming, by convention, from different schemes, and that have comparable meanings"@en)
AnnotationAssertion(rdfs:label skos:mappingRelation "is in mapping relation with"@en)
AnnotationAssertion(rdfs:comment skos:mappingRelation "These concept mapping relations mirror semantic relations, and the data model defined below is similar (with the exception of skos:exactMatch) to the data model defined for semantic relations. A distinct vocabulary is provided for concept mapping relations, to provide a convenient way to differentiate links within a concept scheme from links between concept schemes. However, this pattern of usage is not a formal requirement of the SKOS data model, and relies on informal definitions of best practice."@en)
SubObjectPropertyOf(skos:mappingRelation skos:semanticRelation)
Declaration(ObjectProperty(skos:member))
AnnotationAssertion(skos:definition skos:member "Relates a collection to one of its members."@en)
AnnotationAssertion(rdfs:isDefinedBy skos:member <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:label skos:member "has member"@en)
ObjectPropertyDomain(skos:member skos:Collection)
ObjectPropertyRange(skos:member ObjectUnionOf(skos:Concept skos:Collection))
Declaration(ObjectProperty(skos:memberList))
AnnotationAssertion(skos:definition skos:memberList "Relates an ordered collection to the RDF list containing its members."@en)
AnnotationAssertion(rdfs:isDefinedBy skos:memberList <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:label skos:memberList "has member list"@en)
AnnotationAssertion(rdfs:comment skos:memberList "For any resource, every item in the list given as the value of the
      skos:memberList property is also a value of the skos:member property."@en)
FunctionalObjectProperty(skos:memberList)
ObjectPropertyDomain(skos:memberList skos:OrderedCollection)
ObjectPropertyRange(skos:memberList rdf:List)
Declaration(ObjectProperty(skos:narrowMatch))
AnnotationAssertion(rdfs:label skos:narrowMatch "has narrower match"@en)
AnnotationAssertion(rdfs:isDefinedBy skos:narrowMatch <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:definition skos:narrowMatch "skos:narrowMatch is used to state a hierarchical mapping link between two conceptual resources in different concept schemes."@en)
SubObjectPropertyOf(skos:narrowMatch skos:mappingRelation)
SubObjectPropertyOf(skos:narrowMatch skos:narrower)
InverseObjectProperties(skos:broadMatch skos:narrowMatch)
Declaration(ObjectProperty(skos:narrower))
AnnotationAssertion(rdfs:label skos:narrower "has narrower"@en)
AnnotationAssertion(skos:scopeNote skos:narrower "By convention, skos:broader is only used to assert an immediate (i.e. direct) hierarchical link between two conceptual resources."@en)
AnnotationAssertion(rdfs:comment skos:narrower "Narrower concepts are typically rendered as children in a concept hierarchy (tree)."@en)
AnnotationAssertion(skos:definition skos:narrower "Relates a concept to a concept that is more specific in meaning."@en)
AnnotationAssertion(rdfs:isDefinedBy skos:narrower <http://www.w3.org/2004/02/skos/core>)
SubObjectPropertyOf(skos:narrower skos:narrowerTransitive)
InverseObjectProperties(skos:broader skos:narrower)
Declaration(ObjectProperty(skos:narrowerTransitive))
AnnotationAssertion(rdfs:label skos:narrowerTransitive "has narrower transitive"@en)
AnnotationAssertion(rdfs:isDefinedBy skos:narrowerTransitive <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:definition skos:narrowerTransitive "skos:narrowerTransitive is a transitive superproperty of skos:narrower.")
AnnotationAssertion(skos:scopeNote skos:narrowerTransitive "By convention, skos:narrowerTransitive is not used to make assertions. Rather, the properties can be used to draw inferences about the transitive closure of the hierarchical relation, which is useful e.g. when implementing a simple query expansion algorithm in a search application."@en)
SubObjectPropertyOf(skos:narrowerTransitive skos:semanticRelation)
InverseObjectProperties(skos:narrowerTransitive skos:broaderTransitive)
TransitiveObjectProperty(skos:narrowerTransitive)
Declaration(ObjectProperty(skos:related))
AnnotationAssertion(rdfs:isDefinedBy skos:related <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:comment skos:related "skos:related is disjoint with skos:broaderTransitive"@en)
AnnotationAssertion(skos:definition skos:related "Relates a concept to a concept with which there is an associative semantic relationship."@en)
AnnotationAssertion(rdfs:label skos:related "has related"@en)
SubObjectPropertyOf(skos:related skos:semanticRelation)
SymmetricObjectProperty(skos:related)
Declaration(ObjectProperty(skos:relatedMatch))
AnnotationAssertion(skos:definition skos:relatedMatch "skos:relatedMatch is used to state an associative mapping link between two conceptual resources in different concept schemes."@en)
AnnotationAssertion(rdfs:label skos:relatedMatch "has related match"@en)
AnnotationAssertion(rdfs:isDefinedBy skos:relatedMatch <http://www.w3.org/2004/02/skos/core>)
SubObjectPropertyOf(skos:relatedMatch skos:mappingRelation)
SubObjectPropertyOf(skos:relatedMatch skos:related)
SymmetricObjectProperty(skos:relatedMatch)
Declaration(ObjectProperty(skos:semanticRelation))
AnnotationAssertion(rdfs:label skos:semanticRelation "is in semantic relation with"@en)
AnnotationAssertion(skos:scopeNote skos:semanticRelation "This property should not be used directly, but as a super-property for all properties denoting a relationship of meaning between concepts."@en)
AnnotationAssertion(rdfs:isDefinedBy skos:semanticRelation <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:definition skos:semanticRelation "Links a concept to a concept related by meaning."@en)
ObjectPropertyDomain(skos:semanticRelation skos:Concept)
ObjectPropertyRange(skos:semanticRelation skos:Concept)
Declaration(ObjectProperty(skos:topConceptOf))
AnnotationAssertion(rdfs:isDefinedBy skos:topConceptOf <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:definition skos:topConceptOf "Relates a concept to the concept scheme that it is a top level concept of."@en)
AnnotationAssertion(rdfs:label skos:topConceptOf "is top concept in scheme"@en)
SubObjectPropertyOf(skos:topConceptOf skos:inScheme)
InverseObjectProperties(skos:hasTopConcept skos:topConceptOf)
ObjectPropertyDomain(skos:topConceptOf skos:Concept)
ObjectPropertyRange(skos:topConceptOf skos:ConceptScheme)
Declaration(DataProperty(skos:notation))
AnnotationAssertion(skos:scopeNote skos:notation "By convention, skos:notation is used with a typed literal in the object position of the triple."@en)
AnnotationAssertion(skos:definition skos:notation "A notation, also known as classification code, is a string of characters such as \"T58.5\" or \"303.4833\" used to uniquely identify a concept within the scope of a given concept scheme."@en)
AnnotationAssertion(rdfs:label skos:notation "notation"@en)
AnnotationAssertion(rdfs:isDefinedBy skos:notation <http://www.w3.org/2004/02/skos/core>)
DataPropertyRange(skos:notation xsd:string)
Declaration(AnnotationProperty(skos:altLabel))
AnnotationAssertion(rdfs:comment skos:altLabel "skos:prefLabel, skos:altLabel and skos:hiddenLabel are pairwise disjoint properties."@en)
AnnotationAssertion(rdfs:comment skos:altLabel "The range of skos:altLabel is the class of RDF plain literals."@en)
AnnotationAssertion(rdfs:isDefinedBy skos:altLabel <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:label skos:altLabel "alternative label"@en)
AnnotationAssertion(skos:definition skos:altLabel "An alternative lexical label for a resource."@en)
AnnotationAssertion(skos:example skos:altLabel "Acronyms, abbreviations, spelling variants, and irregular plural/singular forms may be included among the alternative labels for a concept. Mis-spelled terms are normally included as hidden labels (see skos:hiddenLabel)."@en)
SubAnnotationPropertyOf(skos:altLabel rdfs:label)
Declaration(AnnotationProperty(skos:changeNote))
AnnotationAssertion(rdfs:isDefinedBy skos:changeNote <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:label skos:changeNote "change note"@en)
AnnotationAssertion(skos:definition skos:changeNote "A note about a modification to a concept."@en)
SubAnnotationPropertyOf(skos:changeNote skos:note)
Declaration(AnnotationProperty(skos:definition))
AnnotationAssertion(skos:definition skos:definition "A statement or formal explanation of the meaning of a concept."@en)
AnnotationAssertion(rdfs:label skos:definition "definition"@en)
AnnotationAssertion(rdfs:isDefinedBy skos:definition <http://www.w3.org/2004/02/skos/core>)
SubAnnotationPropertyOf(skos:definition skos:note)
Declaration(AnnotationProperty(skos:editorialNote))
AnnotationAssertion(rdfs:isDefinedBy skos:editorialNote <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(skos:definition skos:editorialNote "A note for an editor, translator or maintainer of the vocabulary."@en)
AnnotationAssertion(rdfs:label skos:editorialNote "editorial note"@en)
SubAnnotationPropertyOf(skos:editorialNote skos:note)
Declaration(AnnotationProperty(skos:example))
AnnotationAssertion(rdfs:isDefinedBy skos:example <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:label skos:example "example"@en)
AnnotationAssertion(skos:definition skos:example "An example of the use of a concept."@en)
SubAnnotationPropertyOf(skos:example skos:note)
Declaration(AnnotationProperty(skos:hiddenLabel))
AnnotationAssertion(rdfs:isDefinedBy skos:hiddenLabel <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:comment skos:hiddenLabel "The range of skos:hiddenLabel is the class of RDF plain literals."@en)
AnnotationAssertion(rdfs:comment skos:hiddenLabel "skos:prefLabel, skos:altLabel and skos:hiddenLabel are pairwise disjoint properties."@en)
AnnotationAssertion(skos:definition skos:hiddenLabel "A lexical label for a resource that should be hidden when generating visual displays of the resource, but should still be accessible to free text search operations."@en)
AnnotationAssertion(rdfs:label skos:hiddenLabel "hidden label"@en)
SubAnnotationPropertyOf(skos:hiddenLabel rdfs:label)
Declaration(AnnotationProperty(skos:historyNote))
AnnotationAssertion(skos:definition skos:historyNote "A note about the past state/use/meaning of a concept."@en)
AnnotationAssertion(rdfs:isDefinedBy skos:historyNote <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:label skos:historyNote "history note"@en)
SubAnnotationPropertyOf(skos:historyNote skos:note)
Declaration(AnnotationProperty(skos:note))
AnnotationAssertion(rdfs:isDefinedBy skos:note <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:label skos:note "note"@en)
AnnotationAssertion(skos:scopeNote skos:note "This property may be used directly, or as a super-property for more specific note types."@en)
AnnotationAssertion(skos:definition skos:note "A general note, for any purpose."@en)
Declaration(AnnotationProperty(skos:prefLabel))
AnnotationAssertion(rdfs:label skos:prefLabel "preferred label"@en)
AnnotationAssertion(rdfs:isDefinedBy skos:prefLabel <http://www.w3.org/2004/02/skos/core>)
AnnotationAssertion(rdfs:comment skos:prefLabel "The range of skos:prefLabel is the class of RDF plain literals."@en)
AnnotationAssertion(rdfs:comment skos:prefLabel "skos:prefLabel, skos:altLabel and skos:hiddenLabel are pairwise
      disjoint properties."@en)
AnnotationAssertion(rdfs:comment skos:prefLabel "A resource has no more than one value of skos:prefLabel per language tag, and no more than one value of skos:prefLabel without language tag."@en)
AnnotationAssertion(skos:definition skos:prefLabel "The preferred lexical label for a resource, in a given language."@en)
SubAnnotationPropertyOf(skos:prefLabel rdfs:label)
Declaration(AnnotationProperty(skos:scopeNote))
AnnotationAssertion(rdfs:label skos:scopeNote "scope note"@en)
AnnotationAssertion(skos:definition skos:scopeNote "A note that helps to clarify the meaning and/or the use of a concept."@en)
AnnotationAssertion(rdfs:isDefinedBy skos:scopeNote <http://www.w3.org/2004/02/skos/core>)
SubAnnotationPropertyOf(skos:scopeNote skos:note)
)
