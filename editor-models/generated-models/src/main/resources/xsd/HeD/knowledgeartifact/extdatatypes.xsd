<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:hl7-org:knowledgeartifact:r1" xmlns:dt="urn:hl7-org:cdsdt:r2" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:xhtml="http://www.w3.org/1999/xhtml" targetNamespace="urn:hl7-org:knowledgeartifact:r1" elementFormDefault="qualified">
	<xs:import namespace="urn:hl7-org:cdsdt:r2" schemaLocation="../common/datatypes.xsd"/>
	<xs:annotation>
		<xs:documentation>
			This file contains additional data types from the ISO-21090 specification that are not defined within the cdsdt namespace, but are useful in defining knowledge artifacts. These additional data types should be moved into the cdsdt namespace at some point.
		</xs:documentation>
	</xs:annotation>
	<!--
		TODO: These types are referenced, but not in our datatypes.xsd
		I'm assuming these are the intended representations, but we should verify.
	-->
	<!--  Removing cs and bl because they cause conflict in generating serializers and deserializers (jaxb). The same names
	in different case are used in datatypes.xsd. Since cs and bl are used in this file only, we'll use the raw string and boolean types there.
	 -->
	<!-- 	<xs:simpleType name="cs">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="bl">
		<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	 -->
	<xs:simpleType name="SetOperator">
		<xs:restriction base="xs:string">
			<xs:enumeration value="I"/>
			<xs:enumeration value="U"/>
			<xs:enumeration value="D"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- END OF ASSUMED TYPES -->
	<xs:simpleType name="CalendarCycle">
		<xs:annotation>
			<xs:documentation>vocSet: D10684 (C-0-D10684-cpt)</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="CalendarCycleOneLetter CalendarCycleTwoLetter"/>
	</xs:simpleType>
	<xs:simpleType name="CalendarCycleOneLetter">
		<xs:annotation>
			<xs:documentation>abstDomain: V10701 (C-0-D10684-V10701-cpt)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="D"/>
			<xs:enumeration value="H"/>
			<xs:enumeration value="J"/>
			<xs:enumeration value="M"/>
			<xs:enumeration value="N"/>
			<xs:enumeration value="S"/>
			<xs:enumeration value="W"/>
			<xs:enumeration value="Y"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CalendarCycleTwoLetter">
		<xs:annotation>
			<xs:documentation>abstDomain: V10685 (C-0-D10684-V10685-cpt)</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="GregorianCalendarCycle">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="CD"/>
					<xs:enumeration value="CH"/>
					<xs:enumeration value="CM"/>
					<xs:enumeration value="CN"/>
					<xs:enumeration value="CS"/>
					<xs:enumeration value="CW"/>
					<xs:enumeration value="CY"/>
					<xs:enumeration value="DM"/>
					<xs:enumeration value="DW"/>
					<xs:enumeration value="DY"/>
					<xs:enumeration value="HD"/>
					<xs:enumeration value="MY"/>
					<xs:enumeration value="NH"/>
					<xs:enumeration value="SN"/>
					<xs:enumeration value="WY"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="GregorianCalendarCycle">
		<xs:annotation>
			<xs:documentation>abstDomain: V10758 (C-0-D10684-V10685-V10758-cpt)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="CompressionAlgorithm">
		<xs:annotation>
			<xs:documentation>vocSet: D10620 (C-0-D10620-cpt)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="DF"/>
			<xs:enumeration value="GZ"/>
			<xs:enumeration value="Z"/>
			<xs:enumeration value="ZL"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="PIVL_TS">
		<xs:annotation>
			<xs:documentation>
            Note: because this type is defined as an extension of SXCM_T,
            all of the attributes and elements accepted for T are also
            accepted by this definition.  However, they are NOT allowed
            by the normative description of this type.  Unfortunately,
            we cannot write a general purpose schematron contraints to
            provide that extra validation, thus applications must be
            aware that instance (fragments) that pass validation with
            this might might still not be legal.
         </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SXCM_TS">
				<xs:sequence>
					<xs:element name="phase" type="dt:IVL_TS" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
                        A prototype of the repeating interval specifying the
                        duration of each occurrence and anchors the periodic
                        interval sequence at a certain point in time.
                     </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="period" type="dt:PQ" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
                        A time duration specifying a reciprocal measure of
                        the frequency at which the periodic interval repeats.
                     </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="alignment" type="CalendarCycle" use="optional">
					<xs:annotation>
						<xs:documentation>
                     Specifies if and how the repetitions are aligned to
                     the cycles of the underlying calendar (e.g., to
                     distinguish every 30 days from "the 5th of every
                     month".) A non-aligned periodic interval recurs
                     independently from the calendar. An aligned periodic
                     interval is synchronized with the calendar.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="institutionSpecified" type="xs:boolean" use="optional" default="false">
					<xs:annotation>
						<xs:documentation>
                     Indicates whether the exact timing is up to the party
                     executing the schedule (e.g., to distinguish "every 8
                     hours" from "3 times a day".)
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SXCM_TS">
		<xs:complexContent>
			<xs:extension base="dt:TS">
				<xs:attribute name="operator" type="SetOperator" use="optional" default="I">
					<xs:annotation>
						<xs:documentation>
                     A code specifying whether the set component is included
                     (union) or excluded (set-difference) from the set, or
                     other set operations with the current set component and
                     the set as constructed from the representation stream
                     up to the current point.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
