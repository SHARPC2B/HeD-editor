Prefix(:=<http://asu.edu/sharpc2b/ops#>)
Prefix(ops:=<http://asu.edu/sharpc2b/ops#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://asu.edu/sharpc2b/ops>
Import(<http://asu.edu/sharpc2b/skos-ext>)

Declaration(Class(:Any))
EquivalentClasses(:Any ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :anyType))
SubClassOf(:Any :TypeConcept)
Declaration(Class(:Bag))
EquivalentClasses(:Bag ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :bagType))
SubClassOf(:Bag :CollectionType)
Declaration(Class(:Boolean))
EquivalentClasses(:Boolean ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :booleanType))
SubClassOf(:Boolean :Primitive)
Declaration(Class(:BooleanExpression))
EquivalentClasses(:BooleanExpression ObjectSomeValuesFrom(:returns :Boolean))
SubClassOf(:BooleanExpression :TypedExpression)
Declaration(Class(:BooleanLiteral))
SubClassOf(:BooleanLiteral :PrimitiveExpression)
SubClassOf(:BooleanLiteral ObjectSomeValuesFrom(:returns :Boolean))
Declaration(Class(:ClassExpression))
EquivalentClasses(:ClassExpression ObjectSomeValuesFrom(:returns :ClassType))
SubClassOf(:ClassExpression :TypedExpression)
Declaration(Class(:ClassType))
EquivalentClasses(:ClassType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :classType))
SubClassOf(:ClassType :TypeConcept)
Declaration(Class(:CollectionExpression))
EquivalentClasses(:CollectionExpression ObjectSomeValuesFrom(:returns :CollectionType))
SubClassOf(:CollectionExpression :TypedExpression)
Declaration(Class(:CollectionType))
EquivalentClasses(:CollectionType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :collectionType))
SubClassOf(:CollectionType :DataType)
Declaration(Class(:DataType))
EquivalentClasses(:DataType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :dataType))
SubClassOf(:DataType :TypeConcept)
Declaration(Class(:Date))
EquivalentClasses(:Date ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :dateType))
SubClassOf(:Date :Primitive)
Declaration(Class(:DateExpression))
EquivalentClasses(:DateExpression ObjectSomeValuesFrom(:returns :Date))
SubClassOf(:DateExpression :TypedExpression)
Declaration(Class(:DateLiteral))
SubClassOf(:DateLiteral :PrimitiveExpression)
SubClassOf(:DateLiteral ObjectSomeValuesFrom(:returns :Date))
Declaration(Class(:DomainClass))
SubClassOf(:DomainClass :DomainConcept)
SubClassOf(:DomainClass :ObjectType)
SubClassOf(:DomainClass ObjectSomeValuesFrom(:evaluatesAs :ObjectType))
Declaration(Class(:DomainConcept))
SubClassOf(:DomainConcept <http://asu.edu/sharpc2b/skos-ext#CodedConcept>)
DisjointClasses(:DomainConcept :OperatorConcept)
Declaration(Class(:DomainProperty))
SubClassOf(:DomainProperty :DomainConcept)
Declaration(Class(:Integer))
EquivalentClasses(:Integer ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :intType))
SubClassOf(:Integer :Real)
Declaration(Class(:IntegerExpression))
EquivalentClasses(:IntegerExpression ObjectSomeValuesFrom(:returns :Integer))
SubClassOf(:IntegerExpression :RealExpression)
Declaration(Class(:IntegerLiteral))
SubClassOf(:IntegerLiteral :PrimitiveExpression)
SubClassOf(:IntegerLiteral ObjectSomeValuesFrom(:returns :Integer))
Declaration(Class(:List))
EquivalentClasses(:List ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :listType))
SubClassOf(:List :Sequence)
Declaration(Class(:LiteralExpression))
SubClassOf(:LiteralExpression :SharpExpression)
DisjointClasses(:LiteralExpression :OperatorExpression)
Declaration(Class(:Map))
EquivalentClasses(:Map ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :mapType))
SubClassOf(:Map :CollectionType)
Declaration(Class(:NullExpression))
SubClassOf(:NullExpression :TypedExpression)
Declaration(Class(:NullLiteralExpression))
EquivalentClasses(:NullLiteralExpression ObjectOneOf(:nil))
SubClassOf(:NullLiteralExpression :LiteralExpression)
SubClassOf(:NullLiteralExpression :NullExpression)
SubClassOf(:NullLiteralExpression ObjectSomeValuesFrom(:returns :NullType))
Declaration(Class(:NullType))
EquivalentClasses(:NullType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :nullType))
SubClassOf(:NullType :TypeConcept)
Declaration(Class(:Number))
EquivalentClasses(:Number ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :numberType))
SubClassOf(:Number :Primitive)
Declaration(Class(:NumberExpression))
EquivalentClasses(:NumberExpression ObjectSomeValuesFrom(:returns :Number))
SubClassOf(:NumberExpression :TypedExpression)
Declaration(Class(:ObjectExpression))
EquivalentClasses(:ObjectExpression ObjectSomeValuesFrom(:returns :ObjectType))
SubClassOf(:ObjectExpression :TypedExpression)
Declaration(Class(:ObjectType))
EquivalentClasses(:ObjectType ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :objectType))
SubClassOf(:ObjectType :TypeConcept)
Declaration(Class(:OperatorConcept))
SubClassOf(:OperatorConcept <http://asu.edu/sharpc2b/skos-ext#CodedConcept>)
DisjointClasses(:OperatorConcept :DomainConcept)
Declaration(Class(:OperatorConceptCode))
SubClassOf(:OperatorConceptCode <http://asu.edu/sharpc2b/skos-ext#ConceptCode>)
Declaration(Class(:OperatorExpression))
SubClassOf(:OperatorExpression :SharpExpression)
DisjointClasses(:OperatorExpression :LiteralExpression)
Declaration(Class(:OrderedSet))
EquivalentClasses(:OrderedSet ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :orderedSetType))
SubClassOf(:OrderedSet :Set)
Declaration(Class(:Primitive))
EquivalentClasses(:Primitive ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :primitiveType))
SubClassOf(:Primitive :DataType)
Declaration(Class(:PrimitiveExpression))
SubClassOf(:PrimitiveExpression :LiteralExpression)
Declaration(Class(:Real))
EquivalentClasses(:Real ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :realType))
SubClassOf(:Real :Number)
Declaration(Class(:RealExpression))
EquivalentClasses(:RealExpression ObjectSomeValuesFrom(:returns :Real))
SubClassOf(:RealExpression :NumberExpression)
Declaration(Class(:RealLiteral))
SubClassOf(:RealLiteral :PrimitiveExpression)
SubClassOf(:RealLiteral ObjectSomeValuesFrom(:returns :Real))
Declaration(Class(:Sequence))
EquivalentClasses(:Sequence ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :sequenceType))
SubClassOf(:Sequence :CollectionType)
Declaration(Class(:Set))
EquivalentClasses(:Set ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :setType))
SubClassOf(:Set :CollectionType)
Declaration(Class(:SharpExpression))
Declaration(Class(:String))
EquivalentClasses(:String ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :stringType))
SubClassOf(:String :Primitive)
Declaration(Class(:StringExpression))
EquivalentClasses(:StringExpression ObjectSomeValuesFrom(:returns :String))
SubClassOf(:StringExpression :TypedExpression)
Declaration(Class(:StringLiteral))
SubClassOf(:StringLiteral :PrimitiveExpression)
SubClassOf(:StringLiteral ObjectSomeValuesFrom(:returns :String))
Declaration(Class(:TypeConcept))
SubClassOf(:TypeConcept <http://www.w3.org/2004/02/skos/core#Concept>)
Declaration(Class(:TypedExpression))
SubClassOf(:TypedExpression :SharpExpression)
Declaration(Class(:Void))
EquivalentClasses(:Void ObjectHasValue(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :voidType))
SubClassOf(:Void :TypeConcept)
Declaration(Class(<http://asu.edu/sharpc2b/skos-ext#CodedConcept>))
SubClassOf(<http://asu.edu/sharpc2b/skos-ext#CodedConcept> <http://www.w3.org/2004/02/skos/core#Concept>)
SubClassOf(<http://asu.edu/sharpc2b/skos-ext#CodedConcept> DataSomeValuesFrom(<http://www.w3.org/2004/02/skos/core#notation> xsd:string))
Declaration(Class(<http://asu.edu/sharpc2b/skos-ext#ConceptCode>))
SubClassOf(<http://asu.edu/sharpc2b/skos-ext#ConceptCode> :LiteralExpression)
SubClassOf(<http://asu.edu/sharpc2b/skos-ext#ConceptCode> ObjectIntersectionOf(ObjectAllValuesFrom(<http://asu.edu/sharpc2b/skos-ext#denotes> <http://asu.edu/sharpc2b/skos-ext#CodedConcept>) ObjectSomeValuesFrom(<http://asu.edu/sharpc2b/skos-ext#denotes> <http://asu.edu/sharpc2b/skos-ext#CodedConcept>)))
Declaration(ObjectProperty(:evaluatesAs))
ObjectPropertyDomain(:evaluatesAs <http://www.w3.org/2004/02/skos/core#Concept>)
ObjectPropertyRange(:evaluatesAs :TypeConcept)
Declaration(ObjectProperty(:hasCode))
ObjectPropertyDomain(:hasCode :SharpExpression)
ObjectPropertyRange(:hasCode <http://asu.edu/sharpc2b/skos-ext#ConceptCode>)
Declaration(ObjectProperty(:hasOperand))
AsymmetricObjectProperty(:hasOperand)
IrreflexiveObjectProperty(:hasOperand)
ObjectPropertyDomain(:hasOperand :OperatorExpression)
ObjectPropertyRange(:hasOperand :SharpExpression)
Declaration(ObjectProperty(:hasOperator))
ObjectPropertyDomain(:hasOperator :OperatorExpression)
ObjectPropertyRange(:hasOperator :OperatorConcept)
Declaration(ObjectProperty(:opCode))
SubObjectPropertyOf(:opCode :hasCode)
ObjectPropertyDomain(:opCode :OperatorExpression)
ObjectPropertyRange(:opCode <http://asu.edu/sharpc2b/skos-ext#ConceptCode>)
Declaration(ObjectProperty(:propCode))
SubObjectPropertyOf(:propCode :hasCode)
ObjectPropertyRange(:propCode <http://asu.edu/sharpc2b/skos-ext#ConceptCode>)
Declaration(ObjectProperty(:returns))
ObjectPropertyDomain(:returns :SharpExpression)
ObjectPropertyRange(:returns :TypeConcept)
Declaration(ObjectProperty(:typeCode))
SubObjectPropertyOf(:typeCode :hasCode)
ObjectPropertyRange(:typeCode <http://asu.edu/sharpc2b/skos-ext#ConceptCode>)
Declaration(DataProperty(:representation))
DataPropertyDomain(:representation :SharpExpression)
DataPropertyRange(:representation xsd:string)
Declaration(NamedIndividual(:anyType))
ClassAssertion(:Any :anyType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :anyType "ANY")
Declaration(NamedIndividual(:bagType))
ClassAssertion(:Bag :bagType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :bagType :collectionType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :bagType "BAG")
Declaration(NamedIndividual(:booleanType))
ClassAssertion(:Boolean :booleanType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :booleanType :primitiveType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :booleanType "BOOL")
Declaration(NamedIndividual(:classType))
ClassAssertion(:ClassType :classType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :classType "CLASS")
Declaration(NamedIndividual(:collectionType))
ClassAssertion(:CollectionType :collectionType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :collectionType :dataType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :collectionType "COLLECTION")
Declaration(NamedIndividual(:dataType))
ClassAssertion(:DataType :dataType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :dataType "DATATYPE")
Declaration(NamedIndividual(:dateType))
ClassAssertion(:Date :dateType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :dateType :primitiveType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :dateType "DATETIME")
Declaration(NamedIndividual(:intType))
ClassAssertion(:Integer :intType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :intType :realType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :intType "INT")
Declaration(NamedIndividual(:listType))
ClassAssertion(:List :listType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :listType :sequenceType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :listType "LIST")
Declaration(NamedIndividual(:mapType))
ClassAssertion(:Map :mapType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :mapType :collectionType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :mapType "MAP")
Declaration(NamedIndividual(:nil))
Declaration(NamedIndividual(:nullType))
ClassAssertion(:NullType :nullType)
Declaration(NamedIndividual(:numberType))
ClassAssertion(:Number :numberType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :numberType :primitiveType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :numberType "NUMBER")
Declaration(NamedIndividual(:objectType))
ClassAssertion(:TypeConcept :objectType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :objectType "OBJECT")
Declaration(NamedIndividual(:orderedSetType))
ClassAssertion(:OrderedSet :orderedSetType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :orderedSetType :setType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :orderedSetType "ORDSET")
Declaration(NamedIndividual(:primitiveType))
ClassAssertion(:Primitive :primitiveType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :primitiveType :dataType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :primitiveType "PRIM")
Declaration(NamedIndividual(:realType))
ClassAssertion(:Real :realType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :realType :numberType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :realType "REAL")
Declaration(NamedIndividual(:sequenceType))
ClassAssertion(:Sequence :sequenceType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :sequenceType :collectionType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :sequenceType "SEQ")
Declaration(NamedIndividual(:setType))
ClassAssertion(:Set :setType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :setType :collectionType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :setType "SET")
Declaration(NamedIndividual(:stringType))
ClassAssertion(:String :stringType)
ObjectPropertyAssertion(<http://asu.edu/sharpc2b/skos-ext#subConceptOf> :stringType :primitiveType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :stringType "STRING")
Declaration(NamedIndividual(:voidType))
ClassAssertion(:Void :voidType)
DataPropertyAssertion(<http://www.w3.org/2004/02/skos/core#notation> :voidType "VOID")
DisjointClasses(:BooleanLiteral :DateLiteral :IntegerLiteral :RealLiteral :StringLiteral <http://asu.edu/sharpc2b/skos-ext#ConceptCode>)
SubObjectPropertyOf(ObjectPropertyChain(:typeCode <http://asu.edu/sharpc2b/skos-ext#denotes> :evaluatesAs) :returns)
SubObjectPropertyOf(ObjectPropertyChain(:opCode <http://asu.edu/sharpc2b/skos-ext#denotes>) :hasOperator)
SubObjectPropertyOf(ObjectPropertyChain(:propCode <http://asu.edu/sharpc2b/skos-ext#denotes> :evaluatesAs) :returns)
DisjointClasses(:ClassExpression :CollectionExpression :DateExpression :NumberExpression :ObjectExpression :StringExpression)
)
