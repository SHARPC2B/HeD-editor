<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2013 JBoss Inc
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<xs:schema elementFormDefault="qualified" targetNamespace="http://www.exampleURI.com/HeD"
           xmlns="http://www.exampleURI.com/HeD" xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:sch="http://www.ascc.net/xml/schematron">
  <xs:annotation>
    <xs:documentation>
      This file adds data types that are not included in
      the
      datatypes-iso21090.xs or are restrictions or extensions of types
      defined in that file.
    </xs:documentation>
  </xs:annotation>

  <!--xs:include schemaLocation="/home/davide/Projects/xs/src/test/resources/datatypes-iso21090.xs" /-->

  <xs:simpleType name="Decimal">
    <xs:restriction base="xs:double" />
  </xs:simpleType>
  
  <xs:complexType name="ANY">  
    <xs:complexContent>
      <xs:extension base="HXIT">
        <xs:attribute name="nullFlavor" type="NullFlavor" use="optional"/>
        <xs:attribute name="flavorId" type="xs:string" use="optional"/>
        <xs:attribute name="updateMode" type="UpdateMode" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType abstract="true" name="HXIT">
    <xs:attribute name="validTimeLow" type="xs:string" use="optional"/>
    <xs:attribute name="validTimeHigh" type="xs:string" use="optional"/>
    <xs:attribute name="controlInformationRoot" type="Uid" use="optional"/>
    <xs:attribute name="controlInformationExtension" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:simpleType name="NullFlavor">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NI"/>
      <xs:enumeration value="INV"/>
      <xs:enumeration value="OTH"/>
      <xs:enumeration value="NINF"/>
      <xs:enumeration value="PINF"/>
      <xs:enumeration value="UNC"/>
      <xs:enumeration value="DER"/>
      <xs:enumeration value="UNK"/>
      <xs:enumeration value="ASKU"/>
      <xs:enumeration value="NAV"/>
      <xs:enumeration value="NASK"/>
      <xs:enumeration value="QS"/>
      <xs:enumeration value="TRC"/>
      <xs:enumeration value="MSK"/>
      <xs:enumeration value="NA"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="UpdateMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="A"/>
      <xs:enumeration value="D"/>
      <xs:enumeration value="R"/>
      <xs:enumeration value="AR"/>
      <xs:enumeration value="N"/>
      <xs:enumeration value="U"/>
      <xs:enumeration value="K"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Uid">
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:complexType name="XReference">
    <xs:attribute name="xref" type="xs:IDREF" use="required" />
  </xs:complexType>


  <xs:simpleType name="CodingRationale">
    <xs:restriction base="xs:string">
      <xs:enumeration value="O"/>
      <xs:enumeration value="P"/>
      <xs:enumeration value="R"/>
      <xs:enumeration value="OR"/>
      <xs:enumeration value="PR"/>
    </xs:restriction>
  </xs:simpleType>


  <xs:complexType name="CD">
    <xs:complexContent>
      <xs:extension base="ANY">
        <xs:sequence>
          <xs:choice>
            <xs:element name="foo" type="ST" minOccurs="0" maxOccurs="1"/>
          </xs:choice>
          <xs:element name="displayName" type="ST" minOccurs="0" maxOccurs="1"/>
          <xs:element name="originalText" type="ED" minOccurs="0" maxOccurs="1"/>
          <xs:element name="translation" type="CD" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="source" type="XReference" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="code" type="xs:string" use="optional"/>
        <xs:attribute name="codeSystem" type="Uid" use="optional"/>
        <xs:attribute name="codeSystemName" type="xs:string" use="optional"/>
        <xs:attribute name="codeSystemVersion" type="xs:string" use="optional"/>
        <xs:attribute name="valueSet" type="Uid" use="optional"/>
        <xs:attribute name="valueSetVersion" type="xs:string" use="optional"/>
        <xs:attribute name="codingRationale" type="CodingRationale" use="optional"/>
        <xs:attribute name="id" type="xs:ID" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="Code">
    <xs:restriction base="xs:string" />
  </xs:simpleType>


  <xs:complexType name="ST">
    <xs:complexContent>
      <xs:extension base="ANY">
        <xs:sequence>
          <xs:element name="translation" type="ST" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="value" type="xs:string" use="optional"/>
        <xs:attribute name="language" type="Code" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ED">
    <xs:complexContent>
      <xs:extension base="ANY">
        <xs:sequence>
          <xs:element name="data" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/>
          <xs:element name="xml" type="xs:anyType" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="language" type="Code" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>


<!-- This is where the original document started -->




















































  <xs:complexType name="IVL_RTO">
    <xs:annotation>
      <xs:documentation>A set of consecutive values of an ordered base
        datatype.

        Any ordered type can be the basis of an IVL; it does not
        matter whether
        the base type is discrete or continuous. If the base
        datatype is
        only partially ordered, all elements of the IVL must be
        elements of
        a totally ordered subset of the partially ordered
        datatype. For
        example, PQ is considered ordered. However the ordering
        of PQs is
        only partial; a total order is only defined among
        comparable
        quantities (quantities of the same physical dimension).
        While IVLs
        between 2 and 4 meter exists, there is no IVL between 2
        meters and 4
        seconds.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ANY">
        <xs:attributeGroup ref="ATTR_RTO_LOW">
          <xs:annotation>
            <xs:documentation>This is the low limit. If the low limit is not
              known, it may be null.
              The low limit SHALL NOT be positive
              infinity.
            </xs:documentation>
          </xs:annotation>
        </xs:attributeGroup>
        <xs:attributeGroup ref="ATTR_RTO_HIGH">
          <xs:annotation>
            <xs:documentation>This is the high limit. If the high limit is
              not
              known, it may be null.
              The high limit SHALL NOT be negative
              infinity, and SHALL be higher
              than the low limit if one exists.
            </xs:documentation>
          </xs:annotation>
        </xs:attributeGroup>
        <xs:attribute name="lowIsInclusive" type="xs:boolean"
                      use="optional">
          <xs:annotation>
            <xs:documentation>This attribute is called lowIsClosed in the ISO
              21090 specification.

              Whether low is included in the IVL (is
              closed) or excluded from the IVL
              (is open).
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="highIsInclusive" type="xs:boolean"
                      use="optional">
          <xs:annotation>
            <xs:documentation>This attribute is called highIsClosed in the
              ISO
              21090 specification.

              Whether high is included in the IVL (is
              closed) or excluded from the IVL
              (is open).
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:attributeGroup name="ATTR_PQ_HIGH">
    <xs:annotation>
      <xs:documentation>Attribute group defining a IVL_PQ high value
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="highValue" type="Decimal" use="required">
      <xs:annotation>
        <xs:documentation>The number which is multiplied by the unit to
          make the PQ.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="highUnit" type="Code" use="required">
      <xs:annotation>
        <xs:documentation>The unit of measure specified in the Unified Code
          for Units of Measure (UCUM).
          UCUM defines two forms of expression, case sensitive and case
          insensitive. PQ uses the case sensitive codes. The codeSystem OID
          for the case sensitive form is 2.16.840.1.113883.6.8. The default
          value for unit is the UCUM code "1" (unity).
          Equality of physical quantities does not require the values and units to be
          equal independently. Value and unit is only how we represent
          physical quantities. For example, 1 m equals 100 cm. Although the
          units are different and the values are different, the physical
          quantities are equal. Therefore one should never expect a
          particular unit for a physical quantity but instead allow for
          automated conversion between different comparable units.
          The unit SHALL come from UCUM, which only specifies unambiguous
          measurement units. Sometimes it is not clear how some measurements
          in healthcare map to UCUM codes.
          Note: The general pattern for a measurement is value unit of Thing. In
          this scheme, the PQ represents the value and the unit, and the
          Thing is described by some coded concept that is linked to the PQ
          by the context of use. This maps obviously to some measurements,
          such as Patient Body Temperature of 37 Celsius, and 250 mg/day of
          Salicylate.
          However for some measurements that arise in healthcare, the scheme is not
          so obvious. Two classic examples are 5 Drinks of Beer, and 3
          Acetaminophen tablets. At first glance it is tempting to classify
          these measurements like this: 5 drinks of Beer and 3 Acetaminophen
          tablets. The problem with this is that UCUM does not support units
          of "beer", "tablets" or "scoops".
          The reason for this is that neither tablets or scoops are proper
          units. What kind of tablets? How big is the glass? In these kinds
          of cases, the concept that appears to be a unit needs to further
          specified before interoperability is established. If a correct
          amount is required, then it is generally appropriate to specify an
          exact measurement with an appropriate UCUM unit. If this is not
          possible, then the concept is not part of the measurement. UCUM
          provides a unit called unity for use in these cases. The proper way
          to understand these measurements as 3 1 Acetaminophen tablets,
          where 1 is the UCUM unit for unity, and the Thing has a qualifier.
          The context of use will need to provide the extra qualifying
          information.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="ATTR_RTO">
    <xs:annotation>
      <xs:documentation>Attribute group defining a RTO numerator and
        denominator values</xs:documentation>
    </xs:annotation>
    <xs:attribute name="numerator" type="Decimal" use="required">
      <xs:annotation>
        <xs:documentation>The quantity that is being divided in the ratio.
          This represents the numerator.expression.value from the ISO21090
          datatypes.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="denominator" type="Decimal" use="required">
      <xs:annotation>
        <xs:documentation>The quantity that divides the numerator in the
          ratio.
          The denominator SHALL not be zero. This represents the
          denominator.expression.value from the ISO 21090 datatypes.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="ATTR_RTO_LOW">
    <xs:annotation>
      <xs:documentation>Attribute group defining a RTO numerator and
        denominator values</xs:documentation>
    </xs:annotation>
    <xs:attribute name="lowNumerator" type="Decimal" use="required">
      <xs:annotation>
        <xs:documentation>The quantity that is being divided in the ratio.
          This represents the numerator.expression.value from the ISO21090
          datatypes.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="lowDenominator" type="Decimal" use="required">
      <xs:annotation>
        <xs:documentation>The quantity that divides the numerator in the
          ratio.
          The denominator SHALL not be zero. This represents the
          denominator.expression.value from the ISO 21090 datatypes.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="ATTR_RTO_HIGH">
    <xs:annotation>
      <xs:documentation>Attribute group defining a RTO numerator and
        denominator values</xs:documentation>
    </xs:annotation>
    <xs:attribute name="highNumerator" type="Decimal" use="required">
      <xs:annotation>
        <xs:documentation>The quantity that is being divided in the ratio.
          This represents the numerator.expression.value from the ISO21090
          datatypes.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="highDenominator" type="Decimal"
                  use="required">
      <xs:annotation>
        <xs:documentation>The quantity that divides the numerator in the
          ratio.
          The denominator SHALL not be zero. This represents the
          denominator.expression.value from the ISO 21090 datatypes.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

</xs:schema>

